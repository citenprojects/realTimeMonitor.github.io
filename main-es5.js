(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./$$_lazy_route_resource lazy recursive":
/*!******************************************************!*\
  !*** ./$$_lazy_route_resource lazy namespace object ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!**************************************************!*\
  !*** ./node_modules/moment/locale sync ^\.\/.*$ ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": "./node_modules/moment/locale/af.js",
	"./af.js": "./node_modules/moment/locale/af.js",
	"./ar": "./node_modules/moment/locale/ar.js",
	"./ar-dz": "./node_modules/moment/locale/ar-dz.js",
	"./ar-dz.js": "./node_modules/moment/locale/ar-dz.js",
	"./ar-kw": "./node_modules/moment/locale/ar-kw.js",
	"./ar-kw.js": "./node_modules/moment/locale/ar-kw.js",
	"./ar-ly": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ly.js": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ma": "./node_modules/moment/locale/ar-ma.js",
	"./ar-ma.js": "./node_modules/moment/locale/ar-ma.js",
	"./ar-sa": "./node_modules/moment/locale/ar-sa.js",
	"./ar-sa.js": "./node_modules/moment/locale/ar-sa.js",
	"./ar-tn": "./node_modules/moment/locale/ar-tn.js",
	"./ar-tn.js": "./node_modules/moment/locale/ar-tn.js",
	"./ar.js": "./node_modules/moment/locale/ar.js",
	"./az": "./node_modules/moment/locale/az.js",
	"./az.js": "./node_modules/moment/locale/az.js",
	"./be": "./node_modules/moment/locale/be.js",
	"./be.js": "./node_modules/moment/locale/be.js",
	"./bg": "./node_modules/moment/locale/bg.js",
	"./bg.js": "./node_modules/moment/locale/bg.js",
	"./bm": "./node_modules/moment/locale/bm.js",
	"./bm.js": "./node_modules/moment/locale/bm.js",
	"./bn": "./node_modules/moment/locale/bn.js",
	"./bn.js": "./node_modules/moment/locale/bn.js",
	"./bo": "./node_modules/moment/locale/bo.js",
	"./bo.js": "./node_modules/moment/locale/bo.js",
	"./br": "./node_modules/moment/locale/br.js",
	"./br.js": "./node_modules/moment/locale/br.js",
	"./bs": "./node_modules/moment/locale/bs.js",
	"./bs.js": "./node_modules/moment/locale/bs.js",
	"./ca": "./node_modules/moment/locale/ca.js",
	"./ca.js": "./node_modules/moment/locale/ca.js",
	"./cs": "./node_modules/moment/locale/cs.js",
	"./cs.js": "./node_modules/moment/locale/cs.js",
	"./cv": "./node_modules/moment/locale/cv.js",
	"./cv.js": "./node_modules/moment/locale/cv.js",
	"./cy": "./node_modules/moment/locale/cy.js",
	"./cy.js": "./node_modules/moment/locale/cy.js",
	"./da": "./node_modules/moment/locale/da.js",
	"./da.js": "./node_modules/moment/locale/da.js",
	"./de": "./node_modules/moment/locale/de.js",
	"./de-at": "./node_modules/moment/locale/de-at.js",
	"./de-at.js": "./node_modules/moment/locale/de-at.js",
	"./de-ch": "./node_modules/moment/locale/de-ch.js",
	"./de-ch.js": "./node_modules/moment/locale/de-ch.js",
	"./de.js": "./node_modules/moment/locale/de.js",
	"./dv": "./node_modules/moment/locale/dv.js",
	"./dv.js": "./node_modules/moment/locale/dv.js",
	"./el": "./node_modules/moment/locale/el.js",
	"./el.js": "./node_modules/moment/locale/el.js",
	"./en-SG": "./node_modules/moment/locale/en-SG.js",
	"./en-SG.js": "./node_modules/moment/locale/en-SG.js",
	"./en-au": "./node_modules/moment/locale/en-au.js",
	"./en-au.js": "./node_modules/moment/locale/en-au.js",
	"./en-ca": "./node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "./node_modules/moment/locale/en-ca.js",
	"./en-gb": "./node_modules/moment/locale/en-gb.js",
	"./en-gb.js": "./node_modules/moment/locale/en-gb.js",
	"./en-ie": "./node_modules/moment/locale/en-ie.js",
	"./en-ie.js": "./node_modules/moment/locale/en-ie.js",
	"./en-il": "./node_modules/moment/locale/en-il.js",
	"./en-il.js": "./node_modules/moment/locale/en-il.js",
	"./en-nz": "./node_modules/moment/locale/en-nz.js",
	"./en-nz.js": "./node_modules/moment/locale/en-nz.js",
	"./eo": "./node_modules/moment/locale/eo.js",
	"./eo.js": "./node_modules/moment/locale/eo.js",
	"./es": "./node_modules/moment/locale/es.js",
	"./es-do": "./node_modules/moment/locale/es-do.js",
	"./es-do.js": "./node_modules/moment/locale/es-do.js",
	"./es-us": "./node_modules/moment/locale/es-us.js",
	"./es-us.js": "./node_modules/moment/locale/es-us.js",
	"./es.js": "./node_modules/moment/locale/es.js",
	"./et": "./node_modules/moment/locale/et.js",
	"./et.js": "./node_modules/moment/locale/et.js",
	"./eu": "./node_modules/moment/locale/eu.js",
	"./eu.js": "./node_modules/moment/locale/eu.js",
	"./fa": "./node_modules/moment/locale/fa.js",
	"./fa.js": "./node_modules/moment/locale/fa.js",
	"./fi": "./node_modules/moment/locale/fi.js",
	"./fi.js": "./node_modules/moment/locale/fi.js",
	"./fo": "./node_modules/moment/locale/fo.js",
	"./fo.js": "./node_modules/moment/locale/fo.js",
	"./fr": "./node_modules/moment/locale/fr.js",
	"./fr-ca": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ca.js": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ch": "./node_modules/moment/locale/fr-ch.js",
	"./fr-ch.js": "./node_modules/moment/locale/fr-ch.js",
	"./fr.js": "./node_modules/moment/locale/fr.js",
	"./fy": "./node_modules/moment/locale/fy.js",
	"./fy.js": "./node_modules/moment/locale/fy.js",
	"./ga": "./node_modules/moment/locale/ga.js",
	"./ga.js": "./node_modules/moment/locale/ga.js",
	"./gd": "./node_modules/moment/locale/gd.js",
	"./gd.js": "./node_modules/moment/locale/gd.js",
	"./gl": "./node_modules/moment/locale/gl.js",
	"./gl.js": "./node_modules/moment/locale/gl.js",
	"./gom-latn": "./node_modules/moment/locale/gom-latn.js",
	"./gom-latn.js": "./node_modules/moment/locale/gom-latn.js",
	"./gu": "./node_modules/moment/locale/gu.js",
	"./gu.js": "./node_modules/moment/locale/gu.js",
	"./he": "./node_modules/moment/locale/he.js",
	"./he.js": "./node_modules/moment/locale/he.js",
	"./hi": "./node_modules/moment/locale/hi.js",
	"./hi.js": "./node_modules/moment/locale/hi.js",
	"./hr": "./node_modules/moment/locale/hr.js",
	"./hr.js": "./node_modules/moment/locale/hr.js",
	"./hu": "./node_modules/moment/locale/hu.js",
	"./hu.js": "./node_modules/moment/locale/hu.js",
	"./hy-am": "./node_modules/moment/locale/hy-am.js",
	"./hy-am.js": "./node_modules/moment/locale/hy-am.js",
	"./id": "./node_modules/moment/locale/id.js",
	"./id.js": "./node_modules/moment/locale/id.js",
	"./is": "./node_modules/moment/locale/is.js",
	"./is.js": "./node_modules/moment/locale/is.js",
	"./it": "./node_modules/moment/locale/it.js",
	"./it-ch": "./node_modules/moment/locale/it-ch.js",
	"./it-ch.js": "./node_modules/moment/locale/it-ch.js",
	"./it.js": "./node_modules/moment/locale/it.js",
	"./ja": "./node_modules/moment/locale/ja.js",
	"./ja.js": "./node_modules/moment/locale/ja.js",
	"./jv": "./node_modules/moment/locale/jv.js",
	"./jv.js": "./node_modules/moment/locale/jv.js",
	"./ka": "./node_modules/moment/locale/ka.js",
	"./ka.js": "./node_modules/moment/locale/ka.js",
	"./kk": "./node_modules/moment/locale/kk.js",
	"./kk.js": "./node_modules/moment/locale/kk.js",
	"./km": "./node_modules/moment/locale/km.js",
	"./km.js": "./node_modules/moment/locale/km.js",
	"./kn": "./node_modules/moment/locale/kn.js",
	"./kn.js": "./node_modules/moment/locale/kn.js",
	"./ko": "./node_modules/moment/locale/ko.js",
	"./ko.js": "./node_modules/moment/locale/ko.js",
	"./ku": "./node_modules/moment/locale/ku.js",
	"./ku.js": "./node_modules/moment/locale/ku.js",
	"./ky": "./node_modules/moment/locale/ky.js",
	"./ky.js": "./node_modules/moment/locale/ky.js",
	"./lb": "./node_modules/moment/locale/lb.js",
	"./lb.js": "./node_modules/moment/locale/lb.js",
	"./lo": "./node_modules/moment/locale/lo.js",
	"./lo.js": "./node_modules/moment/locale/lo.js",
	"./lt": "./node_modules/moment/locale/lt.js",
	"./lt.js": "./node_modules/moment/locale/lt.js",
	"./lv": "./node_modules/moment/locale/lv.js",
	"./lv.js": "./node_modules/moment/locale/lv.js",
	"./me": "./node_modules/moment/locale/me.js",
	"./me.js": "./node_modules/moment/locale/me.js",
	"./mi": "./node_modules/moment/locale/mi.js",
	"./mi.js": "./node_modules/moment/locale/mi.js",
	"./mk": "./node_modules/moment/locale/mk.js",
	"./mk.js": "./node_modules/moment/locale/mk.js",
	"./ml": "./node_modules/moment/locale/ml.js",
	"./ml.js": "./node_modules/moment/locale/ml.js",
	"./mn": "./node_modules/moment/locale/mn.js",
	"./mn.js": "./node_modules/moment/locale/mn.js",
	"./mr": "./node_modules/moment/locale/mr.js",
	"./mr.js": "./node_modules/moment/locale/mr.js",
	"./ms": "./node_modules/moment/locale/ms.js",
	"./ms-my": "./node_modules/moment/locale/ms-my.js",
	"./ms-my.js": "./node_modules/moment/locale/ms-my.js",
	"./ms.js": "./node_modules/moment/locale/ms.js",
	"./mt": "./node_modules/moment/locale/mt.js",
	"./mt.js": "./node_modules/moment/locale/mt.js",
	"./my": "./node_modules/moment/locale/my.js",
	"./my.js": "./node_modules/moment/locale/my.js",
	"./nb": "./node_modules/moment/locale/nb.js",
	"./nb.js": "./node_modules/moment/locale/nb.js",
	"./ne": "./node_modules/moment/locale/ne.js",
	"./ne.js": "./node_modules/moment/locale/ne.js",
	"./nl": "./node_modules/moment/locale/nl.js",
	"./nl-be": "./node_modules/moment/locale/nl-be.js",
	"./nl-be.js": "./node_modules/moment/locale/nl-be.js",
	"./nl.js": "./node_modules/moment/locale/nl.js",
	"./nn": "./node_modules/moment/locale/nn.js",
	"./nn.js": "./node_modules/moment/locale/nn.js",
	"./pa-in": "./node_modules/moment/locale/pa-in.js",
	"./pa-in.js": "./node_modules/moment/locale/pa-in.js",
	"./pl": "./node_modules/moment/locale/pl.js",
	"./pl.js": "./node_modules/moment/locale/pl.js",
	"./pt": "./node_modules/moment/locale/pt.js",
	"./pt-br": "./node_modules/moment/locale/pt-br.js",
	"./pt-br.js": "./node_modules/moment/locale/pt-br.js",
	"./pt.js": "./node_modules/moment/locale/pt.js",
	"./ro": "./node_modules/moment/locale/ro.js",
	"./ro.js": "./node_modules/moment/locale/ro.js",
	"./ru": "./node_modules/moment/locale/ru.js",
	"./ru.js": "./node_modules/moment/locale/ru.js",
	"./sd": "./node_modules/moment/locale/sd.js",
	"./sd.js": "./node_modules/moment/locale/sd.js",
	"./se": "./node_modules/moment/locale/se.js",
	"./se.js": "./node_modules/moment/locale/se.js",
	"./si": "./node_modules/moment/locale/si.js",
	"./si.js": "./node_modules/moment/locale/si.js",
	"./sk": "./node_modules/moment/locale/sk.js",
	"./sk.js": "./node_modules/moment/locale/sk.js",
	"./sl": "./node_modules/moment/locale/sl.js",
	"./sl.js": "./node_modules/moment/locale/sl.js",
	"./sq": "./node_modules/moment/locale/sq.js",
	"./sq.js": "./node_modules/moment/locale/sq.js",
	"./sr": "./node_modules/moment/locale/sr.js",
	"./sr-cyrl": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr.js": "./node_modules/moment/locale/sr.js",
	"./ss": "./node_modules/moment/locale/ss.js",
	"./ss.js": "./node_modules/moment/locale/ss.js",
	"./sv": "./node_modules/moment/locale/sv.js",
	"./sv.js": "./node_modules/moment/locale/sv.js",
	"./sw": "./node_modules/moment/locale/sw.js",
	"./sw.js": "./node_modules/moment/locale/sw.js",
	"./ta": "./node_modules/moment/locale/ta.js",
	"./ta.js": "./node_modules/moment/locale/ta.js",
	"./te": "./node_modules/moment/locale/te.js",
	"./te.js": "./node_modules/moment/locale/te.js",
	"./tet": "./node_modules/moment/locale/tet.js",
	"./tet.js": "./node_modules/moment/locale/tet.js",
	"./tg": "./node_modules/moment/locale/tg.js",
	"./tg.js": "./node_modules/moment/locale/tg.js",
	"./th": "./node_modules/moment/locale/th.js",
	"./th.js": "./node_modules/moment/locale/th.js",
	"./tl-ph": "./node_modules/moment/locale/tl-ph.js",
	"./tl-ph.js": "./node_modules/moment/locale/tl-ph.js",
	"./tlh": "./node_modules/moment/locale/tlh.js",
	"./tlh.js": "./node_modules/moment/locale/tlh.js",
	"./tr": "./node_modules/moment/locale/tr.js",
	"./tr.js": "./node_modules/moment/locale/tr.js",
	"./tzl": "./node_modules/moment/locale/tzl.js",
	"./tzl.js": "./node_modules/moment/locale/tzl.js",
	"./tzm": "./node_modules/moment/locale/tzm.js",
	"./tzm-latn": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm-latn.js": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm.js": "./node_modules/moment/locale/tzm.js",
	"./ug-cn": "./node_modules/moment/locale/ug-cn.js",
	"./ug-cn.js": "./node_modules/moment/locale/ug-cn.js",
	"./uk": "./node_modules/moment/locale/uk.js",
	"./uk.js": "./node_modules/moment/locale/uk.js",
	"./ur": "./node_modules/moment/locale/ur.js",
	"./ur.js": "./node_modules/moment/locale/ur.js",
	"./uz": "./node_modules/moment/locale/uz.js",
	"./uz-latn": "./node_modules/moment/locale/uz-latn.js",
	"./uz-latn.js": "./node_modules/moment/locale/uz-latn.js",
	"./uz.js": "./node_modules/moment/locale/uz.js",
	"./vi": "./node_modules/moment/locale/vi.js",
	"./vi.js": "./node_modules/moment/locale/vi.js",
	"./x-pseudo": "./node_modules/moment/locale/x-pseudo.js",
	"./x-pseudo.js": "./node_modules/moment/locale/x-pseudo.js",
	"./yo": "./node_modules/moment/locale/yo.js",
	"./yo.js": "./node_modules/moment/locale/yo.js",
	"./zh-cn": "./node_modules/moment/locale/zh-cn.js",
	"./zh-cn.js": "./node_modules/moment/locale/zh-cn.js",
	"./zh-hk": "./node_modules/moment/locale/zh-hk.js",
	"./zh-hk.js": "./node_modules/moment/locale/zh-hk.js",
	"./zh-tw": "./node_modules/moment/locale/zh-tw.js",
	"./zh-tw.js": "./node_modules/moment/locale/zh-tw.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./node_modules/moment/locale sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/admin/admin.component.html":
/*!**********************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/admin/admin.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<p>admin works!</p>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/app.component.html":
/*!**************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/app.component.html ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<router-outlet></router-outlet>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/attendance/add-break-time-table/add-break-time-table.component.html":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/attendance/add-break-time-table/add-break-time-table.component.html ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-attendancesubmenu></app-attendancesubmenu>\n<div class=\"container\">\n        <div class=\"col-xs-12\">\n            <div class=\"all-content-aria\">\n                <div class=\"row\">\n    <!---First Section--->   \n                       <!----<form action=\"#\" method=\"post\">---->\n                        <form  ngNativeValidate>\n                        <div class=\"top-form-above-menu\">Position : Attendance -> Time Table->Add Break Time</div>\n                        <div class=\"col-xs-12 panel panel-primary\">\n                                <div class=\"panel-body\"><b>Break Time Table</b></div>\n                                <div class=\"col-xs-12\">\n                                    \n                                        <div class=\"col-sm-4 text-left md-form form-group mt-5\">\n                                                Break Time Table Name\n                                                <input type=\"text\" name=\"timetablename\" [(ngModel)]=\"break_time_table_Name\" class=\"form-control\">\n                                        </div> \n                                        <div class=\"col-sm-4 text-left md-form form-group mt-5\">\n                                               \n                                        </div>\n                                        <div class=\"col-sm-4 text-left md-form form-group mt-5\">\n                                               \n                                        </div>\n                                       \n                                 </div>\n  \n                                <div class=\"col-xs-12\">\n \n                                        <div class=\"col-sm-4 text-left md-form form-group mt-5\">\n                                                Start_Time\n                                                <input  [(ngModel)]=\"start_Time\" type=\"time\" value=\"18:00:00\" class=\"form-control\" name=\"Start_Time\">\n                \n                                        </div>\n                                        <div class=\"col-sm-4 text-left md-form form-group mt-5\">\n                                                End_Time\n                                                <input  [(ngModel)]=\"end_Time\" type=\"time\" value=\"18:00:00\" class=\"form-control\" name=\"End_Time\">\n                                                       \n                                        </div>\n                                        <div class=\"col-sm-4 text-left md-form form-group mt-5\">\n                                               \n                                        </div>\n                                      \n                                </div>\n                                <div class=\"col-xs-12\">\n \n                                        <div class=\"col-sm-4 text-left md-form form-group mt-5\">\n                                                Break_Time\n                                                <input  [(ngModel)]=\"break_Time\" type=\"number\" value=\"0\" class=\"form-control\" name=\"Break_Time\">\n                \n                                        </div>\n                                        <div class=\"col-sm-4 text-left md-form form-group mt-5\">\n                                                Base On Punch Type\n                                                \n                                                <select #mySelect (change)='base_On_Punch_Type_Method(mySelect.value)' name=\"basedOnPunchType\" class=\"form-control\"  >\n                                                        <option *ngFor=\"let prod of base_On_Punch_Type; let i = index\" [value]=\"prod.id\" [selected]=\"i == base_On_Punch_Type_init\">{{prod.data}} </option> \n                                                </select>  \n                                                       \n                                        </div>\n                                        <div class=\"col-sm-4 text-left md-form form-group mt-5\">\n                                               <input type=\"button\" value=\"Cancel\">\n                                               <input type=\"submit\" value=\"Save\" (click)=\"submitFormData1()\">                                        </div>\n                                      \n                                </div>                              \n                         </div>\n    <!---Second Section--->   \n                "

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/attendance/add-shedule/add-shedule.component.html":
/*!*********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/attendance/add-shedule/add-shedule.component.html ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-attendancesubmenu></app-attendancesubmenu>\n<div class=\"container\">\n        <div class=\"col-xs-12\">\n            <div class=\"all-content-aria\">\n                <div class=\"row\">\n    <!---First Section--->   \n                       <!----<form action=\"#\" method=\"post\">---->\n                        <form  ngNativeValidate>\n                        <div class=\"top-form-above-menu\">Position : Attendance -> Time Table->Add Schedule</div>\n                        <div class=\"col-xs-12 panel panel-primary\">\n                                <div class=\"panel-body\"><b>Add Schedule</b></div>\n                                <div class=\"col-xs-12\">\n                                    \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Start Date\n                                                <input type=\"date\" name=\"myDate1\" (change)=\"birthDate_Method()\" [(ngModel)]=\"myDate1\" [value]=\"myDate1 | date:'yyyy-MM-dd'\"   class=\"form-control\">\n                                        </div> \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                End Date\n                                                <input type=\"date\" name=\"enddate\" (change)=\"employmentDate_Method()\" [(ngModel)]=\"myDate\"  [value]=\"myDate | date:'yyyy-MM-dd'\" required class=\"form-control\">\n                                        </div> \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Shift:\n                                                \n                                                <select #mySelect1 (change)='Shift_Selection_Method($event)' name=\"gender\" class=\"form-control\"  >\n                                                        <option *ngFor=\"let prod of ShiftNames; let i = index\"  >{{prod}} </option> \n                                                </select>        \n                                        </div>\n                                       \n                                        \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                <br>\n                                                <input type=\"checkbox\" name=\"Removeoverlap\"  [(checked)]=\"Removeoverlap\" (change)=\"Removeoverlap = !Removeoverlap\" >\n                                                Remove overlap schedule\n                                               \n                                        </div>\n                                       \n                                       \n                                 </div>\n  \n                                                        \n                         </div>\n\n                        \n <!---Section--->   \n                          <div class=\"col-xs-12 panel panel-primary\">\n                                <div class=\"panel-body\"><b></b></div>\n                                <div class=\"col-xs-12\">\n                                    \n                                        <div class=\"col-sm-6\">\n                                                <p-table id=\"mytable\" #dt [value]=\"personnel\" dataKey=\"SN\" [columns]=\"cols\"  editMode=\"row\" [paginator]=\"true\" [rowsPerPageOptions]=\"[10,15,20,50,1000,5000]\" [rows]=\"20\"  [resizableColumns]=\"true\">\n                                                        \n                                                             <ng-template pTemplate=\"caption\">\n                                                                     <div style=\"text-align: right\">        \n                                                                         <i class=\"fa fa-search\" style=\"margin:4px 4px 0 0\"></i>\n                                                                         <input type=\"text\" pInputText  placeholder=\"Global Filter\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" style=\"width:auto\">\n                                                \n                                                                         </div>                   \n                                                             </ng-template>\n                                                             \n                                                         <ng-template pTemplate=\"header\" let-columns []>\n                                                             <tr >\n                                                                 <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn [ngStyle]=\"{'width': col.width}\">\n                                                                     {{col.header}}\n                                                                     <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                                                                 </th>\n                                                             </tr>\n                                                             <tr>\n                                                                 <th *ngFor=\"let col of cols\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\n                                                                  \n                                                                     <input  pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, col.filterMatchMode)\" [value]=\"dt.filters[col.field]?.value\" >\n                                                                           \n                                                                    \n                                                                 </th>\n                                                             </tr>\n                                                             \n                                                              \n                                                         </ng-template>\n                                                  \n                                                        \n                                                         <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n                                                          \n                                                             <tr [pEditableRow]=\"rowData\">\n                                                         \n                                                                 <td>\n                                                                     {{rowData.personnel_No}}\n                                                                 </td>\n                                                                  <td>  \n                                                                 {{rowData.first_name}}      \n                                                                 </td>\n                                                        \n                                                                  <td>\n                                                                    \n                                                                             {{rowData.department}}\n                                                                       \n                                                                 </td>  \n                                                                 \n                                                                 <td style=\"text-align:center ;width:2500px\" >\n                                                                     \n                                                                        <input type=\"checkbox\" [checked]=rowData.checked1 (click)=\"onRowEditSave(rowData)\">\n                                                                    \n                                                                     \n                                                                 </td>\n                                                             </tr>\n                                                           \n                                                         </ng-template>\n                \n                                                             \n                                                     </p-table>\n                                        </div> \n                                        \n                                       \n                                </div>\n                                                         \n                         </div>\n\n                        \n\n\n    <!---Second Section--->   \n                           <div class=\"col-xs-12 panel panel-primary\">\n                                <div class=\"panel-body\"></div>                                \n                                         <div class=\"col-xs-12\">\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                  \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                  \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                        <button type=\"submit\" (click)=\"formDataSubmit()\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                                        <span class=\"glyphicon\" aria-hidden=\"true\"></span> Save\n                                                        </button>\n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                        <button type=\"submit\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                                        <span class=\"glyphicon\" aria-hidden=\"true\"></span> Cancel\n                                                        </button>\n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                  \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                        \n                                                </div>\n\n                                        </div>\n                                </div>\n\n\n                         </form>\n                </div>\n            </div>  \n        </div>\n</div> \n\n<app-footer></app-footer>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/attendance/add-shift/add-shift.component.html":
/*!*****************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/attendance/add-shift/add-shift.component.html ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-attendancesubmenu></app-attendancesubmenu>\n<div class=\"container\">\n        <div class=\"col-xs-12\">\n            <div class=\"all-content-aria\">\n                <div class=\"row\">\n    <!---First Section--->   \n                       <!----<form action=\"#\" method=\"post\">---->\n                        <form  ngNativeValidate>\n                        <div class=\"top-form-above-menu\">Position : Attendance -> Time Table->Add Shift</div>\n                        <div class=\"col-xs-12 panel panel-primary\">\n                                <div class=\"panel-body\"><b>Add Shift</b></div>\n                                <div class=\"col-xs-12\">\n                                    \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Shift Name\n                                                <input type=\"text\" name=\"shiftname\" [(ngModel)]=\"shiftName\" class=\"form-control\">\n                                        </div> \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Unit Of Cycle:\n                                                \n                                                <select #mySelect (change)='unit_Of_cycle_Method(mySelect.value)' name=\"unit_Of_cycle\" class=\"form-control\"  >\n                                                        <option *ngFor=\"let prod of unit_Of_cycle; let i = index\" [value]=\"prod.id\" [selected]=\"i == unit_Of_cycle_init\">{{prod.name}} </option> \n                                                </select>         \n                                        </div>\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Number Of Cycle:\n                                                <input type=\"text\" name=\"no_cycle\" class=\"form-control\" [(ngModel)]=\"number_Of_cycle\" (input)=\"arayChangingFunction()\"> \n                                        </div>\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                               \n                                                Count Day Off As\n                                                <select #mySelect1 (change)='countDayoffAs_Method(mySelect1.value)' name=\"unit_Of_cycle\" class=\"form-control\"  >\n                                                        <option *ngFor=\"let prod of countDayoffAs_Array; let i = index\" [value]=\"prod.id\" [selected]=\"i == countDayoffAs_init\">{{prod.name}} </option> \n                                                </select> \n                                                \n                                        </div> \n                                       \n                                 </div>\n                                 <div class=\"col-xs-12\">\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                              \n                                                Count Weekend As\n                                                <select #mySelect2 (change)='countWeekendAs_Method(mySelect2.value)' name=\"unit_Of_cycle\" class=\"form-control\"  >\n                                                        <option *ngFor=\"let prod of countWeekendAs_Array; let i = index\" [value]=\"prod.id\" [selected]=\"i == countWeekendAs_init\">{{prod.name}} </option> \n                                                </select> \n                                        </div> \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                <br>\n                                                <input type=\"checkbox\" name=\"autoshift\" [(checked)]=\"AutoShift\" (change)=\"AutoShift = !AutoShift\" >\n                                                Auto shift\n                                               \n                                        </div>\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                          \n                                        </div>\n                                       \n                                 </div>\n  \n                                                        \n                         </div>\n\n                         <div class=\"col-xs-12 panel panel-primary\">\n                                <div class=\"panel-body\"></div>\n                                <div class=\"col-xs-12\">\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                <p-table id=\"mytable\" #dt [value]=\"allRules\" dataKey=\"primary_id\" [columns]=\"cols\"  editMode=\"row\" [paginator]=\"true\" [rowsPerPageOptions]=\"[10,15,20,50,1000,5000]\" [rows]=\"20\"  [resizableColumns]=\"true\">\n       \n                                                        <ng-template pTemplate=\"caption\">\n                                                                <div style=\"text-align: right\">        \n                                                                    <i class=\"fa fa-search\" style=\"margin:4px 4px 0 0\"></i>\n                                                                    <input type=\"text\" pInputText  placeholder=\"Global Filter\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" style=\"width:auto\">\n                                                                \n                                                                    </div>                   \n                                                        </ng-template>\n                                                        \n                                                    <ng-template pTemplate=\"header\" let-columns []>\n                                                       \n                                                        <tr >\n                                                            <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn [ngStyle]=\"{'width': col.width}\">\n                                                                {{col.header}}\n                                                                <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                                                            </th>\n                                                        </tr>\n                                                        <tr>\n                                                            <th *ngFor=\"let col of cols\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\n                                                             \n                                                                <input  pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, col.filterMatchMode)\" [value]=\"dt.filters[col.field]?.value\" >\n                                                                      \n                                                               \n                                                            </th>\n                                                        </tr>\n                                                        \n                                                    </ng-template>\n                                             \n                                                   \n                                                    <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n                                                     \n                                                        <tr [pEditableRow]=\"rowData\">\n                                                          \n                                                                <td>\n                                                                        {{rowData.timetable_Name}}\n                                                                        \n                                                                    </td>\n                                                                    <td style=\"text-align:center ;width:2500px\" >\n                                        \n                                                                        <input type=\"checkbox\" [checked]=rowData.checked1 (click)=\"onRowEditSave(rowData)\">\n                                                                       \n                                                                    </td>\n\n                                                        </tr>\n                                                      \n                                                    </ng-template>\n                                                        \n                                                </p-table>   \n                                        </div> \n                                        <div  class=\"col-sm-6 text-left md-form form-group mt-5\">\n                                                  <div  class=\"table-wrapper-scroll-y my-custom-scrollbar\"> \n                                                        <table class=\"table table-bordered table-striped mb-0\">\n                                                                <thead>\n                                                                        <tr>\n                                                                        <th scope=\"col\">#</th>\n                                                                        <th scope=\"col\">Mark</th>\n                                                                        <th scope=\"col\">Day</th>\n                                                                        \n                                                                        </tr>\n                                                                </thead>\n                                                                   \n                                                                        <tbody *ngFor=\"let item of shiftTimeTable  | keyvalue; let i = index;\">\n                                                                                \n                                                                                        <tr>\n                                                                                        <td>{{item.value.name}} </td>\n                                                                                        <td><input type=\"checkbox\" [checked]=\"item.value.checked\" (change)=\"checkedorUnchecked($event,item.value.name,item.value.index,item.value.checked,item.value.timeTable,i)\"></td>\n                                                                                        <td><input type=\"text\" value=\"{{item.value.timeTable}}\"></td>\n                                                                                        \n                                                                                        </tr>\n                                                                        \n                                                                        </tbody>\n                                                                 \n                                                      </table>\n                                            </div>\n                                          \n                                        </div>\n                                        \n                                        \n                                </div> \n                                                                        \n                        </div>\n <!---Section-   \n                          <div class=\"col-xs-12 panel panel-primary\">\n                                <div class=\"panel-body\"><b></b></div>\n                                <div class=\"col-xs-12\">\n                                    \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                <input type=\"checkbox\" name=\"Sun\">\n                                                Sunday\n                                                <input type=\"text\" name=\"Sunday\" class=\"form-control\">\n                                        </div> \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                <input type=\"checkbox\" name=\"mon\">\n                                                Monday\n                                                <input type=\"text\" name=\"Monday\" class=\"form-control\">    \n                                        </div>\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                <input type=\"checkbox\" name=\"tue\">\n                                                Tuesday\n                                               <input type=\"text\" name=\"Tuesday\" class=\"form-control\">\n                                        </div>\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                <input type=\"checkbox\" name=\"wed\">\n                                                Wednesday\n                                               <input type=\"text\" name=\"Wednesday\" class=\"form-control\">\n                                        </div> \n                                       \n                                </div>\n                                <div class=\"col-xs-12\">\n                                    \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                <input type=\"checkbox\" name=\"thu\">\n                                                Thursday\n                                                <input type=\"text\" name=\"Thursday\" class=\"form-control\">\n                                        </div> \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                <input type=\"checkbox\" name=\"fri\">\n                                                Friday\n                                                <input type=\"text\" name=\"Friday\" class=\"form-control\">    \n                                        </div>\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                <input type=\"checkbox\" name=\"sat\">\n                                                Saturday\n                                               <input type=\"text\" name=\"Saturday\" class=\"form-control\">\n                                        </div>\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                               \n                                        </div> \n                                       \n                                </div>\n                              \n                         </div> -->\n\n                         <!---Second Section--->   \n                                                <div class=\"col-xs-12 panel panel-primary\">\n                                                     <div class=\"panel-body\"></div>                                \n                                                              <div class=\"col-xs-12\">\n                                                                     <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                                       \n                                                                     </div>\n                                                                     <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                                       \n                                                                     </div>\n                                                                     <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                                             <button type=\"submit\" (click)=\"submitFormData()\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                                                             <span class=\"glyphicon\" aria-hidden=\"true\"></span> Save\n                                                                             </button>\n                                                                     </div>\n                                                                     <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                                             <button type=\"submit\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                                                             <span class=\"glyphicon\" aria-hidden=\"true\"></span> Cancel\n                                                                             </button>\n                                                                     </div>\n                                                                     <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                                       \n                                                                     </div>\n                                                                     <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                                             \n                                                                     </div>\n                     \n                                                             </div>\n                                                     </div>\n                     \n                     \n                                              </form>\n                                     </div>\n                                 </div>  \n                             </div>\n                     </div> \n                     \n                     <app-footer></app-footer>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/attendance/add-time-table/add-time-table.component.html":
/*!***************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/attendance/add-time-table/add-time-table.component.html ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-attendancesubmenu></app-attendancesubmenu>\n<div class=\"container\">\n        <div class=\"col-xs-12\">\n            <div class=\"all-content-aria\">\n                <div class=\"row\">\n    <!---First Section--->   \n                       <!----<form action=\"#\" method=\"post\">---->\n                        <form   ngNativeValidate>\n                        <div class=\"top-form-above-menu\">Position : Attendance -> Time Table->Add Time Table</div>\n                        <div class=\"col-xs-12 panel panel-primary\">\n                                <div class=\"panel-body\"><b>Basic Settings</b></div>\n                                <div class=\"col-xs-12\">\n                                    \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                    \n                                                <input type=\"text\" name=\"timetablename\" class=\"form-control\" [(ngModel)]=\"timetable_Name\">\n                                        </div> \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Check-In\n                                                <input [(ngModel)]=\"check_In\" type=\"time\" value=\"09:00:00\" class=\"form-control\" name=\"chek-in\">\n\n\n                                        </div>\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Check-Out\n                                                <input  [(ngModel)]=\"check_Out\" type=\"time\" value=\"18:00:00\" class=\"form-control\" name=\"check-out\">\n\n                                        </div>\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                        Work Day\n                                                        <input [(ngModel)]=\"workday\" type=\"text\" name=\"workday\" class=\"form-control\" required value=\"1.0\"> \n                                               \n                                        </div>\n                                 </div>\n                                <div class=\"col-xs-12\">\n                                        \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Multiple In & Out\n                                                <select #mySelect (change)='multiple_In_Out_Method(mySelect.value)' name=\"Check_In\" class=\"form-control\"  >\n                                                        <option *ngFor=\"let prod of multiple_In_Out; let i = index\" [value]=\"prod.id\" [selected]=\"i == multiple_In_Out_init\">{{prod.data}} </option> \n                                                </select>  \n                                        </div>\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                        Base on Punch Type\n                                                        <select #mySelect1 (change)='base_On_Punch_Type_Method(mySelect1.value)' name=\"Check_In\" class=\"form-control\"  >\n                                                                <option *ngFor=\"let prod of base_On_Punch_Type; let i = index\" [value]=\"prod.id\" [selected]=\"i == base_On_Punch_Type_init\">{{prod.data}} </option> \n                                                        </select>  \n                                        </div> \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                        Necessary Check-In\n                                                        <select #mySelect2 (change)='necessary_Check_In_Method(mySelect2.value)' name=\"Check_In\" class=\"form-control\"  >\n                                                                <option *ngFor=\"let prod of necessary_Check_In; let i = index\" [value]=\"prod.id\" [selected]=\"i == necessary_Check_In_init\">{{prod.data}} </option> \n                                                        </select>    \n                                        </div> \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                        Necessary Check-Out\n                                                        <select #mySelect3 (change)='necessary_Check_OUT_Method(mySelect3.value)' name=\"Check_In\" class=\"form-control\"  >\n                                                                <option *ngFor=\"let prod of necessary_Check_OUT; let i = index\" [value]=\"prod.id\" [selected]=\"i == necessary_Check_OUT_init\">{{prod.data}} </option> \n                                                        </select>    \n                                        </div> \n                                 </div> \n                                 <div class=\"col-xs-12\">\n                                        \n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                        Auto_OT_Check_In_Early\n                                                        <select #mySelect4 (change)='auto_OT_Check_In_Early_Method(mySelect4.value)' name=\"Check_In\" class=\"form-control\"  >\n                                                                <option *ngFor=\"let prod of auto_OT_Check_In_Early; let i = index\" [value]=\"prod.id\" [selected]=\"i == auto_OT_Check_In_Early_init\">{{prod.data}} </option> \n                                                        </select>  \n                                                </div>\n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                                Auto_OT_Check_Out_Delay\n                                                                <select #mySelect5 (change)='auto_OT_Check_Out_Delay_Method(mySelect5.value)' name=\"Check_In\" class=\"form-control\"  >\n                                                                        <option *ngFor=\"let prod of auto_OT_Check_Out_Delay; let i = index\" [value]=\"prod.id\" [selected]=\"i == auto_OT_Check_Out_Delay_init\">{{prod.data}} </option> \n                                                                </select>   \n                                                </div> \n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                        Check_In_Start_Time\n                                                        <input [(ngModel)]=\"check_In_Start_Time\" type=\"time\" value=\"09:00:00\" class=\"form-control\" name=\"Check_In_Start_Time\">\n                                                </div> \n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                                Check_In_End_Time\n                                                        <input [(ngModel)]=\"check_In_End_Time\" type=\"time\" value=\"10:00:00\" class=\"form-control\" name=\"check_In_End_Time\">\n        \n        \n                                                </div>\n                                               \n                                </div>   \n                                <div class=\"col-xs-12\">\n                                    \n                                                \n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                                Check_Out_Start_Time\n                                                        <input [(ngModel)]=\"check_Out_Start_Time\" type=\"time\" value=\"18:00:00\" class=\"form-control\" name=\"check_Out_Start_Time\">\n        \n                                                </div>\n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                                Check_Out_End_Time\n                                                 <input [(ngModel)]=\"check_Out_End_Time\" type=\"time\" value=\"18:00:00\" class=\"form-control\" name=\"check_Out_End_Time\">\n                                                       \n                                                </div>\n                                               \n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                \n                                                Type\n                                                <select #mySelect7 (change)='type_Method(mySelect7.value)' name=\"Check_In\" class=\"form-control\"  >\n                                                        <option *ngFor=\"let prod of type; let i = index\" [value]=\"prod.id\" [selected]=\"i == type_init\">{{prod.data}} </option> \n                                                </select> \n                                                </div>\n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                        Break Time\n                                                <input [(ngModel)]=\"break_Time\"  type=\"text\" class=\"form-control\" name=\"breaktime\" disabled> \n                                                </div>\n                                         </div>                   \n                         </div>\n    <!---Second Section--->   \n  <div class=\"col-xs-12 panel panel-primary\">\n        <div class=\"panel-body\"></div>                                \n                 <div class=\"col-xs-12\">\n                        <p-table id=\"mytable\" #dt [value]=\"allRules\" dataKey=\"primary_id\" [columns]=\"cols1\"  editMode=\"row\" [paginator]=\"true\" [rowsPerPageOptions]=\"[10,15,20,50,1000,5000]\" [rows]=\"20\"  [resizableColumns]=\"true\">\n       \n                                <ng-template pTemplate=\"caption\">\n                                        <div style=\"text-align: right\">        \n                                            <i class=\"fa fa-search\" style=\"margin:4px 4px 0 0\"></i>\n                                            <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" style=\"width:auto\">\n                                            <button type=\"button\" pButton icon=\"fa fa-check\" iconPos=\"left\" label=\"ADD\" routerLink=\"/addtimeTable\" style=\"float:left\"></button>\n                                \n                                            </div>                   \n                                </ng-template>\n                                \n                            <ng-template pTemplate=\"header\" let-columns []>\n                               \n                                <tr >\n                                    <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn [ngStyle]=\"{'width': col.width}\">\n                                        {{col.header}}\n                                        <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                                    </th>\n                                </tr>\n                                <tr>\n                                    <th *ngFor=\"let col of cols\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\n                                     \n                                        <input  pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, col.filterMatchMode)\" [value]=\"dt.filters[col.field]?.value\" >\n                                              \n                                       \n                                    </th>\n                                </tr>\n                                \n                            </ng-template>\n                     \n                           \n                            <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n                             \n                                <tr [pEditableRow]=\"rowData\">\n                                    \n                                        <td>\n                                                {{rowData.break_time_table_Name}}\n                                                \n                                            </td>\n                            \n                            \n                                            <td>\n                                                {{rowData.start_Time}}\n                                            </td>\n                                            <td>\n                                                {{rowData.end_Time}}\n                                            </td>\n                                            <td>\n                                                {{rowData.break_Time}}\n                                            </td>\n                                            <td>\n                                                {{rowData.base_On_Punch_Type}}\n                                            </td>\n                                            \n                                    \n                                    <td style=\"text-align:center ;width:2500px\" >\n                                       \n                                        <input type=\"checkbox\" [checked]=rowData.checked1 (click)=\"onRowEditSave(rowData)\">\n                                       \n                                \n                                    </td>\n                                </tr>\n                              \n                            </ng-template>\n                                \n                        </p-table>   \n\n\n                </div>\n</div>\n    \n \n                         \n\n                           <div class=\"col-xs-12 panel panel-primary\">\n                                <div class=\"panel-body\"></div>                                \n                                         <div class=\"col-xs-12\">\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                  \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                  \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                        <button type=\"submit\" (click)=\"submitFormData1()\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                                        <span class=\"glyphicon\" aria-hidden=\"true\"></span> Save\n                                                        </button>\n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                        <button  type=\"submit\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                                        <span class=\"glyphicon\" aria-hidden=\"true\"></span> Cancel\n                                                        </button>\n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                  \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                        \n                                                </div>\n\n                                        </div>\n                                </div>\n                         </form>\n                </div>\n            </div>  \n        </div>\n</div> \n\n    \n    \n \n<app-footer></app-footer>\n<!--\n<div class=\"col-sm-12 text-left md-form form-group mt-5\">\n        <p-dialog  [(visible)]=\"display_Department\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '1000px', minWidth: '100px'}\"\n        [maximizable]=\"true\" draggable=\"true\" >\n        <mat-accordion>\n                <mat-expansion-panel>\n                  <mat-expansion-panel-header>\n                    Select Parent Break Time Table\n                  </mat-expansion-panel-header>                                     \n                 \n                  \n                        <div *ngFor=\"let data of  breakTimeTableNames \">\n                           \n                                <input type=\"checkbox\" [checked]=\"true\">{{data}}\n                        </div>\n                        \n\n                </mat-expansion-panel>\n                <div align=\"right\">\n                    <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display_Department=false\" label=\"Yes\"></button>\n                    <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n                  </div>\n              </mat-accordion>\n    \n        \n    </p-dialog>\n    \n    </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n-->\n\n\n\n\n\n\n\n<!--\n<div class=\"col-sm-12 text-left md-form form-group mt-5\">\n        <p-dialog  [(visible)]=\"display_Department\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '1000px', minWidth: '100px'}\"\n        [maximizable]=\"true\" draggable=\"true\" >\n        <mat-accordion>\n                <mat-expansion-panel>\n                  <mat-expansion-panel-header>\n                    Select Parent Break Time Table\n                  </mat-expansion-panel-header>                                     \n                 \n                  <p-table id=\"mytable\" #dt [value]=\"allRules\" dataKey=\"primary_id\" [columns]=\"cols1\"  editMode=\"row\" [paginator]=\"true\" [rowsPerPageOptions]=\"[10,15,20,50,1000,5000]\" [rows]=\"20\"  [resizableColumns]=\"true\">\n       \n                        <ng-template pTemplate=\"caption\">\n                                <div style=\"text-align: right\">        \n                                    <i class=\"fa fa-search\" style=\"margin:4px 4px 0 0\"></i>\n                                    <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" style=\"width:auto\">\n                                    <button type=\"button\" pButton icon=\"fa fa-check\" iconPos=\"left\" label=\"ADD\" routerLink=\"/addtimeTable\" style=\"float:left\"></button>\n                        \n                                    </div>                   \n                        </ng-template>\n                        \n                    <ng-template pTemplate=\"header\" let-columns []>\n                       \n                        <tr >\n                            <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn [ngStyle]=\"{'width': col.width}\">\n                                {{col.header}}\n                                <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                            </th>\n                        </tr>\n                        <tr>\n                            <th *ngFor=\"let col of cols\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\n                             \n                                <input  pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, col.filterMatchMode)\" [value]=\"dt.filters[col.field]?.value\" >\n                                      \n                               \n                            </th>\n                        </tr>\n                        \n                    </ng-template>\n             \n                   \n                    <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n                     \n                        <tr [pEditableRow]=\"rowData\">\n                            \n                                <td>\n                                        {{rowData.break_time_table_Name}}\n                                        \n                                    </td>\n                    \n                    \n                                    <td>\n                                        {{rowData.start_Time}}\n                                    </td>\n                                    <td>\n                                        {{rowData.end_Time}}\n                                    </td>\n                                    <td>\n                                        {{rowData.break_Time}}\n                                    </td>\n                                    <td>\n                                        {{rowData.base_On_Punch_Type}}\n                                    </td>\n                                    \n                            \n                            <td style=\"text-align:center ;width:2500px\" >\n                               \n                                \n                               \n                                \n                            </td>\n                        </tr>\n                      \n                    </ng-template>\n                        \n                </p-table>\n                \n                </mat-expansion-panel>\n                <div align=\"right\">\n                    <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display_Department=false\" label=\"Yes\"></button>\n                    <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n                  </div>\n              </mat-accordion>\n    \n        \n    </p-dialog>\n    \n    </div>\n    --> "

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/attendance/attendance.component.html":
/*!********************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/attendance/attendance.component.html ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-attendancesubmenu></app-attendancesubmenu>\n<div class=\"content_section\"> \n    <div class=\"col-xs-12\">\n        <div class=\"all-content-aria \">\n            <div class=\"top-form-above-menu\">Position : Attendance -> Attendance</div>        \n                <div class=\"col-sm-14\">\n           \n    \n<div id=\"content\" #content >  \n    <p-toast position=\"top-left\"></p-toast>\n    <p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\n    <p-table id=\"mytable\" #dt [value]=\"attendance\" dataKey=\"name\" [columns]=\"cols\"  editMode=\"row\" [paginator]=\"true\" [rowsPerPageOptions]=\"[10,15,20,50,1000,5000]\" [rows]=\"20\"  [resizableColumns]=\"true\">\n       <!-- <ng-template pTemplate=\"colgroup\" let-columns>\n            <colgroup>\n                <col *ngFor=\"let col of columns\" style=\"width:200px\">\n            </colgroup>\n        </ng-template> -->\n            <ng-template pTemplate=\"caption\">\n                    <div style=\"text-align: right\">        \n                        <i class=\"fa fa-search\" style=\"margin:4px 4px 0 0\"></i>\n                        <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" style=\"width:auto\">\n                        <button type=\"button\" pButton icon=\"fa fa-check\" iconPos=\"center\" label=\"ADD\" routerLink=\"/addpersonnel\" style=\"float:left\"></button>\n\n                        </div>                   \n            </ng-template>\n            \n        <ng-template pTemplate=\"header\" let-columns []>\n            <tr >\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn [ngStyle]=\"{'width': col.width}\">\n                    {{col.header}}\n                    <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n            </tr>\n            <tr>\n                <th *ngFor=\"let col of cols\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\n                 \n                    <input  pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, col.filterMatchMode)\" [value]=\"dt.filters[col.field]?.value\" >\n                          \n                   \n                </th>\n            </tr>\n            \n            {{mytabledetails(dt)}}   \n        </ng-template>\n \n       \n        <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n         \n            <tr [pEditableRow]=\"rowData\">\n        \n                <td>\n                    {{rowData.name}}\n                </td>\n                 <td>  \n                {{rowData.department}}      \n                </td>\n                \n                 \n              \n                \n                <td style=\"text-align:center ;width:2500px\" >\n                    \n                    <button *ngIf=\"!editing\" pButton type=\"button\" pInitEditableRow icon=\"pi pi-pencil\" class=\"ui-button-info\" (click)=\"onRowEditInit(rowData)\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pSaveEditableRow icon=\"pi pi-check\" class=\"ui-button-success\" style=\"margin-right: .5em\" (click)=\"onRowEditSave(rowData)\" pTooltip=\"Edit\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-trash\" class=\"ui-button-danger\" (click)=\"onRowRemove(rowData, ri)\"  pTooltip=\"Delete\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-times\" class=\"ui-button-danger\" (click)=\"onRowEditCancel(rowData, ri)\" pTooltip=\"Cancel\" tooltipPosition=\"top\"></button>\n                   \n                    \n                </td>\n            </tr>\n          \n        </ng-template>\n       <!---<ng-template pTemplate=\"footer\">\n                <tr>\n                    <td></td>\n                    <td >Total :{{sum}}</td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                </tr>\n            </ng-template> -->\n            \n    </p-table>\n    </div>\n    \n    \n    \n</div>\n</div>\n</div>\n</div>   \n<div class=\"clearfix\"></div> \n<div class=\"col-sm-6\">\n    <div class=\"col-sm-12 text-left md-form form-group mt-1\">\n       \n          <div class=\"alert alert-dark\" role=\"alert\" *ngIf=\"errordisplayflag\">\n            {{errorDta}}\n          </div>\n    </div> \n </div>\n\n\n\n\n <p-dialog  [(visible)]=\"display\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\" \n [maximizable]=\"true\" [baseZIndex]=\"10000\">\n <mat-accordion>\n         <mat-expansion-panel>\n           <mat-expansion-panel-header>\n             Select Parent Area\n           </mat-expansion-panel-header>                                     \n             <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                 <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n                   \n                 <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                   </mat-tree-node>  \n             \n             </mat-tree>`\n           \n         </mat-expansion-panel>\n         <div align=\"right\">\n         <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Yes\"></button>\n         <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n       </div>\n       </mat-accordion>\n\n \n</p-dialog>\n\n<button type=\"button\" (click)=\"showDialog()\" pButton icon=\"pi pi-info-circle\" label=\"Show\"></button>\n\n<app-footer></app-footer>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/attendance/break-time-table-list/break-time-table-list.component.html":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/attendance/break-time-table-list/break-time-table-list.component.html ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-attendancesubmenu></app-attendancesubmenu>\n<div class=\"content_section\"> \n    <div class=\"col-xs-12\">\n        <div class=\"all-content-aria\">\n            <div class=\"top-form-above-menu\">Attendance -> Break Time Table </div>        \n                <div class=\"col-sm-14\">\n           \n    \n<div id=\"content\" #content>  \n    <p-toast position=\"top-left\"></p-toast>\n    <p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\n    <p-table id=\"mytable\" #dt [value]=\"allRules\" dataKey=\"primary_id\" [columns]=\"cols\"  editMode=\"row\" [paginator]=\"true\" [rowsPerPageOptions]=\"[10,15,20,50,1000,5000]\" [rows]=\"20\"  [resizableColumns]=\"true\">\n       \n            <ng-template pTemplate=\"caption\">\n                    <div style=\"text-align: right\">        \n                        <i class=\"fa fa-search\" style=\"margin:4px 4px 0 0\"></i>\n                        <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" style=\"width:auto\">\n                        <button type=\"button\" pButton icon=\"fa fa-check\" iconPos=\"left\" label=\"ADD\" routerLink=\"/addbreakTimeTable\" style=\"float:left\"></button>\n            \n                        </div>                   \n            </ng-template>\n            \n        <ng-template pTemplate=\"header\" let-columns []>\n           \n            <tr >\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn [ngStyle]=\"{'width': col.width}\">\n                    {{col.header}}\n                    <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n            </tr>\n            <tr>\n                <th *ngFor=\"let col of cols\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\n                 \n                    <input  pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, col.filterMatchMode)\" [value]=\"dt.filters[col.field]?.value\" >\n                          \n                   \n                </th>\n            </tr>\n            \n        </ng-template>\n \n       \n        <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n         \n            <tr [pEditableRow]=\"rowData\">\n                \n        \n                <td>\n                    {{rowData.break_time_table_Name}}\n                    \n                </td>\n\n\n                <td>\n                    {{rowData.start_Time}}\n                </td>\n                <td>\n                    {{rowData.end_Time}}\n                </td>\n                <td>\n                    {{rowData.break_Time}}\n                </td>\n                <td>\n                    {{rowData.base_On_Punch_Type}}\n                </td>\n                \n                \n                <td style=\"text-align:center ;width:2500px\" >\n                    \n                    <button *ngIf=\"!editing\" pButton type=\"button\" pInitEditableRow icon=\"pi pi-pencil\" class=\"ui-button-info\" (click)=\"onRowEditInit(rowData)\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pSaveEditableRow icon=\"pi pi-check\" class=\"ui-button-success\" style=\"margin-right: .5em\" (click)=\"onRowEditSave(rowData)\" pTooltip=\"Edit\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-trash\" class=\"ui-button-danger\" (click)=\"onRowRemove(rowData, ri)\"  pTooltip=\"Delete\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-times\" class=\"ui-button-danger\" (click)=\"onRowEditCancel(rowData, ri)\" pTooltip=\"Cancel\" tooltipPosition=\"top\"></button>\n                   \n                    \n                </td>\n            </tr>\n          \n        </ng-template>\n            \n    </p-table>\n    </div>\n    \n    \n    \n</div>\n</div>\n</div>\n</div>   \n<div class=\"clearfix\"></div> \n<div class=\"col-sm-6\">\n    <div class=\"col-sm-12 text-left md-form form-group mt-1\">\n       \n          <div class=\"alert alert-dark\" role=\"alert\" *ngIf=\"errordisplayflag\">\n            {{errorDta}}\n          </div>\n    </div> \n </div>\n\n\n\n\n <p-dialog  [(visible)]=\"display\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\" \n [maximizable]=\"true\" [baseZIndex]=\"10000\">\n <mat-accordion>\n         <mat-expansion-panel>\n           <mat-expansion-panel-header>\n             Select Parent Position\n           </mat-expansion-panel-header>                                     \n             <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                 <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n                   \n                 <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                   </mat-tree-node>  \n             \n             </mat-tree>`\n           \n         </mat-expansion-panel>\n         <div align=\"right\">\n         <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Yes\"></button>\n         <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n       </div>\n       </mat-accordion>\n\n\n \n</p-dialog>\n<app-footer></app-footer>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/attendance/global-rule/global-rule.component.html":
/*!*********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/attendance/global-rule/global-rule.component.html ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-attendancesubmenu></app-attendancesubmenu>\n<div class=\"container\">\n        <div class=\"col-xs-12\">\n            <div class=\"all-content-aria\">\n                <div class=\"row\">\n    <!---First Section--->   \n                       <!----<form action=\"#\" method=\"post\">---->\n                        <form >\n                        <div class=\"top-form-above-menu\">Position : Attendance -> Global Rule</div>\n                        <div class=\"col-xs-12 panel panel-primary\">\n                                <div class=\"panel-body\"><b>Basic Settings</b></div>\n                                <div class=\"col-xs-12\">\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Check-In Rule\n                                                <select #mySelect (change)='checkInRuleMethod(mySelect.value)' name=\"Check_In\" class=\"form-control\"  >\n                                                        <option *ngFor=\"let prod of check_In_Rule_array; let i = index\" [value]=\"prod.id\" [selected]=\"i == check_In_Rule_init\">{{prod.name}} </option> \n                                                </select>\n                                        </div>\n\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Check-Out Rule\n                                                <select #mySelect1 (change)='checkOutRuleMethod(mySelect1.value)' name=\"Check_out\" class=\"form-control\"  >\n                                                        <option *ngFor=\"let prod of check_Out_Rule_array; let i = index\" [value]=\"prod.id\" [selected]=\"i == check_Out_Rule_init\">{{prod.name}} </option> \n                                                </select>\n                                        </div>\n\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Over Time Rule \n                                                <select #mySelect3 (change)='overTimeRuleMethod(mySelect3.value)' name=\"overTime\" class=\"form-control\"  >\n                                                        <option *ngFor=\"let prod of Overtime_Rule_array; let i = index\" [value]=\"prod.id\" [selected]=\"i == Overtime_Rule_init\">{{prod.name}} </option> \n                                                </select>\n                                        </div>\n\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Duplicate Punch Period(m)\n                                                <input type=\"text\" name=\"duplicatepunchPeriod\" class=\"form-control\"  [(ngModel)]=\"punchPeriod\">\n                                        </div> \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Department\n                                                <input type=\"text\" name=\"department\" class=\"form-control\"  (click)=\"showDepartment()\" [(ngModel)]=\"parentDepartment\">\n                                        </div> \n                                 </div>                       \n                         </div>\n    <!---Second Section--->    \n                        <div class=\"col-xs-12 panel panel-primary\">\n                                <div class=\"panel-body\"><b>Weekend Settings</b></div>\n                                <div class=\"col-xs-12\">\n                                      <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                            \n                                        </div>\n                                        <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                        <label><input   type=\"checkbox\" value=\"mon\" [(checked)]=\"mon\" (change)=\"mon = !mon\" >Monday</label>\n                                        </div>\n                                        <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                        <label><input   type=\"checkbox\" value=\"tue\"   [(checked)]=\"tue\" (change)=\"tue = !tue\">Tuesday</label>\n                                        </div>\n                                        <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                        <label><input     type=\"checkbox\" value=\"wen\"  [(checked)]=\"wed\" (change)=\"wed = !wed\">Wednesday</label> \n                                        </div>\n                                        <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                        <label><input  type=\"checkbox\" value=\"thu\"  [(checked)]=\"thu\" (change)=\"thu = !thu\">Thursday</label>   \n                                        </div>\n                                        <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                        <label><input  type=\"checkbox\" value=\"fri\"  [(checked)]=\"fri\" (change)=\"fri = !fri\">Friday</label> \n                                        </div>\n                                </div> \n                                <div class=\"col-xs-12\">\n                                    <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                        \n                                    </div>\n                                    <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                    <label><input type=\"checkbox\" value=\"sat\"   [(checked)]=\"sat\" (change)=\"sat = !sat\">Saturday</label>\n                                    </div>\n                                    <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                    <label><input   type=\"checkbox\" value=\"sun\"  [(checked)]=\"sun\" (change)=\"sun = !sun\">Sunday</label>\n                                    </div>\n                                    <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                     \n                                    </div>\n                                    <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                    \n                                    </div>\n                                    <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                    \n                                    </div>\n                                    \n                                \n\n                                </div>                                               \n                        </div>\n     <!---Third Section--->  \n                        <div class=\"col-xs-12 panel panel-primary\">\n                                <div class=\"panel-body\"><b>Calculation</b></div>\n                                        <div class=\"col-xs-12\">\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                        <label for=\"late\">When Late exceeds:  </label>             \n                                                        <input type=\"number\" class=\"form-control\"  [(ngModel)]=\"lateExceed\" name=\"lateExceed\"> minutes,count as absence.  \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5\">\n                                                        <label for=\"late\">Early Leave exceeds   : </label>             \n                                                        <input type=\"number\" class=\"form-control\" name=\"earlyLeaveExceed\" [(ngModel)]=\"earlyLeaveExceed\" >  minutes,count as absence.\n                                                 </div> \n                                                \n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5  form-inlin\">\n                                                        <label for=\"late\">When there is no Check-In, count as</label>  \n                                                        <select #mySelect5 (change)='there_is_No_check_in_method(mySelect5.value)' name=\"there_is_No_check_in\" class=\"form-control\"  >\n                                                                <option *ngFor=\"let prod of there_is_No_check_in; let i = index\" [value]=\"prod.id\" [selected]=\"i == there_is_No_check_in_init\">{{prod.name}} </option> \n                                                        </select>\n                                                       \n                                                </div>\n                                                <div class=\"col-sm-1\">\n                                                <label for=\"late\">Minutes</label>\n                                                <input type=\"number\" class=\"form-control\" name=\"there_is_No_check_in_Minutes\" [(ngModel)]=\"there_is_No_check_in_Minutes\">\n                                                </div>\n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5  form-inlin\">\n                                                                <label for=\"late\">When there is no Check-Out, count as</label> \n                                                                <select #mySelect6 (change)='there_is_No_check_out_method(mySelect6.value)' name=\"there_is_No_check_in\" class=\"form-control\"  >\n                                                                        <option *ngFor=\"let prod of there_is_No_check_out; let i = index\" [value]=\"prod.id\" [selected]=\"i == there_is_No_check_out_init\">{{prod.name}} </option> \n                                                                </select>             \n                                                                  \n                                                 </div>\n                                                <div class=\"col-sm-1\">\n                                                        <label for=\"late\">Minutes</label>\n                                                        <input type=\"number\"  name=\"there_is_No_check_out_Minutes\"  class=\"form-control\" [(ngModel)]=\"there_is_No_check_out_Minutes\" >\n                                                </div>\n                                                 \n                                        </div> \n                                      <!--  <div class=\"col-xs-12\"> \n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5  form-inlin\">\n                                                        <label for=\"late\">Require Check In on leave period</label> \n                                                        <select #mySelect7 (change)='Require_Check_In_on_leave_period_method(mySelect7.value)' name=\"Check_In\" class=\"form-control\"  >\n                                                                <option *ngFor=\"let prod of Require_Check_In_on_leave_period; let i = index\" [value]=\"prod.id\" [selected]=\"i == Require_Check_In_on_leave_period_init\">{{prod.name}} </option> \n                                                        </select>                 \n                                                </div> \n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5  form-inlin\">\n                                                        <label for=\"late\">Require Check Out on leave period</label> \n                                                        <select #mySelect8 (change)='Require_Check_Out_on_leave_period_method(mySelect8.value)' name=\"Check_In\" class=\"form-control\"  >\n                                                                <option *ngFor=\"let prod of Require_Check_Out_on_leave_period; let i = index\" [value]=\"prod.id\" [selected]=\"i == Require_Check_Out_on_leave_period_init\">{{prod.name}} </option> \n                                                        </select>                  \n                                                </div> \n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5  form-inlin\">\n                                                        <label for=\"late\">Require Check In on training period</label> \n                                                        <select #mySelect9 (change)='Require_Check_In_on_training_period_method(mySelect9.value)' name=\"Check_In\" class=\"form-control\"  >\n                                                                <option *ngFor=\"let prod of Require_Check_In_on_training_period; let i = index\" [value]=\"prod.id\" [selected]=\"i == Require_Check_In_on_training_period_init\">{{prod.name}} </option> \n                                                        </select>                  \n                                                </div> \n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5  form-inlin\">\n                                                        <label for=\"late\">Require Check Out on training period</label> \n                                                        <select #mySelect10 (change)='Require_Check_Out_on_training_period_method(mySelect10.value)' name=\"Check_In\" class=\"form-control\"  >\n                                                                <option *ngFor=\"let prod of Require_Check_Out_on_training_period; let i = index\" [value]=\"prod.id\" [selected]=\"i == Require_Check_Out_on_training_period_init\">{{prod.name}} </option> \n                                                        </select>                   \n                                                </div>      \n                                         </div> -->\n                                        <div class=\"col-xs-12\">\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                Check-In \n                                                <input type=\"text\" class=\"form-control\" name=\"checkin\" [(ngModel)]=\"check_in\">     \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                Check-Out \n                                                <input type=\"text\" class=\"form-control\" name=\"Check_Out\" [(ngModel)]=\"Check_Out\">     \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                Break-Out\n                                                <input type=\"text\" class=\"form-control\" name=\"Break_Out\" [(ngModel)]=\"Break_Out\">     \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                Break-In\n                                                <input type=\"text\" class=\"form-control\" name=\"Break_In\" [(ngModel)]=\"Break_In\">     \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                OT-In \n                                                <input type=\"text\" class=\"form-control\" name=\"OT_In\" [(ngModel)]=\"OT_In\">     \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                OT-Out\n                                                <input type=\"text\" class=\"form-control\" name=\"OT_Out\" [(ngModel)]=\"OT_Out\">     \n                                                </div>\n\n                                        </div>\n                                         <div class=\"col-xs-12\">\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                  \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                  \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                        <button type=\"submit\" (click)=\"submitFormData1($event)\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                                        <span class=\"glyphicon\" aria-hidden=\"true\"></span> Save\n                                                        </button>\n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                        <button type=\"submit\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                                        <span class=\"glyphicon\" aria-hidden=\"true\"></span> Cancel\n                                                        </button>\n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                  \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                               \n                                                </div>\n                                                \n\n                                        </div>\n                        </div>\n                         </form>\n                </div>\n            </div>  \n        </div>\n</div> \n\n    \n    \n \n<app-footer></app-footer>\n\n<!--     DEPARTMENT SHOW DIALOG        -->\n\n<div class=\"col-sm-12 text-left md-form form-group mt-5\">\n        <p-dialog  [(visible)]=\"display_Department\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\" \n        [maximizable]=\"true\" [baseZIndex]=\"10000\">\n        <mat-accordion>\n                <mat-expansion-panel>\n                  <mat-expansion-panel-header>\n                    Select Parent Department\n                  </mat-expansion-panel-header>                                     \n                    <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                        <mat-tree-node *matTreeNodeDef=\"let node1\" matTreeNodeToggle matTreeNodePadding>\n                          \n                        <mat-radio-button value=\"{{node1.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node1.item}} </mat-radio-button>\n                          </mat-tree-node>  \n                    \n                    </mat-tree>`\n                  \n                </mat-expansion-panel>\n                <div align=\"right\">\n                    <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display_Department=false\" label=\"Yes\"></button>\n                    <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n                  </div>\n              </mat-accordion>\n    \n        \n    </p-dialog>\n    \n    </div>\n     "

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/attendance/rule-list/rule-list.component.html":
/*!*****************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/attendance/rule-list/rule-list.component.html ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-attendancesubmenu></app-attendancesubmenu>\n<div class=\"content_section\"> \n    <div class=\"col-xs-12\">\n        <div class=\"all-content-aria\">\n            <div class=\"top-form-above-menu\">Attendance -> Rules List</div>        \n                <div class=\"col-sm-14\">\n           \n    \n<div id=\"content\" #content>  \n    <p-toast position=\"top-left\"></p-toast>\n    <p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\n    <p-table id=\"mytable\" #dt [value]=\"allRules\" dataKey=\"primary_id\" [columns]=\"cols\"  editMode=\"row\" [paginator]=\"true\" [rowsPerPageOptions]=\"[10,15,20,50,1000,5000]\" [rows]=\"20\"  [resizableColumns]=\"true\">\n       \n            <ng-template pTemplate=\"caption\">\n                    <div style=\"text-align: right\">        \n                        <i class=\"fa fa-search\" style=\"margin:4px 4px 0 0\"></i>\n                        <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" style=\"width:auto\">\n                        <button type=\"button\" pButton icon=\"fa fa-check\" iconPos=\"left\" label=\"ADD\" routerLink=\"/addrule\" style=\"float:left\"></button>\n            \n                        </div>                   \n            </ng-template>\n            \n        <ng-template pTemplate=\"header\" let-columns []>\n           \n            <tr >\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn [ngStyle]=\"{'width': col.width}\">\n                    {{col.header}}\n                    <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n            </tr>\n            <tr>\n                <th *ngFor=\"let col of cols\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\n                 \n                    <input  pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, col.filterMatchMode)\" [value]=\"dt.filters[col.field]?.value\" >\n                          \n                   \n                </th>\n            </tr>\n            \n        </ng-template>\n \n       \n        <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n         \n            <tr [pEditableRow]=\"rowData\">\n                \n        \n                <td>\n                    {{rowData.name}}\n                    \n                </td>\n\n\n                <td>\n                    {{rowData.department}}\n                </td>\n                <td>\n                    {{rowData.weekend}}\n                </td>\n                <td>\n                    {{rowData.global_Rule}}\n                </td>\n                \n                <td style=\"text-align:center ;width:2500px\" >\n                    \n                    <button *ngIf=\"!editing\" pButton type=\"button\" pInitEditableRow icon=\"pi pi-pencil\" class=\"ui-button-info\" (click)=\"onRowEditInit(rowData)\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pSaveEditableRow icon=\"pi pi-check\" class=\"ui-button-success\" (click)=\"onRowEditSave()\" style=\"margin-right: .5em\" A pTooltip=\"Edit\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-trash\" class=\"ui-button-danger\" (click)=\"onRowRemove(rowData, ri)\"  pTooltip=\"Delete\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-times\" class=\"ui-button-danger\" (click)=\"onRowEditCancel(rowData, ri)\" pTooltip=\"Cancel\" tooltipPosition=\"top\"></button>\n                   \n                    \n                </td>\n            </tr>\n          \n        </ng-template>\n            \n    </p-table>\n    </div>\n    \n    \n    \n</div>\n</div>\n</div>\n</div>   \n<div class=\"clearfix\"></div> \n<div class=\"col-sm-6\">\n    <div class=\"col-sm-12 text-left md-form form-group mt-1\">\n       \n          <div class=\"alert alert-dark\" role=\"alert\" *ngIf=\"errordisplayflag\">\n            {{errorDta}}\n          </div>\n    </div> \n </div>\n\n\n\n\n <p-dialog  [(visible)]=\"display\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\" \n [maximizable]=\"true\" [baseZIndex]=\"10000\">\n <mat-accordion>\n         <mat-expansion-panel>\n           <mat-expansion-panel-header>\n             Select Parent Position\n           </mat-expansion-panel-header>                                     \n             <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                 <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n                   \n                 <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                   </mat-tree-node>  \n             \n             </mat-tree>`\n           \n         </mat-expansion-panel>\n         <div align=\"right\">\n         <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Yes\"></button>\n         <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n       </div>\n       </mat-accordion>\n\n\n \n</p-dialog>\n<app-footer></app-footer>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/attendance/rule/rule.component.html":
/*!*******************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/attendance/rule/rule.component.html ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-attendancesubmenu></app-attendancesubmenu>\n<div class=\"container\">\n        <div class=\"col-xs-12\">\n            <div class=\"all-content-aria\">\n                <div class=\"row\">\n    <!---First Section--->   \n                       <!----<form action=\"#\" method=\"post\">---->\n                        <form >\n                        <div class=\"top-form-above-menu\">Position : Attendance -> Normal Rule</div>\n                        <div class=\"col-xs-12 panel panel-primary\">\n                                <div class=\"panel-body\"><b>Basic Settings</b></div>\n                                <div class=\"col-xs-12\">\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Check-In Rule\n                                                <select #mySelect (change)='checkInRuleMethod(mySelect.value)' name=\"Check_In\" class=\"form-control\"  >\n                                                        <option *ngFor=\"let prod of check_In_Rule_array; let i = index\" [value]=\"prod.id\" [selected]=\"i == check_In_Rule_init\">{{prod.name}} </option> \n                                                </select>\n                                        </div>\n\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Check-Out Rule\n                                                <select #mySelect1 (change)='checkOutRuleMethod(mySelect1.value)' name=\"Check_out\" class=\"form-control\"  >\n                                                        <option *ngFor=\"let prod of check_Out_Rule_array; let i = index\" [value]=\"prod.id\" [selected]=\"i == check_Out_Rule_init\">{{prod.name}} </option> \n                                                </select>\n                                        </div>\n\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Over Time Rule \n                                                <select #mySelect3 (change)='overTimeRuleMethod(mySelect3.value)' name=\"overTime\" class=\"form-control\"  >\n                                                        <option *ngFor=\"let prod of Overtime_Rule_array; let i = index\" [value]=\"prod.id\" [selected]=\"i == Overtime_Rule_init\">{{prod.name}} </option> \n                                                </select>\n                                        </div>\n\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Duplicate Punch Period(m)\n                                                <input type=\"text\" name=\"duplicatepunchPeriod\" class=\"form-control\"  [(ngModel)]=\"punchPeriod\">\n                                        </div> \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Department\n                                                <input type=\"text\" name=\"department\" class=\"form-control\"  (click)=\"showDepartment()\" [(ngModel)]=\"parentDepartment\">\n                                        </div> \n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Rule Name\n                                                <input type=\"text\" name=\"name\" class=\"form-control\"   [(ngModel)]=\"rule_Name\">\n                                        </div> \n                                 </div>                       \n                         </div>\n    <!---Second Section--->    \n                        <div class=\"col-xs-12 panel panel-primary\">\n                                <div class=\"panel-body\"><b>Weekend Settings</b></div>\n                                <div class=\"col-xs-12\">\n                                      <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                            \n                                        </div>\n                                        <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                        <label><input   type=\"checkbox\" value=\"mon\" [(checked)]=\"mon\" (change)=\"mon = !mon\" >Monday</label>\n                                        </div>\n                                        <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                        <label><input   type=\"checkbox\" value=\"tue\"   [(checked)]=\"tue\" (change)=\"tue = !tue\">Tuesday</label>\n                                        </div>\n                                        <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                        <label><input     type=\"checkbox\" value=\"wen\"  [(checked)]=\"wed\" (change)=\"wed = !wed\">Wednesday</label> \n                                        </div>\n                                        <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                        <label><input  type=\"checkbox\" value=\"thu\"  [(checked)]=\"thu\" (change)=\"thu = !thu\">Thursday</label>   \n                                        </div>\n                                        <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                        <label><input  type=\"checkbox\" value=\"fri\"  [(checked)]=\"fri\" (change)=\"fri = !fri\">Friday</label> \n                                        </div>\n                                </div> \n                                <div class=\"col-xs-12\">\n                                    <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                        \n                                    </div>\n                                    <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                    <label><input type=\"checkbox\" value=\"sat\"   [(checked)]=\"sat\" (change)=\"sat = !sat\">Saturday</label>\n                                    </div>\n                                    <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                    <label><input   type=\"checkbox\" value=\"sun\"  [(checked)]=\"sun\" (change)=\"sun = !sun\">Sunday</label>\n                                    </div>\n                                    <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                     \n                                    </div>\n                                    <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                    \n                                    </div>\n                                    <div class=\"col-sm-2 text-left md-form form-group mt-5 checkbox\">\n                                    \n                                    </div>\n                                    \n                                \n\n                                </div>                                               \n                        </div>\n     <!---Third Section--->  \n                        <div class=\"col-xs-12 panel panel-primary\">\n                                <div class=\"panel-body\"><b>Calculation</b></div>\n                                        <div class=\"col-xs-12\">\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                        <label for=\"late\">When Late exceeds:  </label>             \n                                                        <input type=\"number\" class=\"form-control\"  [(ngModel)]=\"lateExceed\" name=\"lateExceed\"> minutes,count as absence.  \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5\">\n                                                        <label for=\"late\">Early Leave exceeds   : </label>             \n                                                        <input type=\"number\" class=\"form-control\" name=\"earlyLeaveExceed\" [(ngModel)]=\"earlyLeaveExceed\" >  minutes,count as absence.\n                                                 </div> \n                                                \n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5  form-inlin\">\n                                                        <label for=\"late\">When there is no Check-In, count as</label>  \n                                                        <select #mySelect5 (change)='there_is_No_check_in_method(mySelect5.value)' name=\"there_is_No_check_in\" class=\"form-control\"  >\n                                                                <option *ngFor=\"let prod of there_is_No_check_in; let i = index\" [value]=\"prod.id\" [selected]=\"i == there_is_No_check_in_init\">{{prod.name}} </option> \n                                                        </select>\n                                                       \n                                                </div>\n                                                <div class=\"col-sm-1\">\n                                                <label for=\"late\">Minutes</label>\n                                                <input type=\"number\" class=\"form-control\" name=\"there_is_No_check_in_Minutes\" [(ngModel)]=\"there_is_No_check_in_Minutes\">\n                                                </div>\n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5  form-inlin\">\n                                                                <label for=\"late\">When there is no Check-Out, count as</label> \n                                                                <select #mySelect6 (change)='there_is_No_check_out_method(mySelect6.value)' name=\"there_is_No_check_in\" class=\"form-control\"  >\n                                                                        <option *ngFor=\"let prod of there_is_No_check_out; let i = index\" [value]=\"prod.id\" [selected]=\"i == there_is_No_check_out_init\">{{prod.name}} </option> \n                                                                </select>             \n                                                                  \n                                                 </div>\n                                                <div class=\"col-sm-1\">\n                                                        <label for=\"late\">Minutes</label>\n                                                        <input type=\"number\"  name=\"there_is_No_check_out_Minutes\"  class=\"form-control\" [(ngModel)]=\"there_is_No_check_out_Minutes\" >\n                                                </div>\n                                                 \n                                        </div> \n                                      <!--  <div class=\"col-xs-12\"> \n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5  form-inlin\">\n                                                        <label for=\"late\">Require Check In on leave period</label> \n                                                        <select #mySelect7 (change)='Require_Check_In_on_leave_period_method(mySelect7.value)' name=\"Check_In\" class=\"form-control\"  >\n                                                                <option *ngFor=\"let prod of Require_Check_In_on_leave_period; let i = index\" [value]=\"prod.id\" [selected]=\"i == Require_Check_In_on_leave_period_init\">{{prod.name}} </option> \n                                                        </select>                 \n                                                </div> \n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5  form-inlin\">\n                                                        <label for=\"late\">Require Check Out on leave period</label> \n                                                        <select #mySelect8 (change)='Require_Check_Out_on_leave_period_method(mySelect8.value)' name=\"Check_In\" class=\"form-control\"  >\n                                                                <option *ngFor=\"let prod of Require_Check_Out_on_leave_period; let i = index\" [value]=\"prod.id\" [selected]=\"i == Require_Check_Out_on_leave_period_init\">{{prod.name}} </option> \n                                                        </select>                  \n                                                </div> \n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5  form-inlin\">\n                                                        <label for=\"late\">Require Check In on training period</label> \n                                                        <select #mySelect9 (change)='Require_Check_In_on_training_period_method(mySelect9.value)' name=\"Check_In\" class=\"form-control\"  >\n                                                                <option *ngFor=\"let prod of Require_Check_In_on_training_period; let i = index\" [value]=\"prod.id\" [selected]=\"i == Require_Check_In_on_training_period_init\">{{prod.name}} </option> \n                                                        </select>                  \n                                                </div> \n                                                <div class=\"col-sm-3 text-left md-form form-group mt-5  form-inlin\">\n                                                        <label for=\"late\">Require Check Out on training period</label> \n                                                        <select #mySelect10 (change)='Require_Check_Out_on_training_period_method(mySelect10.value)' name=\"Check_In\" class=\"form-control\"  >\n                                                                <option *ngFor=\"let prod of Require_Check_Out_on_training_period; let i = index\" [value]=\"prod.id\" [selected]=\"i == Require_Check_Out_on_training_period_init\">{{prod.name}} </option> \n                                                        </select>                   \n                                                </div>      \n                                         </div> -->\n                                        <div class=\"col-xs-12\">\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                Check-In \n                                                <input type=\"text\" class=\"form-control\" name=\"checkin\" [(ngModel)]=\"check_in\">     \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                Check-Out \n                                                <input type=\"text\" class=\"form-control\" name=\"Check_Out\" [(ngModel)]=\"Check_Out\">     \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                Break-Out\n                                                <input type=\"text\" class=\"form-control\" name=\"Break_Out\" [(ngModel)]=\"Break_Out\">     \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                Break-In\n                                                <input type=\"text\" class=\"form-control\" name=\"Break_In\" [(ngModel)]=\"Break_In\">     \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                OT-In \n                                                <input type=\"text\" class=\"form-control\" name=\"OT_In\" [(ngModel)]=\"OT_In\">     \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                OT-Out\n                                                <input type=\"text\" class=\"form-control\" name=\"OT_Out\" [(ngModel)]=\"OT_Out\">     \n                                                </div>\n\n                                        </div>\n                                         <div class=\"col-xs-12\">\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                  \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                  \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                        <button type=\"submit\" (click)=\"submitFormData1($event)\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                                        <span class=\"glyphicon\" aria-hidden=\"true\"></span> Save\n                                                        </button>\n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                        <button type=\"submit\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                                        <span class=\"glyphicon\" aria-hidden=\"true\"></span> Cancel\n                                                        </button>\n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                  \n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                               \n                                                </div>\n                                                \n\n                                        </div>\n                        </div>\n                         </form>\n                </div>\n            </div>  \n        </div>\n</div> \n\n    \n    \n \n<app-footer></app-footer>\n\n<!--     DEPARTMENT SHOW DIALOG        -->\n\n<div class=\"col-sm-12 text-left md-form form-group mt-5\">\n        <p-dialog  [(visible)]=\"display_Department\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\" \n        [maximizable]=\"true\" [baseZIndex]=\"10000\">\n        <mat-accordion>\n                <mat-expansion-panel>\n                  <mat-expansion-panel-header>\n                    Select Parent Department\n                  </mat-expansion-panel-header>                                     \n                    <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                        <mat-tree-node *matTreeNodeDef=\"let node1\" matTreeNodeToggle matTreeNodePadding>\n                          \n                        <mat-radio-button value=\"{{node1.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node1.item}} </mat-radio-button>\n                          </mat-tree-node>  \n                    \n                    </mat-tree>`\n                  \n                </mat-expansion-panel>\n                <div align=\"right\">\n                    <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display_Department=false\" label=\"Yes\"></button>\n                    <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n                  </div>\n              </mat-accordion>\n    \n        \n    </p-dialog>\n    \n    </div>\n     "

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/attendance/shedule-list/shedule-list.component.html":
/*!***********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/attendance/shedule-list/shedule-list.component.html ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<p>shedule-list works!</p>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/attendance/shift-list/shift-list.component.html":
/*!*******************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/attendance/shift-list/shift-list.component.html ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-attendancesubmenu></app-attendancesubmenu>\n<div class=\"content_section\"> \n    <div class=\"col-xs-12\">\n        <div class=\"all-content-aria\">\n            <div class=\"top-form-above-menu\">Attendance -> Shift List</div>        \n                <div class=\"col-sm-14\">\n           \n    \n<div id=\"content\" #content>  \n    <p-toast position=\"top-left\"></p-toast>\n    <p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\n    <p-table id=\"mytable\" #dt [value]=\"allRules\" dataKey=\"primary_id\" [columns]=\"cols\"  editMode=\"row\" [paginator]=\"true\" [rowsPerPageOptions]=\"[10,15,20,50,1000,5000]\" [rows]=\"20\"  [resizableColumns]=\"true\">\n       \n            <ng-template pTemplate=\"caption\">\n                    <div style=\"text-align: right\">        \n                        <i class=\"fa fa-search\" style=\"margin:4px 4px 0 0\"></i>\n                        <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" style=\"width:auto\">\n                        <button type=\"button\" pButton icon=\"fa fa-check\" iconPos=\"left\" label=\"ADD\" routerLink=\"/addshif\" style=\"float:left\"></button>\n            \n                        </div>                   \n            </ng-template>\n            \n        <ng-template pTemplate=\"header\" let-columns []>\n           \n            <tr >\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn [ngStyle]=\"{'width': col.width}\">\n                    {{col.header}}\n                    <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n            </tr>\n            <tr>\n                <th *ngFor=\"let col of cols\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\n                 \n                    <input  pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, col.filterMatchMode)\" [value]=\"dt.filters[col.field]?.value\" >\n                          \n                   \n                </th>\n            </tr>\n            \n        </ng-template>\n \n       \n        <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n         \n            <tr [pEditableRow]=\"rowData\">\n             \n                <td>\n                    {{rowData.shift_name}}\n                </td>\n                <td>\n                    {{rowData.no_Of_Cycle}}\n                </td>\n                <td>\n                    {{rowData.unit_Of_Cycle}}\n                </td>\n                <td>\n                    {{rowData.auto_Shift}}\n                </td>\n            \n                <td>\n                    {{rowData.count_Day_Off_As}}\n                </td>\n                <td>\n                    {{rowData.count_Weekend_As}}\n                </td>\n                <td>\n                    {{rowData.shift_Day_Selection}}\n                </td>\n                <td>\n                    {{rowData.shift_Timetable_Selection}}\n                </td>\n               \n                \n                <td style=\"text-align:center ;width:2500px\" >\n                    \n                    <button *ngIf=\"!editing\" pButton type=\"button\" pInitEditableRow icon=\"pi pi-pencil\" class=\"ui-button-info\" (click)=\"onRowEditInit(rowData)\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pSaveEditableRow icon=\"pi pi-check\" class=\"ui-button-success\" (click)=\"onRowEditSave(rowData)\" style=\"margin-right: .5em\" A pTooltip=\"Edit\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-trash\" class=\"ui-button-danger\" (click)=\"onRowRemove(rowData, ri)\"  pTooltip=\"Delete\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-times\" class=\"ui-button-danger\" (click)=\"onRowEditCancel(rowData, ri)\" pTooltip=\"Cancel\" tooltipPosition=\"top\"></button>\n                   \n                    \n                </td>\n            </tr>\n          \n        </ng-template>\n            \n    </p-table>\n    </div>\n    \n    \n    \n</div>\n</div>\n</div>\n</div>   \n<div class=\"clearfix\"></div> \n<div class=\"col-sm-6\">\n    <div class=\"col-sm-12 text-left md-form form-group mt-1\">\n       \n          <div class=\"alert alert-dark\" role=\"alert\" *ngIf=\"errordisplayflag\">\n            {{errorDta}}\n          </div>\n    </div> \n </div>\n\n\n\n\n <p-dialog  [(visible)]=\"display\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\" \n [maximizable]=\"true\" [baseZIndex]=\"10000\">\n <mat-accordion>\n         <mat-expansion-panel>\n           <mat-expansion-panel-header>\n             Select Parent Position\n           </mat-expansion-panel-header>                                     \n             <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                 <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n                   \n                 <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                   </mat-tree-node>  \n             \n             </mat-tree>`\n           \n         </mat-expansion-panel>\n         <div align=\"right\">\n         <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Yes\"></button>\n         <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n       </div>\n       </mat-accordion>\n\n\n \n</p-dialog>\n<app-footer></app-footer>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/attendance/timetable-list/timetable-list.component.html":
/*!***************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/attendance/timetable-list/timetable-list.component.html ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-attendancesubmenu></app-attendancesubmenu>\n<div class=\"content_section\"> \n    <div class=\"col-xs-12\">\n        <div class=\"all-content-aria\">\n            <div class=\"top-form-above-menu\">Attendance -> Time Table List</div>        \n                <div class=\"col-sm-14\">\n           \n    \n<div id=\"content\" #content>  \n    <p-toast position=\"top-left\"></p-toast>\n    <p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\n    <p-table [autoLayout]=\"true\" id=\"mytable\" #dt [value]=\"allRules\" dataKey=\"primary_id\" [columns]=\"cols\"  editMode=\"row\" [paginator]=\"true\" [rowsPerPageOptions]=\"[10,15,20,50,1000,5000]\" [rows]=\"20\"  [resizableColumns]=\"true\">\n       \n            <ng-template pTemplate=\"caption\" >\n                    <div style=\"text-align: right\">       \n                        <button type=\"button\" pButton icon=\"fa fa-check\" iconPos=\"left\" label=\"ADD\" routerLink=\"/addtimeTable\" style=\"float:left\"></button> \n                        <i class=\"fa fa-search\" style=\"margin:4px 4px 0 0\"></i>\n                        <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" style=\"width:auto\">\n                        \n            \n                        </div>                   \n            </ng-template>\n            \n        <ng-template pTemplate=\"header\" let-columns []>\n           \n            <tr >\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn [ngStyle]=\"{'width': col.width}\">\n                    {{col.header}}\n                    <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n            </tr>\n            <tr>\n                <th *ngFor=\"let col of cols\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\n                 \n                    <input  pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, col.filterMatchMode)\" [value]=\"dt.filters[col.field]?.value\" >\n                          \n                   \n                </th>\n            </tr>\n            \n        </ng-template>\n \n       \n        <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n         \n            <tr [pEditableRow]=\"rowData\">\n                \n        \n                <td>\n                    {{rowData.timetable_Name}}\n                    \n                </td>\n\n\n                <td>\n                    {{rowData.check_In}}\n                </td>\n                <td>\n                    {{rowData.check_Out}}\n                </td>\n                <td>\n                    {{rowData.workday}}\n                </td>\n                <td>\n                    {{rowData.multiple_In_Out}}\n                </td>\n                <td>\n                    {{rowData.base_On_Punch_Type}}\n                </td>\n                <td>\n                    {{rowData.necessary_Check_In}}\n                </td>\n                <td>\n                    {{rowData.necessary_Check_OUT}}\n                </td>\n                <td>\n                    {{rowData.auto_OT_Check_In_Early}}\n                </td>\n                 <td>\n                    {{rowData.auto_OT_Check_Out_Delay}}\n                </td>\n                \n                <td style=\"text-align:center ;width:2500px\" >\n                    \n                    <button *ngIf=\"!editing\" pButton type=\"button\" pInitEditableRow icon=\"pi pi-pencil\" class=\"ui-button-info\" (click)=\"onRowEditInit(rowData)\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pSaveEditableRow icon=\"pi pi-check\" class=\"ui-button-success\" style=\"margin-right: .5em\" (click)=\"onRowEditSave(rowData)\" pTooltip=\"Edit\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-trash\" class=\"ui-button-danger\" (click)=\"onRowRemove(rowData, ri)\"  pTooltip=\"Delete\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-times\" class=\"ui-button-danger\" (click)=\"onRowEditCancel(rowData, ri)\" pTooltip=\"Cancel\" tooltipPosition=\"top\"></button>\n                   \n                    \n                </td>\n            </tr>\n          \n        </ng-template>\n            \n    </p-table>\n    </div>\n    \n    \n    \n</div>\n</div>\n</div>\n</div>   \n<div class=\"clearfix\"></div> \n<div class=\"col-sm-6\">\n    <div class=\"col-sm-12 text-left md-form form-group mt-1\">\n       \n          <div class=\"alert alert-dark\" role=\"alert\" *ngIf=\"errordisplayflag\">\n            {{errorDta}}\n          </div>\n    </div> \n </div>\n\n\n\n\n <p-dialog  [(visible)]=\"display\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\" \n [maximizable]=\"true\" [baseZIndex]=\"10000\">\n <mat-accordion>\n         <mat-expansion-panel>\n           <mat-expansion-panel-header>\n             Select Parent Position\n           </mat-expansion-panel-header>                                     \n             <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                 <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n                   \n                 <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                   </mat-tree-node>  \n             \n             </mat-tree>`\n           \n         </mat-expansion-panel>\n         <div align=\"right\">\n         <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Yes\"></button>\n         <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n       </div>\n       </mat-accordion>\n\n\n \n</p-dialog>\n<app-footer></app-footer>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/attendance/transaction-list/transaction-list.component.html":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/attendance/transaction-list/transaction-list.component.html ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-attendancesubmenu></app-attendancesubmenu>\n<div class=\"content_section\">\n        <div class=\"all-content-aria \">\n            <div class=\"top-form-above-menu\">Position : Attendance -> Transation</div>\n    <p-toast position=\"top-left\"></p-toast>\n    <p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\n\n    <p-table id=\"mytable\" #dt [value]=\"allDevice\" dataKey=\"SL_NO\"  [columns]=\"cols\"   [paginator]=\"true\" [rowsPerPageOptions]=\"[10,15,20,50,1000,5000]\" [rows]=\"20\"   [autoLayout]=\"true\" editMode=\"row\" >\n            <ng-template pTemplate=\"caption\">\n                    <div style=\"text-align: right\" class=\"form-group\">\n                 <i class=\"fa fa-search\" style=\"margin:4px 4px 0 0\"></i>\n                        <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" class=\"form-control\">\n\n                        <div class=\"progress\" *ngIf=\"progressBar\">\n                          <div *ngIf=\"progressBar\" class=\"progress-bar progress-bar-warning\" [ngStyle]=\"{'width.%': value}\" ></div>\n                        </div>\n\n\n                        <p-messages [(value)]=\"msgs\"></p-messages>\n                        </div>\n                        <div>\n                          <button type=\"button\" pButton icon=\"pi pi-file-excel\" iconPos=\"left\" label=\"EXCEL\" (click)=\"exportExcel()\" style=\"margin-right: 0.5em;\" class=\"ui-button-success\"></button>\n                          <button type=\"button\" pButton icon=\"pi pi-file-pdf\" iconPos=\"left\" label=\"PDF\" (click)=\"exportPdf(dt)\" class=\"ui-button-warning\"></button>\n                          From\n                          <input type=\"date\" name=\"fromDate\" [(ngModel)]=\"fromDate\" pattern=\"\\d{4}-\\d{2}-\\d{2}\">\n                          To\n                          <input type=\"date\" name=\"toDate\" [(ngModel)]=\"toDate\">\n                          <button (click)=\"searchByDate()\"  style=\"margin-right: 0.5em;\" >Seearch</button>\n\n                        </div>\n\n            </ng-template>\n\n        <ng-template pTemplate=\"header\" let-columns []>\n            <tr >\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn [ngStyle]=\"{'width': auto}\">\n                    {{col.header}}\n                    <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n            </tr>\n            <tr>\n                <th *ngFor=\"let col of cols\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\n\n                    <input  pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, col.filterMatchMode)\" [value]=\"dt.filters[col.field]?.value\"  >\n\n\n                </th>\n            </tr>\n\n\n        </ng-template>\n\n\n        <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n\n            <tr [pEditableRow]=\"rowData\">\n\n                <td>\n                    {{rowData.SL_NO}}\n\n            {{mytabledetails(dt)}}\n\n            </td>\n                <td>\n                        {{rowData.employ_SN}}\n\n                </td>\n                <td>\n                    {{rowData.Date}}\n                </td>\n                <td>\n                        {{rowData.Day}}\n\n\n                </td>\n                <td>\n                        {{rowData.Time}}\n\n                </td>\n\n                 <td>\n\n                            {{rowData.First_name}}\n\n                </td>\n                 <td>\n\n                            {{rowData.last_name}}\n\n                </td>\n                 <td>\n\n                            {{rowData.department}}\n\n                </td> <td>\n\n                            {{rowData.area_code}}\n\n                </td> <td>\n\n                            {{rowData.area_name}}\n\n                </td> <td>\n\n                            {{rowData.posistion}}\n\n                </td>\n                 <td>\n\n                            {{rowData.check_type}}\n\n                </td>\n\n\n            </tr>\n\n        </ng-template>\n\n    </p-table>\n\n<div class=\"col-sm-6\">\n    <div class=\"col-sm-12 text-left md-form form-group mt-1\">\n\n          <div class=\"alert alert-dark\" role=\"alert\" *ngIf=\"errordisplayflag\">\n            {{errorDta}}\n          </div>\n    </div>\n </div>\n\n\n\n\n <p-dialog  [(visible)]=\"display\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\"\n [maximizable]=\"true\" [baseZIndex]=\"10000\">\n <mat-accordion>\n         <mat-expansion-panel>\n           <mat-expansion-panel-header>\n             Select Parent Area\n           </mat-expansion-panel-header>\n             <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                 <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n\n                 <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                   </mat-tree-node>\n\n             </mat-tree>`\n\n         </mat-expansion-panel>\n         <div align=\"right\">\n         <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Yes\"></button>\n         <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n       </div>\n       </mat-accordion>\n\n\n</p-dialog>\n        </div>\n        </div>\n<app-footer></app-footer>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/contact-form/contact-form.component.html":
/*!************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/contact-form/contact-form.component.html ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <title> FingerPrint</title>\n\n    <link rel=\"shortcut icon\" href=\"assets_login/images/fav.jpg\">\n    <link rel=\"stylesheet\" href=\"/assets/assets_login/css/bootstrap.min.css\">\n    <link rel=\"stylesheet\" href=\"/assets/assets_login/css/fontawsom-all.min.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/assets/assets_login/css/style.css\" />\n</head>\n\n<body>\n    <div class=\"container-fluid \">\n        <div class=\"container \">\n            <div class=\"row \">\n                <div class=\"col-sm-10 login-box\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-8 col-md-7 log-det\">\n                            <div class=\"small-logo\">\n\n                            </div>\n                            <div class=\"col-sm-12 text-center\">\n                                <h1> <span style=\"color:#055685;\"><p><b>Welcome To Real time</b></p></span> </h1>\n                                </div>\n                                <div class=\"row\">\n                                  <ul>\n                                      <li></li>\n                                      <li></li>\n                                      <li></li>\n                                  </ul>\n                              </div>\n                            <div class=\"row\">\n                                <div class=\"col-sm-12 text-center\">\n                               <h1> <span style=\"color:#ac0b18;\"><p>Please Contact Our Support Team</p></span> </h1>\n                               </div>\n                            </div>\n\n\n                            <div class=\"text-box-cont\">\n                                <div class=\"input-group mb-3\">\n                                    <img src=\"/assets/img/contact.png\" >\n\n                                </div>\n                                 <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n\n                                    </div>\n\n                                </div>\n                                <div class=\"row\">\n\n                                </div>\n                                <div class=\"input-group center mb-3\">\n\n                                </div>\n                            </div>\n\n\n\n                        </div>\n                        <div class=\"col-lg-4 col-md-4 box-de\">\n                            <div class=\"ditk-inf\">\n                                    <img src=\"/assets/img/logo.png\" >\n                                <b><u>\n                                <h2 class=\"w-100\">Our Team </h2></u></b>\n\n                                <h4>\n                                <p>Harsh Planet View<br>\n                                Mavoor Road<br>\n                                Calicut-01<br>\n                                KERALA-INDIA<br>\n                                Mob:+91-7034136896<br>\n                              </p>\n                            </h4>\n                            <br>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</body>\n\n<script src=\"/assets/assets_login/js/jquery-3.2.1.min.js\"></script>\n<script src=\"/assets/assets_login/js/popper.min.js\"></script>\n<script src=\"/assets/assets_login/js/bootstrap.min.js\"></script>\n<script src=\"/assets/assets_login/js/script.js\"></script>\n\n\n</html>\n\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/device/device.component.html":
/*!************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/device/device.component.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-devicesubmenu></app-devicesubmenu>\n<div class=\"content_section\">\n        <div class=\"all-content-aria \">\n            <div class=\"top-form-above-menu\">Position : Device -> Device</div>\n    <p-toast position=\"top-left\"></p-toast>\n    <p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\n\n    <p-table id=\"mytable\" #dt [value]=\"allDevice\" dataKey=\"Serial_Number\"  [columns]=\"cols\"   [paginator]=\"true\" [rowsPerPageOptions]=\"[10,15,20,50,1000,5000]\" [rows]=\"20\"   [autoLayout]=\"true\" editMode=\"row\" >\n            <ng-template pTemplate=\"caption\">\n                    <div style=\"text-align: right\" class=\"form-group\">\n                        <button type=\"button\"  pButton icon=\"pi pi-file-o\" iconPos=\"left\" label=\"ADD\" routerLink=\"/addevice\" style=\"float:left\"></button>\n                        <i class=\"fa fa-search\" style=\"margin:4px 4px 0 0\"></i>\n                        <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" class=\"form-control\">\n                        <p-messages [(value)]=\"msgs\"></p-messages>\n                        </div>\n            </ng-template>\n\n        <ng-template pTemplate=\"header\" let-columns []>\n            <tr >\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn [ngStyle]=\"{'width': auto}\">\n                    {{col.header}}\n                    <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n            </tr>\n            <tr>\n                <th *ngFor=\"let col of cols\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\n\n                    <input  pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, col.filterMatchMode)\" [value]=\"dt.filters[col.field]?.value\"  >\n\n\n                </th>\n            </tr>\n\n\n        </ng-template>\n\n\n        <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n\n            <tr [pEditableRow]=\"rowData\">\n\n                <td>\n                        {{rowData.device_Name}}\n\n                </td>\n                <td>\n                    {{rowData.Serial_Number}}\n                </td>\n                <td>\n                        {{rowData.ip_address}}\n\n\n                </td>\n                <td>\n                        {{rowData.area_id}}\n\n                </td>\n                <td >\n                        <div style=\"text-align: center\">\n                            <div *ngIf=\"rowData.status; then thenBlock else elseBlock\"></div>\n                            <ng-template #thenBlock><span class=\"glyphicon glyphicon-ok\" style=\"color:#00FF00;\"></span></ng-template>\n                            <ng-template #elseBlock><span class=\"glyphicon glyphicon-remove\" style=\"color:#FF0000;\"></span></ng-template>\n                        </div>\n\n\n\n                </td>\n                 <td>\n\n                            {{rowData.last_activity}}\n\n                </td>\n                 <td>\n\n                            {{rowData.device_type}}\n\n                </td>\n                 <td>\n\n                            {{rowData.firmware_Version}}\n\n                </td> <td>\n\n                            {{rowData.user_count}}\n\n                </td> <td>\n\n                            {{rowData.fp_count}}\n\n                </td> <td>\n\n                            {{rowData.face_count}}\n\n                </td>\n                 <td>\n\n                            {{rowData.fv_Count}}\n\n                </td>\n                <td>\n\n                            {{rowData.palm_Count}}\n\n                </td>\n\n                <td style=\"min-width:150px; text-align:center\" >\n\n                    <button *ngIf=\"!editing\" pButton type=\"button\" pInitEditableRow icon=\"pi pi-pencil\" class=\"ui-button-info\" (click)=\"onRowEditInit(rowData)\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pSaveEditableRow icon=\"pi pi-check\" class=\"ui-button-success\" style=\"margin-right: .5em\" (click)=\"onRowEditSave(rowData)\" pTooltip=\"Edit\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-trash\" class=\"ui-button-danger\" style=\"margin-right: .5em\" (click)=\"onRowRemove(rowData, ri)\"  pTooltip=\"Delete\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-times\" class=\"ui-button-danger\" style=\"margin-right: .5em\" (click)=\"onRowEditCancel(rowData, ri)\" pTooltip=\"Cancel\" tooltipPosition=\"top\"></button>\n\n\n                </td>\n            </tr>\n\n        </ng-template>\n\n    </p-table>\n\n<div class=\"col-sm-6\">\n    <div class=\"col-sm-12 text-left md-form form-group mt-1\">\n\n          <div class=\"alert alert-dark\" role=\"alert\" *ngIf=\"errordisplayflag\">\n            {{errorDta}}\n          </div>\n    </div>\n </div>\n\n\n\n\n <p-dialog  [(visible)]=\"display\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\"\n [maximizable]=\"true\" [baseZIndex]=\"10000\">\n <mat-accordion>\n         <mat-expansion-panel>\n           <mat-expansion-panel-header>\n             Select Parent Area\n           </mat-expansion-panel-header>\n             <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                 <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n\n                 <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                   </mat-tree-node>\n\n             </mat-tree>`\n\n         </mat-expansion-panel>\n         <div align=\"right\">\n         <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Yes\"></button>\n         <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n       </div>\n       </mat-accordion>\n\n\n</p-dialog>\n        </div>\n        </div>\n<app-footer></app-footer>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/error/error.component.html":
/*!**********************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/error/error.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->\n\n    <title>404 HTML Template by Colorlib</title>\n\n    <!-- Google font -->\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:400,700\" rel=\"stylesheet\">\n\n    <!-- Custom stlylesheet -->\n\n\n    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n          <script src=\"https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js\"></script>\n          <script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>\n        <![endif]-->\n\n</head>\n\n<body>\n\n    <div id=\"notfound\">\n        <div class=\"notfound\">\n            <div class=\"notfound-404\">\n                <h1>4<span>0</span>4</h1>\n            </div>\n            <h2>the page you requested could not found</h2>\n            <form class=\"notfound-search\">\n                <input type=\"text\" placeholder=\"Search...\">\n                <button type=\"button\"><span></span></button>\n            </form>\n        </div>\n    </div>\n\n</body><!-- This templates was made by Colorlib (https://colorlib.com) -->\n\n</html>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/footer/footer.component.html":
/*!************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/footer/footer.component.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"footer text-center banner-margin\">\n    © 2019 RealTime Finger Print App, in All Rights Reserved...\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/header/header.component.html":
/*!************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/header/header.component.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "    <div class=\"header-top\">\n    \t<div class=\"col-md-12\">\n        \t<div class=\"col-md-8\"></div>\n        \t    <div class=\"col-md-1 welcome-text-padding\">Welcome</div>\n                    <div class=\"col-md-1 welcome-text-padding\"></div>\n                        <div class=\"col-md-2 top-icons-padding\">\n                            <a routerLink=\"/oracledbSetup\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Settings\"> <img src=\"assets/img/settings.png\" /> </a>\n                            <a routerLink=\"/contact\"> <img data-toggle=\"tooltip\" data-placement=\"top\" title=\"Help\" src=\"assets/img/what.png\" /> </a>\n                            <a routerLink=\"/contact\"> <img data-toggle=\"tooltip\" data-placement=\"top\" title=\"Info\" src=\"assets/img/abt-icon.png\" /> </a>\n                            <a routerLink=\"/personnals\"> <img data-toggle=\"tooltip\" data-placement=\"top\" title=\"Profiles\" src=\"assets/img/cnt.png\" /> </a>\n                            <a routerLink=\"/logout\"> <img  class=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Logout\" src=\"assets/img/logout.png\" /></a>\n                        </div>\n                    </div>\n                </div>\n                <!-- header section -->\n                <header>\n                        <nav class=\"navbar navbar-default \">\n                            <div class=\"container-fluid\">\n                                <!-- header section -->\n                                <div class=\"navbar-header\">\n                                        <a class=\"img-fluid\" routerLink=\"/personnel\">\n                                            <img src=\"/assets/img/logo.png\" >\n                                        </a>\n                                        <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\n                                            <span class=\"icon-bar\"></span>\n                                            <span class=\"icon-bar\"></span>\n                                            <span class=\"icon-bar\"></span>\n                                        </button>\n                                </div>\n                                <!-- Collapse Menu -->\n                                <div class=\"collapse navbar-collapse navbar-right\" id=\"myNavbar\">\n                                    <ul class=\"nav navbar-nav\">\n                                        <li ><a routerLink=\"/personnals\">Personnel</a></li>\n                                        <li><a routerLink=\"/device\">Device</a></li>\n                                        <li><a routerLink=\"/transaction\">Attendance</a></li>\n                                        <li><a routerLink=\"/oracledbSetup\">System</a></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </nav>\n                </header>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/log-out/log-out.component.html":
/*!**************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/log-out/log-out.component.html ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/login/login.component.html":
/*!**********************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/login/login.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!doctype html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n    <title> FingerPrint</title>\r\n\r\n    <link rel=\"shortcut icon\" href=\"/assets_login/images/fav.jpg\">\r\n    <link rel=\"stylesheet\" href=\"/assets/css/bootstrap1.min.css\">\r\n    <link rel=\"stylesheet\" href=\"/assets/css/fontawsom-all1.min.css\">\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/assets/css/style1.css\" />\r\n</head>\r\n\r\n<body>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"container \">\r\n            <div class=\"row \">\r\n                <div class=\"col-sm-10 login-box\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-8 col-md-7 log-det\">\r\n                            <div class=\"small-logo\">\r\n\r\n                            </div>\r\n                            <h2>Sign in to RealTime</h2>\r\n                            <div class=\"row\">\r\n                                <ul>\r\n                                    <li><i class=\"fab fa-facebook-f\"></i></li>\r\n                                    <li><i class=\"fab fa-twitter\"></i></li>\r\n                                    <li><i class=\"fab fa-linkedin-in\"></i></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <p class=\"small-info\">Use your Username and Password</p>\r\n\r\n                            </div>\r\n\r\n                          <form #add_loginForm=\"ngForm\" (ngSubmit)=\"login(add_loginForm)\" ngNativeValidate>\r\n\r\n                            <div class=\"text-box-cont\">\r\n                                <div class=\"input-group mb-3\">\r\n                                    <div class=\"input-group-prepend\">\r\n                                        <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"fas fa-user\"></i></span>\r\n                                    </div>\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" name=\"username\"[(ngModel)]=\"userName\" required autocomplete=\"off\">\r\n                                </div>\r\n                                 <div class=\"input-group mb-3\">\r\n                                    <div class=\"input-group-prepend\">\r\n                                        <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"fas fa-lock\"></i></span>\r\n                                    </div>\r\n                                    <input type=\"password\" class=\"form-control\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\" name=\"password\"[(ngModel)]=\"password\" required>\r\n                                </div>\r\n                                <div *ngIf=\"error\" class=\"alert alert-danger\" role=\"alert\">\r\n                                  Incorect Username or Password\r\n                                </div>\r\n                                <div *ngIf=\"error1\" class=\"alert alert-danger\" role=\"alert\">\r\n                                  Incorect Hosted Server address\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <p class=\"forget-p\">Forget Password ?</p>\r\n                                </div>\r\n                                <div class=\"input-group center mb-3\">\r\n                                    <button class=\"btn btn-primary btn-round\">SIGN IN</button>\r\n                                </div>\r\n                            </div>\r\n                          </form>\r\n\r\n\r\n                        </div>\r\n                        <div class=\"col-lg-4 col-md-5 box-de\">\r\n                            <div class=\"ditk-inf\">\r\n\r\n                                    <img src=\"/assets/img/logo.png\" >\r\n\r\n                                <b><u>\r\n                                <h2 class=\"w-100\">Din't Have an Account </h2></u></b>\r\n                                <h4>\r\n                                <p>Create your account by clicking the Signup Button</p></h4>\r\n                                <a href=\"#\">\r\n                                <button type=\"button\" class=\"btn btn-outline-light\">SIGN UP</button>\r\n                                <button type=\"button\" class=\"btn btn-outline-light\">SIGN UP</button>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n<script src=\"/assets/js/jquery1-3.2.1.min.js\"></script>\r\n<script src=\"/assets/js/popper1.min.js\"></script>\r\n<script src=\"/assets/js/bootstrap1.min.js\"></script>\r\n<script src=\"/assets/js/script1.js\"></script>\r\n\r\n\r\n\r\n<div class=\"container\">\r\n<p-dialog header=\"Set IP Address And Port \" [(visible)]=\"display\" position=\"bottomright\" [modal]=\"true\" [style]=\"{width: '18vw'}\" [maximizable]=\"false\" [baseZIndex]=\"100\"\r\n    [draggable]=\"false\" [resizable]=\"false\">\r\n   <div>\r\n    <form  class=\"form-group\">\r\n\r\n      <input type=\"text\"  class=\"form-group\" [(ngModel)]=\"ip\" name=\"ip\" placeholder=\"Host Url\" ><br>\r\n\r\n\r\n      <button type=\"submit\" class=\"btn btn-default\" (click)=\"basicSettings()\">Save</button>\r\n\r\n    </form>\r\n\r\n   </div>\r\n</p-dialog>\r\n<i class=\"pi pi-cog\" (click)=\"showDialog()\"  style=\"font-size: 5em\" ></i>\r\n</div>\r\n</html>\r\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/personnel/addepartment/addepartment.component.html":
/*!**********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/personnel/addepartment/addepartment.component.html ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-personnelsubmenu></app-personnelsubmenu>\n<div class=\"container\">\n    <div class=\"col-xs-12\">\n        <div class=\"all-content-aria\">\n            <div class=\"top-form-above-menu\">Position : Perssonel -> Add New Department</div>\n            <p-messages [(value)]=\"msgs\"></p-messages>\n            <div class=\"col-sm-12 panel panel-primary\">\n                    <div class=\"panel-body\"><b>Add New Department</b></div>\n            <div class=\"row\">\n                <div class=\"col-xs-12\">\n                        <div class=\"col-sm-4\">\n                        </div>\n                    <div class=\"col-sm-4\">\n                        <form #add_DepartmentForm=\"ngForm\" (ngSubmit)=\"addNewDepartmentForm(add_DepartmentForm)\" ngNativeValidate>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n\n                            </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                <input type=\"text\" name=\"departmentno\" placeholder=\"Department No\" class=\"form-control\" ngModel required>\n                            </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                <input type=\"text\" name=\"Department\" placeholder=\"Department\" class=\"form-control\" ngModel required>\n                            </div>\n\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                            <input type=\"text\" name=\"parentarea\" (click)=\"showDialog()\" placeholder=\"Parent Department\" class=\"form-control\" [(ngModel)]=\"parentArea\" readonly>\n                            </div>\n\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                    <p-dialog  [(visible)]=\"display\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\"\n                                    [maximizable]=\"true\" [baseZIndex]=\"10000\">\n                                    <mat-accordion>\n                                            <mat-expansion-panel>\n                                              <mat-expansion-panel-header>\n                                                Select Parent Department\n                                              </mat-expansion-panel-header>\n                                                <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                                                    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n\n                                                    <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                                                      </mat-tree-node>\n\n                                                </mat-tree>`\n\n                                            </mat-expansion-panel>\n                                            <div align=\"right\">\n                                              <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Yes\"></button>\n                                              <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n                                            </div>\n\n                                          </mat-accordion>\n\n\n                            </p-dialog>\n                             <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                    <div class=\"col-sm-6\">\n                                        <button type=\"submit\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                            <span class=\"glyphicon\" aria-hidden=\"true\"></span> Save\n                                        </button>\n                                    </div>\n                                    <div class=\"col-sm-6\">\n                                            <button type=\"button\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                            <span class=\"glyphicon\" aria-hidden=\"true\"></span> Cancel\n                                            </button>\n                                    </div>\n\n                            </div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/personnel/addpersonnel/addpersonnel.component.html":
/*!**********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/personnel/addpersonnel/addpersonnel.component.html ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-personnelsubmenu></app-personnelsubmenu>\n<div class=\"container\">\n    <div class=\"col-xs-12\">\n        <div class=\"all-content-aria\">\n            <div class=\"row\">\n<!---First Section--->\n                <form #addpersonnelFomr (ngSubmit)=\"get_add_New_Perssonnel_Form_Data(addpersonnelFomr)\" ngNativeValidate >\n                <div class=\"top-form-above-menu\">Position : Perssonel -> Add Perssonel</div>\n                <p-messages [(value)]=\"msgs\"></p-messages>\n                <div class=\"col-xs-12 panel panel-primary\">\n                        <div class=\"panel-body\"><b>Personnel Profile</b></div>\n                        <div class=\"col-xs-12\">\n                            <table width=\"100%\" height=\"50%\" cellspacing=\"0\" border=\"0\">\n                                    <tr>\n                                      <td style=\"width:25%;     padding:0.3em;\">Personnel No<input type=\"number\" name=\"PersonnelNo\" [(ngModel)]=\"personnel_No\" class=\"form-control\" required></td>\n                                      <td style=\"width:2%;  padding:0.3em;\">&nbsp;</td>\n                                      <td style=\"width:25%;     padding:0.3em;\">First Name<input type=\"text\" name=\"Firstname\" [(ngModel)]=\"first_name\"  required class=\"form-control\" required></td>\n                                      <td style=\"width:2%;  padding:0.3em;\">&nbsp;</td>\n                                      <td style=\"width:25%;     padding:0.3em;\">Last Name<input type=\"text\" name=\"Lastname\" [(ngModel)]=\"last_name\" class=\"form-control\" required></td>\n                                      <td style=\"width:2%;  padding:0.3em;\">&nbsp;</td>\n                                      <td rowspan=\"3\"> <img [src]=\"imageUrl\" width=\"150\" height=\"200\" alt=\"image not available\" /></td>\n                                    </tr>\n                                    <tr>\n                                      <td style=\"width:25%;     padding:0.3em;\">Gender\n                                        <select #mySelect1 (change)='Gender_Selection_Method(mySelect1.value)' name=\"gender\" class=\"form-control\"  >\n                                            <option *ngFor=\"let prod of Gender_Selection; let i = index\" [value]=\"prod.id\" [selected]=\"i == Gender_Selection_init\">{{prod.name}} </option>\n                                    </select>\n                                    </td>\n                                      <td style=\"width:2%;  padding:0.3em;\">&nbsp;</td>\n                                      <td style=\"width:25%;     padding:0.3em;\">Department<input type=\"text\" name=\"Department\"  class=\"form-control\" (click)=\"showDepartment()\" [(ngModel)]=\"parentDepartment\" required  ></td>\n                                      <td style=\"width:2%;  padding:0.3em;\">&nbsp;</td>\n                                      <td style=\"width:25%;     padding:0.3em;\">Position<input type=\"text\" name=\"Position\" (click)=\"showPosition()\" class=\"form-control\" [(ngModel)]=\"parentPosition\" required></td>\n                                      <td style=\"width:2%;  padding:0.3em;\">&nbsp;</td>\n                                    </tr>\n                                    <tr>\n                                      <td style=\"width:25%;     padding:0.3em;\">EmploymentType\n                                        <select #mySelect2 (change)='employment_type_Method(mySelect2.value)' name=\"employmentType\" class=\"form-control\"  >\n                                            <option *ngFor=\"let prod of employment_type_Array; let i = index\" [value]=\"prod.id\" [selected]=\"i == employment_type_init\">{{prod.name}} </option>\n                                    </select>\n                                    </td>\n                                      <td style=\"width:2%;  padding:0.3em;\">&nbsp;</td>\n                                      <td style=\"width:25%;     padding:0.3em;\">Type\n                                        <select #mySelect3 (change)='employment_type_Method1(mySelect3.value)' name=\"employmentType1\" class=\"form-control\"  >\n                                            <option *ngFor=\"let prod of employment_type_Array1; let i = index\" [value]=\"prod.id\" [selected]=\"i == employment_type_init1\">{{prod.name}} </option>\n                                    </select>\n                                    </td>\n                                      <td style=\"width:2%;  padding:0.3em;\">&nbsp;</td>\n                                      <td style=\"width:25%;     padding:0.3em;\">Employment Date<input type=\"date\"  name=\"EmploymentDate\"  class=\"form-control\"  (change)=\"employmentDate_Method()\" [(ngModel)]=\"myDate\" ></td>\n                                      <td style=\"width:2%;  padding:0.3em;\">&nbsp;</td>\n                                    </tr>\n                                    <tr>\n                                      <td style=\"width:25%;     padding:0.3em;\">Password<input type=\"password\" name=\"Password\" [(ngModel)]=\"password\" class=\"form-control\" required></td>\n                                      <td style=\"width:2%;  padding:0.3em;\">&nbsp;</td>\n                                      <td style=\"width:25%;     padding:0.3em;\">Card No <input type=\"text\" name=\"Cardno\" [(ngModel)]=\"Card_No\" class=\"form-control\"></td>\n                                      <td>&nbsp;</td>\n                                      <td>&nbsp;</td>\n                                      <td>&nbsp;</td>\n                                      <td><input type=\"file\" class=\"form-control\" (change)=\"handleFileInput($event.target.files,$event)\" name=\"customFile\"></td>\n                                    </tr>\n                                    <tr>\n                                            <td>&nbsp;</td>\n                                            <td>&nbsp;</td>\n                                            <td>&nbsp;</td>\n                                            <td>&nbsp;</td>\n                                            <td>&nbsp;</td>\n                                            <td>&nbsp;</td>\n                                            <td>&nbsp;</td>\n                                          </tr>\n                                  </table>\n                    </div>\n\n                </div>\n<!---Second Section--->\n\n                <div class=\"col-xs-12 panel panel-primary\">\n                        <div class=\"panel-body\"><b>Personnel Details</b></div>\n                        <div class=\"col-xs-12\">\n                                    <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                        Work Address\n                                        <input type=\"text\" name=\"Workaddress\"  [(ngModel)]=\"worke_address\" class=\"form-control\"  >\n                                    </div>\n                                    <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                        Office Telephone\n                                        <input type=\"text\" name=\"Officetelephone\" [(ngModel)]=\"office_no\" class=\"form-control\">\n                                    </div>\n                                    <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                        Birthday\n                                        <input type=\"date\" name=\"myDate1\" (change)=\"birthDate_Method()\" [(ngModel)]=\"myDate1\" [value]=\"myDate1 | date:'yyyy-MM-dd'\" class=\"form-control\">\n                                    </div>\n                                    <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                        Home Address\n                                        <input type=\"text\" name=\"Homeaddress\" [(ngModel)]=\"home_address\" class=\"form-control\">\n                                    </div>\n                        </div>\n                        <div class=\"col-xs-12\">\n                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                    Home Telephone\n                                    <input type=\"text\" [(ngModel)]=\"home_no\" name=\"HomeTelephone\"  class=\"form-control\"   >\n                                </div>\n                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                    ID Number\n                                    <input type=\"text\" [(ngModel)]=\"id_number\" name=\"PostalCode\"  class=\"form-control\">\n                                </div>\n                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                    Mobile Phone\n                                    <input type=\"text\" [(ngModel)]=\"mob_no\" name=\"MobilePhone\"  class=\"form-control\" required>\n                                </div>\n                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                    Email\n                                    <input type=\"Email\" [(ngModel)]=\"email\" name=\"Type\"  class=\"form-control\" required>\n                                </div>\n\n                        </div>\n                            <div class=\"col-xs-12\">\n\n                                    <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                        User Name\n                                        <input type=\"text\" [(ngModel)]=\"user_name\" name=\"Nickname\"  class=\"form-control\" required>\n                                    </div>\n                                    <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                      Is Active user\n                                      <select #mySelecta (change)='isActive_array_Method(mySelecta.value)' name=\"isActive\" class=\"form-control\"  >\n                                        <option *ngFor=\"let prod of isActive_array; let i = index\" [value]=\"prod.id\" [selected]=\"i == isActive_init\">{{prod.name}} </option>\n                                      </select>\n                                    </div>\n                                    <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                    </div>\n                            </div>\n\n                </div>\n <!---Third Section--->\n                <div class=\"col-xs-12 panel panel-primary\">\n                        <div class=\"panel-body\"><b>Attendance Settings</b></div>\n                        <div class=\"col-xs-12\">\n                                    <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                        Area\n                                        <input type=\"text\" (click)=\"showArea()\" [(ngModel)]=\"parentArea\" name=\"ParentArea\"  class=\"form-control\" required >\n                                    </div>\n                                    <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                        Self Password\n                                        <input type=\"text\" name=\"Self Password\"  [(ngModel)]=\"self_password\" class=\"form-control\">\n                                    </div>\n                                    <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                        Enable Attendance Function\n                                        <select #mySelect5 (change)='enableAttendanceFunction_Method(mySelect5.value)' name=\"enableAttendance\" class=\"form-control\"  >\n                                          <option *ngFor=\"let prod of enableAttendanceFunction; let i = index\" [value]=\"prod.id\" [selected]=\"i == enableAttendanceFunction_init\">{{prod.name}} </option>\n                                        </select>\n                                    </div>\n                                    <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                        Device Privilege\n                                        <select #mySelect6 (change)='device_Privillage_Method(mySelect6.value)' name=\"devicePrivillege\" class=\"form-control\"  >\n                                          <option *ngFor=\"let prod of device_Privillage_Array; let i = index\" [value]=\"prod.id\" [selected]=\"i == device_Privillage_init\">{{prod.name}} </option>\n                                        </select>\n                                    </div>\n                        </div>\n                        <div class=\"col-xs-12\">\n                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n\n                                </div>\n                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n\n                                </div>\n                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n\n                                </div>\n                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n\n                                </div>\n\n                        </div>\n                        <div class=\"col-xs-12\">\n                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n\n                                </div>\n                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                        <button type=\"submit\"   class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                                <span class=\"glyphicon\" aria-hidden=\"true\"></span> Save\n                                              </button>\n\n\n                                </div>\n                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                        <button type=\"reset\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                                <span class=\"glyphicon\" aria-hidden=\"true\"></span> Cancel\n                                              </button>\n                                </div>\n                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n\n                                </div>\n                        </div>\n\n                </div>\n\n\n            </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!--     DEPARTMENT SHOW DIALOG        -->\n\n<div class=\"col-sm-12 text-left md-form form-group mt-5\">\n    <p-dialog  [(visible)]=\"display_Department\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\"\n    [maximizable]=\"true\" [baseZIndex]=\"10000\">\n    <mat-accordion>\n            <mat-expansion-panel>\n              <mat-expansion-panel-header>\n                Select Parent Department\n              </mat-expansion-panel-header>\n                <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                    <mat-tree-node *matTreeNodeDef=\"let node1\" matTreeNodeToggle matTreeNodePadding>\n\n                    <mat-radio-button value=\"{{node1.item}}\" (change)=\"getValueFromRadioButton_Department($event)\" >{{node1.item}} </mat-radio-button>\n                      </mat-tree-node>\n\n                </mat-tree>`\n\n            </mat-expansion-panel>\n            <div align=\"right\">\n                <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display_Department=false\" label=\"Yes\"></button>\n                <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n              </div>\n          </mat-accordion>\n\n\n</p-dialog>\n\n</div>\n\n\n<!--     POSSITION SHOW DIALOG        -->\n\n<div class=\"col-sm-12 text-left md-form form-group mt-5\">\n    <p-dialog  [(visible)]=\"display_Position\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\"\n    [maximizable]=\"true\" [baseZIndex]=\"10000\">\n    <mat-accordion>\n            <mat-expansion-panel>\n              <mat-expansion-panel-header>\n                Select Parent Position\n              </mat-expansion-panel-header>\n                <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                    <mat-tree-node *matTreeNodeDef=\"let node2\" matTreeNodeToggle matTreeNodePadding>\n\n                    <mat-radio-button value=\"{{node2.item}}\" (change)=\"getValueFromRadioButton_Position($event)\" >{{node2.item}} </mat-radio-button>\n                      </mat-tree-node>\n\n                </mat-tree>`\n\n            </mat-expansion-panel>\n            <div align=\"right\">\n                <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display_Position=false\" label=\"Yes\"></button>\n                <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n              </div>\n          </mat-accordion>\n\n\n</p-dialog>\n\n</div>\n\n\n\n\n\n<!--     POSSITION SHOW DIALOG        -->\n\n<div class=\"col-sm-12 text-left md-form form-group mt-5\">\n    <p-dialog  [(visible)]=\"display_Position\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\"\n    [maximizable]=\"true\" [baseZIndex]=\"10000\">\n    <mat-accordion>\n            <mat-expansion-panel>\n              <mat-expansion-panel-header>\n                Select Parent Position\n              </mat-expansion-panel-header>\n                <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                    <mat-tree-node *matTreeNodeDef=\"let node2\" matTreeNodeToggle matTreeNodePadding>\n\n                    <mat-radio-button value=\"{{node2.item}}\" (change)=\"getValueFromRadioButton_Position($event)\" >{{node2.item}} </mat-radio-button>\n                      </mat-tree-node>\n\n                </mat-tree>`\n\n            </mat-expansion-panel>\n            <div align=\"right\">\n                <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display_Position=false\" label=\"Yes\"></button>\n                <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n              </div>\n          </mat-accordion>\n\n\n</p-dialog>\n\n</div>\n\n<!--     POSSITION SHOW DIALOG        -->\n\n<div class=\"col-sm-12 text-left md-form form-group mt-5\">\n    <p-dialog  [(visible)]=\"display_Area\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\"\n    [maximizable]=\"true\" [baseZIndex]=\"10000\">\n    <mat-accordion>\n            <mat-expansion-panel>\n              <mat-expansion-panel-header>\n                Select Parent Area\n              </mat-expansion-panel-header>\n                <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n\n                    <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton_Arae($event)\" >{{node.item}} </mat-radio-button>\n                      </mat-tree-node>\n\n                </mat-tree>`\n\n            </mat-expansion-panel>\n            <div align=\"right\">\n                <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display_Area=false\" label=\"Yes\"></button>\n                <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n              </div>\n          </mat-accordion>\n\n\n</p-dialog>\n\n</div>\n\n\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/personnel/addposition/addposition.component.html":
/*!********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/personnel/addposition/addposition.component.html ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "add new position\n<app-header></app-header>\n<app-personnelsubmenu></app-personnelsubmenu>\n<div class=\"container\">\n    <div class=\"col-xs-12\">\n        <div class=\"all-content-aria\">\n            <div class=\"top-form-above-menu\">Position : Perssonel -> Add New Position</div> \n            <p-messages [(value)]=\"msgs\"></p-messages>   \n            <div class=\"col-sm-12 panel panel-primary\">\n                    <div class=\"panel-body\"><b>Add New Position</b></div>\n            <div class=\"row\">  \n                \n                <div class=\"col-xs-12\">\n                        <div class=\"col-sm-4\">\n                        </div>\n                    <div class=\"col-sm-4\">\n                        \n                        <form #add_positionForm=\"ngForm\" (ngSubmit)=\"addNewPosition(add_positionForm)\" ngNativeValidate>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                           \n                            </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                <input type=\"text\" name=\"Position_no\" placeholder=\"Position No\" class=\"form-control\" ngModel required>\n                            </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                <input type=\"text\" name=\"Position\" placeholder=\"Position\" class=\"form-control\" ngModel required>\n                            </div>\n                           \n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                            <input type=\"text\" name=\"parentarea\" (click)=\"showDialog()\" placeholder=\"Parent Position\" class=\"form-control\" [(ngModel)]=\"parentArea\" readonly>\n                            </div>\n\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                    <p-dialog  [(visible)]=\"display\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\" \n                                    [maximizable]=\"true\" [baseZIndex]=\"10000\">\n                                    <mat-accordion>\n                                            <mat-expansion-panel>\n                                              <mat-expansion-panel-header>\n                                                Select Parent Position\n                                              </mat-expansion-panel-header>                                     \n                                                <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                                                    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n                                                      \n                                                    <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                                                      </mat-tree-node>  \n                                                \n                                                </mat-tree>`\n                                              \n                                            </mat-expansion-panel>\n                                            <div align=\"right\">\n                                                <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Yes\"></button>\n                                                <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n                                              </div>\n                                          </mat-accordion>\n                \n                                    \n                            </p-dialog>\n                           \n                            </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                    <div class=\"col-sm-6\">\n                                        <button type=\"submit\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                            <span class=\"glyphicon\" aria-hidden=\"true\"></span> Save\n                                        </button>\n                                    </div>\n                                    <div class=\"col-sm-6\">\n                                            <button type=\"reset\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                            <span class=\"glyphicon\" aria-hidden=\"true\"></span> Cancel\n                                            </button> \n                                    </div>\n\n                            </div>  "

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/personnel/addresignation/addresignation.component.html":
/*!**************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/personnel/addresignation/addresignation.component.html ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-personnelsubmenu></app-personnelsubmenu>\n<!--\n<div class=\"container\">\n    <div class=\"col-xs-12\">\n        <div class=\"all-content-aria\">\n            <div class=\"top-form-above-menu\">Position : Perssonel -> Add New Resignation</div> \n            <div class=\"col-sm-12 panel panel-primary\">\n                    <div class=\"panel-body\"><b>Add Resignation</b></div>\n            \n            <div class=\"row\">     \n                <div class=\"col-xs-12\">\n                        <div class=\"col-sm-4\">\n                        </div>\n                    <div class=\"col-sm-4\">\n                        <form #add_DeviceForm=\"ngForm\" (ngSubmit)=\"getaddAreaForm(addAreaForm)\" ngNativeValidate>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                           \n                            </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                <input type=\"text\" name=\"devicename\" placeholder=\"Device Name\" class=\"form-control\" ngModel required>\n                            </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                <input type=\"text\" name=\"serialnumber\" placeholder=\"Serial Number\" class=\"form-control\" ngModel required>\n                            </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                <input type=\"text\" name=\"ipaddress\" placeholder=\"Ip Address\" class=\"form-control\" ngModel required>\n                            </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                    <input type=\"text\" name=\"portnumber\" placeholder=\"Port Number\" class=\"form-control\" ngModel required>\n                                </div>\n                                <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n\n\n\n                                <select  name=\"timezone\" placeholder=\"Port Number\" class=\"form-control\" ngModel required>\n                                        <option value=\"\">Select Time Zone</option>\n                                        <option timeZoneId=\"1\" gmtAdjustment=\"GMT-12:00\" useDaylightTime=\"0\" value=\"-12\">(GMT-12:00) International Date Line West</option>\n                                        <option timeZoneId=\"2\" gmtAdjustment=\"GMT-11:00\" useDaylightTime=\"0\" value=\"-11\">(GMT-11:00) Midway Island, Samoa</option>\n                                        <option timeZoneId=\"3\" gmtAdjustment=\"GMT-10:00\" useDaylightTime=\"0\" value=\"-10\">(GMT-10:00) Hawaii</option>\n                                        <option timeZoneId=\"4\" gmtAdjustment=\"GMT-09:00\" useDaylightTime=\"1\" value=\"-9\">(GMT-09:00) Alaska</option>\n                                        <option timeZoneId=\"5\" gmtAdjustment=\"GMT-08:00\" useDaylightTime=\"1\" value=\"-8\">(GMT-08:00) Pacific Time (US & Canada)</option>\n                                        <option timeZoneId=\"6\" gmtAdjustment=\"GMT-08:00\" useDaylightTime=\"1\" value=\"-8\">(GMT-08:00) Tijuana, Baja California</option>\n                                        <option timeZoneId=\"7\" gmtAdjustment=\"GMT-07:00\" useDaylightTime=\"0\" value=\"-7\">(GMT-07:00) Arizona</option>\n                                        <option timeZoneId=\"8\" gmtAdjustment=\"GMT-07:00\" useDaylightTime=\"1\" value=\"-7\">(GMT-07:00) Chihuahua, La Paz, Mazatlan</option>\n                                        <option timeZoneId=\"9\" gmtAdjustment=\"GMT-07:00\" useDaylightTime=\"1\" value=\"-7\">(GMT-07:00) Mountain Time (US & Canada)</option>\n                                        <option timeZoneId=\"10\" gmtAdjustment=\"GMT-06:00\" useDaylightTime=\"0\" value=\"-6\">(GMT-06:00) Central America</option>\n                                        <option timeZoneId=\"11\" gmtAdjustment=\"GMT-06:00\" useDaylightTime=\"1\" value=\"-6\">(GMT-06:00) Central Time (US & Canada)</option>\n                                        <option timeZoneId=\"12\" gmtAdjustment=\"GMT-06:00\" useDaylightTime=\"1\" value=\"-6\">(GMT-06:00) Guadalajara, Mexico City, Monterrey</option>\n                                        <option timeZoneId=\"13\" gmtAdjustment=\"GMT-06:00\" useDaylightTime=\"0\" value=\"-6\">(GMT-06:00) Saskatchewan</option>\n                                        <option timeZoneId=\"14\" gmtAdjustment=\"GMT-05:00\" useDaylightTime=\"0\" value=\"-5\">(GMT-05:00) Bogota, Lima, Quito, Rio Branco</option>\n                                        <option timeZoneId=\"15\" gmtAdjustment=\"GMT-05:00\" useDaylightTime=\"1\" value=\"-5\">(GMT-05:00) Eastern Time (US & Canada)</option>\n                                        <option timeZoneId=\"16\" gmtAdjustment=\"GMT-05:00\" useDaylightTime=\"1\" value=\"-5\">(GMT-05:00) Indiana (East)</option>\n                                        <option timeZoneId=\"17\" gmtAdjustment=\"GMT-04:00\" useDaylightTime=\"1\" value=\"-4\">(GMT-04:00) Atlantic Time (Canada)</option>\n                                        <option timeZoneId=\"75\" gmtAdjustment=\"GMT+10:00\" useDaylightTime=\"1\" value=\"10\">(GMT+10:00) Canberra, Melbourne, Sydney</option>\n                                        <option timeZoneId=\"76\" gmtAdjustment=\"GMT+10:00\" useDaylightTime=\"1\" value=\"10\">(GMT+10:00) Hobart</option>\n                                        <option timeZoneId=\"77\" gmtAdjustment=\"GMT+10:00\" useDaylightTime=\"0\" value=\"10\">(GMT+10:00) Guam, Port Moresby</option>\n                                        <option timeZoneId=\"78\" gmtAdjustment=\"GMT+10:00\" useDaylightTime=\"1\" value=\"10\">(GMT+10:00) Vladivostok</option>\n                                        <option timeZoneId=\"79\" gmtAdjustment=\"GMT+11:00\" useDaylightTime=\"1\" value=\"11\">(GMT+11:00) Magadan, Solomon Is., New Caledonia</option>\n                                        <option timeZoneId=\"80\" gmtAdjustment=\"GMT+12:00\" useDaylightTime=\"1\" value=\"12\">(GMT+12:00) Auckland, Wellington</option>\n                                        <option timeZoneId=\"81\" gmtAdjustment=\"GMT+12:00\" useDaylightTime=\"0\" value=\"12\">(GMT+12:00) Fiji, Kamchatka, Marshall Is.</option>\n                                        <option timeZoneId=\"82\" gmtAdjustment=\"GMT+13:00\" useDaylightTime=\"0\" value=\"13\">(GMT+13:00) Nuku'alofa</option>\n                                    </select>\n                                </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                <input type=\"text\" name=\"parentarea\" (click)=\"showDialog()\" placeholder=\"Parent Area\" class=\"form-control\" [(ngModel)]=\"parentArea\" >\n                            </div>\n\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                    <p-dialog  [(visible)]=\"display\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\" \n                                    [maximizable]=\"true\" [baseZIndex]=\"10000\">\n                                    <mat-accordion>\n                                            <mat-expansion-panel>\n                                              <mat-expansion-panel-header>\n                                                Select Parent Area\n                                              </mat-expansion-panel-header>                                     \n                                                <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                                                    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n                                                      \n                                                    <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                                                      </mat-tree-node>  \n                                                \n                                                </mat-tree>`\n                                              \n                                            </mat-expansion-panel>\n                                            <div align=\"right\">\n                                            <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Yes\"></button>\n                                            <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n                                          </div>\n                                          </mat-accordion>\n                \n                                    \n                            </p-dialog>\n                           \n                            </div>\n                            \n\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                    <div class=\"col-sm-6\">\n                                        <button type=\"submit\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\" (click)=\"getaddDeviceForm(add_DeviceForm)\">\n                                            <span class=\"glyphicon\" aria-hidden=\"true\"></span> Save\n                                        </button>\n                                    </div>\n                                    <div class=\"col-sm-6\">\n                                            <button type=\"button\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                            <span class=\"glyphicon\" aria-hidden=\"true\"></span> Cancel\n                                            </button> \n                                    </div>\n\n                            </div>  \n\n                        </form>             \n                     </div>  \n                     <div class=\"col-sm-6\">\n                        <div class=\"col-sm-12 text-left md-form form-group mt-1\">\n                           \n                              <div class=\"alert alert-dark\" role=\"alert\" *ngIf=\"errordisplayflag\">\n                                {{errorDta}}\n                              </div>\n                        </div> \n                     </div>\n                    </div>        \n                  \n                </div>\n            </div></div>  \n        </div>\n    </div> \n    -->\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/personnel/biophoto/biophoto.component.html":
/*!**************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/personnel/biophoto/biophoto.component.html ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-personnelsubmenu></app-personnelsubmenu>\n<p>biophoto works!</p>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/personnel/department/department.component.html":
/*!******************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/personnel/department/department.component.html ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-personnelsubmenu></app-personnelsubmenu>\n<div class=\"content_section\">\n        <div class=\"all-content-aria\">\n            <div class=\"top-form-above-menu\">Position : Personnel -> Department</div>\n\n    <p-toast position=\"top-right\"></p-toast>\n    <p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\n\n    <p-table id=\"mytable\" #dt [value]=\"allDepartmnt\" dataKey=\"primary_id\" [columns]=\"cols\"  editMode=\"row\" [paginator]=\"true\" [rowsPerPageOptions]=\"[10,15,20,50,1000,5000]\" [rows]=\"20\"   [autoLayout]=\"true\">\n            <ng-template pTemplate=\"caption\" class=\"form-group\">\n                    <div style=\"text-align: right\">\n                        <button type=\"button\" pButton icon=\"pi pi-file-o\" iconPos=\"left\" label=\"ADD\" routerLink=\"/addepartment\" style=\"float:left\"></button>\n                        <i class=\"fa fa-search\" style=\"margin:4px 4px 0 0\"></i>\n                        <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" class=\"form-control\">\n                        <p-messages [(value)]=\"msgs\"></p-messages>\n                        </div>\n            </ng-template>\n\n        <ng-template pTemplate=\"header\" let-columns []>\n            <tr >\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn [ngStyle]=\"{'width':auto}\">\n                    {{col.header}}\n                    <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n            </tr>\n            <tr>\n                <th *ngFor=\"let col of cols\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\n\n                    <input  pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, col.filterMatchMode)\" [value]=\"dt.filters[col.field]?.value\" >\n\n\n                </th>\n            </tr>\n\n\n        </ng-template>\n\n\n        <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n\n            <tr [pEditableRow]=\"rowData\">\n\n                <td >\n\n                    <p-cellEditor >\n                        <ng-template pTemplate=\"input\" >\n\n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.department_name\" name=\"year\" [ngStyle]=\"{'width': '100%'}\"  required>\n\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{rowData.department_name}}\n                        </ng-template>\n\n                    </p-cellEditor>\n                </td>\n                <td >\n\n                        <p-cellEditor >\n                                <ng-template pTemplate=\"input\" >\n                                    <input pInputText type=\"text\" [(ngModel)]=\"rowData.approver\"  [ngStyle]=\"{'width': '100%'}\">\n                                </ng-template>\n                                <ng-template pTemplate=\"output\">\n                                        {{rowData.approver}}\n                                </ng-template>\n                            </p-cellEditor>\n\n\n                </td>\n                <td>\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.department_code\" required [ngStyle]=\"{'width': '100%'}\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{rowData.department_code}}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td>\n\n                            {{rowData.employee_count}}\n\n                </td>\n\n                <td>\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\"  [ngStyle]=\"{'width': '100%'}\"   (click)=\"showDialog()\" [(ngModel)]=\"parentDepartment\" >\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{rowData.parent_department}}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n\n                <td style=\"text-align:center ;min-width:150px\" >\n\n                    <button *ngIf=\"!editing\" pButton type=\"button\" pInitEditableRow icon=\"pi pi-pencil\" class=\"ui-button-info\" (click)=\"onRowEditInit(rowData)\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pSaveEditableRow icon=\"pi pi-check\" class=\"ui-button-success\" style=\"margin-right: .5em\" (click)=\"onRowEditSave(rowData)\" pTooltip=\"Edit\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-trash\" class=\"ui-button-danger\" style=\"margin-right: .5em\" (click)=\"onRowRemove(rowData, ri)\"  pTooltip=\"Delete\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-times\" class=\"ui-button-danger\" style=\"margin-right: .5em\" (click)=\"onRowEditCancel(rowData, ri)\" pTooltip=\"Cancel\" tooltipPosition=\"top\"></button>\n\n\n                </td>\n            </tr>\n\n        </ng-template>\n\n    </p-table>\n    </div>\n\n</div>\n\n\n\n\n <p-dialog  [(visible)]=\"display\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\"\n [maximizable]=\"true\" [baseZIndex]=\"10000\">\n <mat-accordion>\n         <mat-expansion-panel>\n           <mat-expansion-panel-header>\n             Select Parent Department\n           </mat-expansion-panel-header>\n             <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                 <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n\n                 <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                   </mat-tree-node>\n\n             </mat-tree>`\n\n         </mat-expansion-panel>\n         <div align=\"right\">\n         <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Yes\"></button>\n         <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n       </div>\n       </mat-accordion>\n\n\n</p-dialog>\n<app-footer></app-footer>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/personnel/deviceedit/deviceedit.component.html":
/*!******************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/personnel/deviceedit/deviceedit.component.html ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<p>deviceedit works!</p>\n<app-header></app-header>\n<app-devicesubmenu></app-devicesubmenu>\n<div class=\"container\">\n    <div class=\"col-xs-12\">\n        <div class=\"all-content-aria\">\n            <div class=\"top-form-above-menu\"><b>Position : Device -> Edit Device</b></div> \n            <div class=\"row\">     \n                <div class=\"col-xs-12\">\n                        <div class=\"col-sm-4\">\n                        </div>\n                    <div class=\"col-sm-4\">\n                        <form #add_DeviceForm=\"ngForm\" (ngSubmit)=\"getaddDeviceForm(add_DeviceForm)\" ngNativeValidate>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                           \n                            </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                <input type=\"text\" name=\"devicename\" placeholder=\"Device Name\" class=\"form-control\" ngModel required>\n                            </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                <input type=\"text\" name=\"serialnumber\" placeholder=\"Serial Number\" class=\"form-control\" ngModel required>\n                            </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                <input type=\"text\" name=\"ipaddress\" placeholder=\"Ip Address\" class=\"form-control\" ngModel required>\n                            </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                    <input type=\"text\" name=\"portnumber\" placeholder=\"Port Number\" class=\"form-control\" ngModel required>\n                                </div>\n                                <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n\n\n\n                                <select  name=\"timezone\" placeholder=\"Port Number\" class=\"form-control\" ngModel required>\n                                        <option value=\"\">Select Time Zone</option>\n                                        <option timeZoneId=\"1\" gmtAdjustment=\"GMT-12:00\" useDaylightTime=\"0\" value=\"-12\">(GMT-12:00) International Date Line West</option>\n                                        <option timeZoneId=\"2\" gmtAdjustment=\"GMT-11:00\" useDaylightTime=\"0\" value=\"-11\">(GMT-11:00) Midway Island, Samoa</option>\n                                        <option timeZoneId=\"3\" gmtAdjustment=\"GMT-10:00\" useDaylightTime=\"0\" value=\"-10\">(GMT-10:00) Hawaii</option>\n                                        <option timeZoneId=\"4\" gmtAdjustment=\"GMT-09:00\" useDaylightTime=\"1\" value=\"-9\">(GMT-09:00) Alaska</option>\n                                        <option timeZoneId=\"5\" gmtAdjustment=\"GMT-08:00\" useDaylightTime=\"1\" value=\"-8\">(GMT-08:00) Pacific Time (US & Canada)</option>\n                                        <option timeZoneId=\"6\" gmtAdjustment=\"GMT-08:00\" useDaylightTime=\"1\" value=\"-8\">(GMT-08:00) Tijuana, Baja California</option>\n                                        <option timeZoneId=\"7\" gmtAdjustment=\"GMT-07:00\" useDaylightTime=\"0\" value=\"-7\">(GMT-07:00) Arizona</option>\n                                        <option timeZoneId=\"8\" gmtAdjustment=\"GMT-07:00\" useDaylightTime=\"1\" value=\"-7\">(GMT-07:00) Chihuahua, La Paz, Mazatlan</option>\n                                        <option timeZoneId=\"9\" gmtAdjustment=\"GMT-07:00\" useDaylightTime=\"1\" value=\"-7\">(GMT-07:00) Mountain Time (US & Canada)</option>\n                                        <option timeZoneId=\"10\" gmtAdjustment=\"GMT-06:00\" useDaylightTime=\"0\" value=\"-6\">(GMT-06:00) Central America</option>\n                                        <option timeZoneId=\"11\" gmtAdjustment=\"GMT-06:00\" useDaylightTime=\"1\" value=\"-6\">(GMT-06:00) Central Time (US & Canada)</option>\n                                        <option timeZoneId=\"12\" gmtAdjustment=\"GMT-06:00\" useDaylightTime=\"1\" value=\"-6\">(GMT-06:00) Guadalajara, Mexico City, Monterrey</option>\n                                        <option timeZoneId=\"13\" gmtAdjustment=\"GMT-06:00\" useDaylightTime=\"0\" value=\"-6\">(GMT-06:00) Saskatchewan</option>\n                                        <option timeZoneId=\"14\" gmtAdjustment=\"GMT-05:00\" useDaylightTime=\"0\" value=\"-5\">(GMT-05:00) Bogota, Lima, Quito, Rio Branco</option>\n                                        <option timeZoneId=\"15\" gmtAdjustment=\"GMT-05:00\" useDaylightTime=\"1\" value=\"-5\">(GMT-05:00) Eastern Time (US & Canada)</option>\n                                        <option timeZoneId=\"16\" gmtAdjustment=\"GMT-05:00\" useDaylightTime=\"1\" value=\"-5\">(GMT-05:00) Indiana (East)</option>\n                                        <option timeZoneId=\"17\" gmtAdjustment=\"GMT-04:00\" useDaylightTime=\"1\" value=\"-4\">(GMT-04:00) Atlantic Time (Canada)</option>\n                                        <option timeZoneId=\"18\" gmtAdjustment=\"GMT-04:00\" useDaylightTime=\"0\" value=\"-4\">(GMT-04:00) Caracas, La Paz</option>\n                                        <option timeZoneId=\"19\" gmtAdjustment=\"GMT-04:00\" useDaylightTime=\"0\" value=\"-4\">(GMT-04:00) Manaus</option>\n                                        <option timeZoneId=\"20\" gmtAdjustment=\"GMT-04:00\" useDaylightTime=\"1\" value=\"-4\">(GMT-04:00) Santiago</option>\n                                        <option timeZoneId=\"21\" gmtAdjustment=\"GMT-03:30\" useDaylightTime=\"1\" value=\"-3.5\">(GMT-03:30) Newfoundland</option>\n                                        <option timeZoneId=\"22\" gmtAdjustment=\"GMT-03:00\" useDaylightTime=\"1\" value=\"-3\">(GMT-03:00) Brasilia</option>\n                                        <option timeZoneId=\"23\" gmtAdjustment=\"GMT-03:00\" useDaylightTime=\"0\" value=\"-3\">(GMT-03:00) Buenos Aires, Georgetown</option>\n                                        <option timeZoneId=\"24\" gmtAdjustment=\"GMT-03:00\" useDaylightTime=\"1\" value=\"-3\">(GMT-03:00) Greenland</option>\n                                        <option timeZoneId=\"25\" gmtAdjustment=\"GMT-03:00\" useDaylightTime=\"1\" value=\"-3\">(GMT-03:00) Montevideo</option>\n                                        <option timeZoneId=\"26\" gmtAdjustment=\"GMT-02:00\" useDaylightTime=\"1\" value=\"-2\">(GMT-02:00) Mid-Atlantic</option>\n                                        <option timeZoneId=\"27\" gmtAdjustment=\"GMT-01:00\" useDaylightTime=\"0\" value=\"-1\">(GMT-01:00) Cape Verde Is.</option>\n                                        <option timeZoneId=\"28\" gmtAdjustment=\"GMT-01:00\" useDaylightTime=\"1\" value=\"-1\">(GMT-01:00) Azores</option>\n                                        <option timeZoneId=\"29\" gmtAdjustment=\"GMT+00:00\" useDaylightTime=\"0\" value=\"0\">(GMT+00:00) Casablanca, Monrovia, Reykjavik</option>\n                                        <option timeZoneId=\"30\" gmtAdjustment=\"GMT+00:00\" useDaylightTime=\"1\" value=\"0\">(GMT+00:00) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London</option>\n                                        <option timeZoneId=\"31\" gmtAdjustment=\"GMT+01:00\" useDaylightTime=\"1\" value=\"1\">(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna</option>\n                                        <option timeZoneId=\"32\" gmtAdjustment=\"GMT+01:00\" useDaylightTime=\"1\" value=\"1\">(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague</option>\n                                        <option timeZoneId=\"33\" gmtAdjustment=\"GMT+01:00\" useDaylightTime=\"1\" value=\"1\">(GMT+01:00) Brussels, Copenhagen, Madrid, Paris</option>\n                                        <option timeZoneId=\"34\" gmtAdjustment=\"GMT+01:00\" useDaylightTime=\"1\" value=\"1\">(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb</option>\n                                        <option timeZoneId=\"35\" gmtAdjustment=\"GMT+01:00\" useDaylightTime=\"1\" value=\"1\">(GMT+01:00) West Central Africa</option>\n                                        <option timeZoneId=\"36\" gmtAdjustment=\"GMT+02:00\" useDaylightTime=\"1\" value=\"2\">(GMT+02:00) Amman</option>\n                                        <option timeZoneId=\"37\" gmtAdjustment=\"GMT+02:00\" useDaylightTime=\"1\" value=\"2\">(GMT+02:00) Athens, Bucharest, Istanbul</option>\n                                        <option timeZoneId=\"38\" gmtAdjustment=\"GMT+02:00\" useDaylightTime=\"1\" value=\"2\">(GMT+02:00) Beirut</option>\n                                        <option timeZoneId=\"39\" gmtAdjustment=\"GMT+02:00\" useDaylightTime=\"1\" value=\"2\">(GMT+02:00) Cairo</option>\n                                        <option timeZoneId=\"40\" gmtAdjustment=\"GMT+02:00\" useDaylightTime=\"0\" value=\"2\">(GMT+02:00) Harare, Pretoria</option>\n                                        <option timeZoneId=\"41\" gmtAdjustment=\"GMT+02:00\" useDaylightTime=\"1\" value=\"2\">(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius</option>\n                                        <option timeZoneId=\"42\" gmtAdjustment=\"GMT+02:00\" useDaylightTime=\"1\" value=\"2\">(GMT+02:00) Jerusalem</option>\n                                        <option timeZoneId=\"43\" gmtAdjustment=\"GMT+02:00\" useDaylightTime=\"1\" value=\"2\">(GMT+02:00) Minsk</option>\n                                        <option timeZoneId=\"44\" gmtAdjustment=\"GMT+02:00\" useDaylightTime=\"1\" value=\"2\">(GMT+02:00) Windhoek</option>\n                                        <option timeZoneId=\"45\" gmtAdjustment=\"GMT+03:00\" useDaylightTime=\"0\" value=\"3\">(GMT+03:00) Kuwait, Riyadh, Baghdad</option>\n                                        <option timeZoneId=\"46\" gmtAdjustment=\"GMT+03:00\" useDaylightTime=\"1\" value=\"3\">(GMT+03:00) Moscow, St. Petersburg, Volgograd</option>\n                                        <option timeZoneId=\"47\" gmtAdjustment=\"GMT+03:00\" useDaylightTime=\"0\" value=\"3\">(GMT+03:00) Nairobi</option>\n                                        <option timeZoneId=\"48\" gmtAdjustment=\"GMT+03:00\" useDaylightTime=\"0\" value=\"3\">(GMT+03:00) Tbilisi</option>\n                                        <option timeZoneId=\"49\" gmtAdjustment=\"GMT+03:30\" useDaylightTime=\"1\" value=\"3.5\">(GMT+03:30) Tehran</option>\n                                        <option timeZoneId=\"50\" gmtAdjustment=\"GMT+04:00\" useDaylightTime=\"0\" value=\"4\">(GMT+04:00) Abu Dhabi, Muscat</option>\n                                        <option timeZoneId=\"51\" gmtAdjustment=\"GMT+04:00\" useDaylightTime=\"1\" value=\"4\">(GMT+04:00) Baku</option>\n                                        <option timeZoneId=\"52\" gmtAdjustment=\"GMT+04:00\" useDaylightTime=\"1\" value=\"4\">(GMT+04:00) Yerevan</option>\n                                        <option timeZoneId=\"53\" gmtAdjustment=\"GMT+04:30\" useDaylightTime=\"0\" value=\"4.5\">(GMT+04:30) Kabul</option>\n                                        <option timeZoneId=\"54\" gmtAdjustment=\"GMT+05:00\" useDaylightTime=\"1\" value=\"5\">(GMT+05:00) Yekaterinburg</option>\n                                        <option timeZoneId=\"55\" gmtAdjustment=\"GMT+05:00\" useDaylightTime=\"0\" value=\"5\">(GMT+05:00) Islamabad, Karachi, Tashkent</option>\n                                        <option timeZoneId=\"56\" gmtAdjustment=\"GMT+05:30\" useDaylightTime=\"0\" value=\"5.5\">(GMT+05:30) Sri Jayawardenapura</option>\n                                        <option timeZoneId=\"57\" gmtAdjustment=\"GMT+05:30\" useDaylightTime=\"0\" value=\"5.5\">(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi</option>\n                                        <option timeZoneId=\"58\" gmtAdjustment=\"GMT+05:45\" useDaylightTime=\"0\" value=\"5.75\">(GMT+05:45) Kathmandu</option>\n                                        <option timeZoneId=\"59\" gmtAdjustment=\"GMT+06:00\" useDaylightTime=\"1\" value=\"6\">(GMT+06:00) Almaty, Novosibirsk</option>\n                                        <option timeZoneId=\"60\" gmtAdjustment=\"GMT+06:00\" useDaylightTime=\"0\" value=\"6\">(GMT+06:00) Astana, Dhaka</option>\n                                        <option timeZoneId=\"61\" gmtAdjustment=\"GMT+06:30\" useDaylightTime=\"0\" value=\"6.5\">(GMT+06:30) Yangon (Rangoon)</option>\n                                        <option timeZoneId=\"62\" gmtAdjustment=\"GMT+07:00\" useDaylightTime=\"0\" value=\"7\">(GMT+07:00) Bangkok, Hanoi, Jakarta</option>\n                                        <option timeZoneId=\"63\" gmtAdjustment=\"GMT+07:00\" useDaylightTime=\"1\" value=\"7\">(GMT+07:00) Krasnoyarsk</option>\n                                        <option timeZoneId=\"64\" gmtAdjustment=\"GMT+08:00\" useDaylightTime=\"0\" value=\"8\">(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi</option>\n                                        <option timeZoneId=\"65\" gmtAdjustment=\"GMT+08:00\" useDaylightTime=\"0\" value=\"8\">(GMT+08:00) Kuala Lumpur, Singapore</option>\n                                        <option timeZoneId=\"66\" gmtAdjustment=\"GMT+08:00\" useDaylightTime=\"0\" value=\"8\">(GMT+08:00) Irkutsk, Ulaan Bataar</option>\n                                        <option timeZoneId=\"67\" gmtAdjustment=\"GMT+08:00\" useDaylightTime=\"0\" value=\"8\">(GMT+08:00) Perth</option>\n                                        <option timeZoneId=\"68\" gmtAdjustment=\"GMT+08:00\" useDaylightTime=\"0\" value=\"8\">(GMT+08:00) Taipei</option>\n                                        <option timeZoneId=\"69\" gmtAdjustment=\"GMT+09:00\" useDaylightTime=\"0\" value=\"9\">(GMT+09:00) Osaka, Sapporo, Tokyo</option>\n                                        <option timeZoneId=\"70\" gmtAdjustment=\"GMT+09:00\" useDaylightTime=\"0\" value=\"9\">(GMT+09:00) Seoul</option>\n                                        <option timeZoneId=\"71\" gmtAdjustment=\"GMT+09:00\" useDaylightTime=\"1\" value=\"9\">(GMT+09:00) Yakutsk</option>\n                                        <option timeZoneId=\"72\" gmtAdjustment=\"GMT+09:30\" useDaylightTime=\"0\" value=\"9.5\">(GMT+09:30) Adelaide</option>\n                                        <option timeZoneId=\"73\" gmtAdjustment=\"GMT+09:30\" useDaylightTime=\"0\" value=\"9.5\">(GMT+09:30) Darwin</option>\n                                        <option timeZoneId=\"74\" gmtAdjustment=\"GMT+10:00\" useDaylightTime=\"0\" value=\"10\">(GMT+10:00) Brisbane</option>\n                                        <option timeZoneId=\"75\" gmtAdjustment=\"GMT+10:00\" useDaylightTime=\"1\" value=\"10\">(GMT+10:00) Canberra, Melbourne, Sydney</option>\n                                        <option timeZoneId=\"76\" gmtAdjustment=\"GMT+10:00\" useDaylightTime=\"1\" value=\"10\">(GMT+10:00) Hobart</option>\n                                        <option timeZoneId=\"77\" gmtAdjustment=\"GMT+10:00\" useDaylightTime=\"0\" value=\"10\">(GMT+10:00) Guam, Port Moresby</option>\n                                        <option timeZoneId=\"78\" gmtAdjustment=\"GMT+10:00\" useDaylightTime=\"1\" value=\"10\">(GMT+10:00) Vladivostok</option>\n                                        <option timeZoneId=\"79\" gmtAdjustment=\"GMT+11:00\" useDaylightTime=\"1\" value=\"11\">(GMT+11:00) Magadan, Solomon Is., New Caledonia</option>\n                                        <option timeZoneId=\"80\" gmtAdjustment=\"GMT+12:00\" useDaylightTime=\"1\" value=\"12\">(GMT+12:00) Auckland, Wellington</option>\n                                        <option timeZoneId=\"81\" gmtAdjustment=\"GMT+12:00\" useDaylightTime=\"0\" value=\"12\">(GMT+12:00) Fiji, Kamchatka, Marshall Is.</option>\n                                        <option timeZoneId=\"82\" gmtAdjustment=\"GMT+13:00\" useDaylightTime=\"0\" value=\"13\">(GMT+13:00) Nuku'alofa</option>\n                                    </select>\n                                </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                <input type=\"text\" name=\"parentarea\" (click)=\"showDialog()\" placeholder=\"Parent Area\" class=\"form-control\" [(ngModel)]=\"parentArea\" >\n                            </div>\n\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                    <p-dialog  [(visible)]=\"display\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\" \n                                    [maximizable]=\"true\" [baseZIndex]=\"10000\">\n                                    <mat-accordion>\n                                            <mat-expansion-panel>\n                                              <mat-expansion-panel-header>\n                                                Select Parent Area\n                                              </mat-expansion-panel-header>                                     \n                                                <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                                                    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n                                                      \n                                                    <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                                                      </mat-tree-node>  \n                                                \n                                                </mat-tree>`\n                                              \n                                            </mat-expansion-panel>\n                                            <div align=\"right\">\n                                            <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Yes\"></button>\n                                            <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n                                          </div>\n                                          </mat-accordion>\n                \n                                    \n                            </p-dialog>\n                           \n                            </div>\n\n                            <div class=\"col-sm-12\">\n                                    <div class=\"col-sm-6\">\n                                       <input type=\"submit\" class=\"user-form-button btn btn-primary\" (click)=\"getaddDeviceForm(add_DeviceForm)\" > \n                                    </div>\n                                    <div class=\"col-sm-6\">\n                                        <input type=\"reset\" class=\"user-form-button btn btn-primary\">\n                                    </div>\n                               </div>\n                        </form>             \n                     </div>  \n                     <div class=\"col-sm-6\">\n                        <div class=\"col-sm-12 text-left md-form form-group mt-1\">\n                           \n                              <div class=\"alert alert-dark\" role=\"alert\" *ngIf=\"errordisplayflag\">\n                                {{errorDta}}\n                              </div>\n                        </div> \n                     </div>\n                            \n                  \n                </div>\n            </div></div>  \n        </div>\n    </div> \n    \n\n\n\n\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/personnel/documentsetup/documentsetup.component.html":
/*!************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/personnel/documentsetup/documentsetup.component.html ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-personnelsubmenu></app-personnelsubmenu>\n<p>documentsetup works!</p>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/personnel/issuecard/issuecard.component.html":
/*!****************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/personnel/issuecard/issuecard.component.html ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-personnelsubmenu></app-personnelsubmenu>\n<p>issuecard works!</p>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/personnel/personnels/personnels.component.html":
/*!******************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/personnel/personnels/personnels.component.html ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-personnelsubmenu></app-personnelsubmenu>\n<div class=\"content_section\">\n        <div class=\"all-content-aria \">\n            <div class=\"top-form-above-menu\">Position : Personnel -> Personnel</div>\n    <p-toast position=\"top-left\"></p-toast>\n    <p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\n\n    <p-table id=\"mytable\" #dt [value]=\"personnel\" dataKey=\"SN\"  [columns]=\"cols\"   [paginator]=\"true\" [rowsPerPageOptions]=\"[10,15,20,50,1000,5000]\" [rows]=\"20\"   [autoLayout]=\"true\" editMode=\"row\" >\n            <ng-template pTemplate=\"caption\">\n                    <div style=\"text-align: right\" class=\"form-group\">\n                        <button type=\"button\"  pButton icon=\"pi pi-file-o\" iconPos=\"left\" label=\"ADD\" routerLink=\"/addpersonnel\" style=\"float:left\"></button>\n                        <i class=\"fa fa-search\" style=\"margin:4px 4px 0 0\"></i>\n                        <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" class=\"form-control\">\n                        <p-messages [(value)]=\"msgs\"></p-messages>\n                        </div>\n            </ng-template>\n\n        <ng-template pTemplate=\"header\" let-columns []>\n            <tr >\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn [ngStyle]=\"{'width': auto}\">\n                    {{col.header}}\n                    <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n            </tr>\n            <tr>\n                <th *ngFor=\"let col of cols\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\n\n                    <input  pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, col.filterMatchMode)\" [value]=\"dt.filters[col.field]?.value\"  >\n\n\n                </th>\n            </tr>\n\n\n        </ng-template>\n\n\n        <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n\n            <tr [pEditableRow]=\"rowData\">\n\n                <td>\n                    {{rowData.personnel_No}}\n                </td>\n                 <td>\n                {{rowData.first_name}}\n                </td>\n                 <td>\n                            {{rowData.last_name}}\n                </td>\n                 <td>\n\n                            {{rowData.Card_No}}\n\n                </td> <td>\n\n                            {{rowData.department}}\n\n                </td> <td>\n\n                            {{rowData.position}}\n\n                </td> <td>\n\n                            {{rowData.Gender}}\n\n                </td>\n                 <td>\n\n                            {{rowData.email}}\n\n                </td>\n                <td>\n\n                            {{rowData.Privilege}}\n\n                </td>\n                <td>\n\n                    {{rowData.Area}}\n\n                </td>\n                <td>\n\n                    {{rowData.APPstatus}}\n\n                 </td>\n                <td style=\"text-align:center; min-width:150px\" >\n\n                    <button *ngIf=\"!editing\" pButton type=\"button\" pInitEditableRow icon=\"pi pi-pencil\" class=\"ui-button-info\" (click)=\"onRowEditInit(rowData)\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pSaveEditableRow icon=\"pi pi-check\" class=\"ui-button-success\" style=\"margin-right: .5em\" (click)=\"onRowEditSave(rowData)\" pTooltip=\"Edit\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-trash\" class=\"ui-button-danger\" style=\"margin-right: .5em\" (click)=\"onRowRemove(rowData, ri)\"  pTooltip=\"Delete\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-times\" class=\"ui-button-danger\" style=\"margin-right: .5em\" (click)=\"onRowEditCancel(rowData, ri)\" pTooltip=\"Cancel\" tooltipPosition=\"top\"></button>\n\n\n                </td>\n            </tr>\n\n        </ng-template>\n\n    </p-table>\n\n<div class=\"col-sm-6\">\n    <div class=\"col-sm-12 text-left md-form form-group mt-1\">\n\n          <div class=\"alert alert-dark\" role=\"alert\" *ngIf=\"errordisplayflag\">\n            {{errorDta}}\n          </div>\n    </div>\n </div>\n\n\n\n\n <p-dialog  [(visible)]=\"display\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\"\n [maximizable]=\"true\" [baseZIndex]=\"10000\">\n <mat-accordion>\n         <mat-expansion-panel>\n           <mat-expansion-panel-header>\n             Select Parent Area\n           </mat-expansion-panel-header>\n             <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                 <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n\n                 <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                   </mat-tree-node>\n\n             </mat-tree>`\n\n         </mat-expansion-panel>\n         <div align=\"right\">\n         <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Yes\"></button>\n         <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n       </div>\n       </mat-accordion>\n\n\n</p-dialog>\n        </div>\n        </div>\n<app-footer></app-footer>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/personnel/position/position.component.html":
/*!**************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/personnel/position/position.component.html ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-personnelsubmenu></app-personnelsubmenu>\n<div class=\"content_section\">\n            <div class=\"top-form-above-menu\">Position : Personnel -> Positions</div>\n                <div class=\"col-sm-14\">\n    <p-toast position=\"top-left\"></p-toast>\n    <p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\n\n    <p-table id=\"mytable\" #dt [value]=\"allPosition\" dataKey=\"primary_id\" [columns]=\"cols\"  editMode=\"row\" [paginator]=\"true\" [rowsPerPageOptions]=\"[10,15,20,50,1000,5000]\" [rows]=\"20\"  [autoLayout]=\"true\">\n\n            <ng-template pTemplate=\"caption\" class=\"form-group\">\n                    <div style=\"text-align: right\">\n                        <button type=\"button\" pButton icon=\"pi pi-file-o\" iconPos=\"left\" label=\"ADD\" routerLink=\"/addposition\" style=\"float:left\"></button>\n                        <i class=\"fa fa-search\" style=\"margin:4px 4px 0 0\"></i>\n                        <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" class=\"form-control\">\n                        <p-messages [(value)]=\"msgs\"></p-messages>\n                        </div>\n\n            </ng-template>\n\n        <ng-template pTemplate=\"header\" let-columns []>\n            <tr >\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn [ngStyle]=\"{'width':auto}\">\n                    {{col.header}}\n                    <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n            </tr>\n            <tr>\n                <th *ngFor=\"let col of cols\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\n\n                    <input  pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, col.filterMatchMode)\" [value]=\"dt.filters[col.field]?.value\" >\n\n\n                </th>\n            </tr>\n\n        </ng-template>\n\n\n        <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n\n            <tr [pEditableRow]=\"rowData\">\n\n                <td>\n\n                    <p-cellEditor >\n                        <ng-template pTemplate=\"input\" >\n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.position_No\" required [ngStyle]=\"{'width': '100%'}\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{rowData.position_No}}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n\n\n                <td>\n\n                        <p-cellEditor >\n                            <ng-template pTemplate=\"input\" >\n                                <input pInputText type=\"text\" [(ngModel)]=\"rowData.position_name\" required [ngStyle]=\"{'width': '100%'}\">\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                    {{rowData.position_name}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n\n\n\n                <td>\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\" [(ngModel)]=\"parentPosition\" [ngStyle]=\"{'width': '100%'}\"   (click)=\"showDialog()\"  required>\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{rowData.parent_position}}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td>\n                    {{rowData.employee_count}}\n                </td>\n\n                <td style=\"text-align:center ;min-width:150px\" >\n\n                    <button *ngIf=\"!editing\" pButton type=\"button\" pInitEditableRow icon=\"pi pi-pencil\" class=\"ui-button-info\" (click)=\"onRowEditInit(rowData)\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pSaveEditableRow icon=\"pi pi-check\" class=\"ui-button-success\" style=\"margin-right: .5em\" (click)=\"onRowEditSave(rowData)\" pTooltip=\"Edit\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-trash\" class=\"ui-button-danger\" style=\"margin-right: .5em\" (click)=\"onRowRemove(rowData, ri)\"  pTooltip=\"Delete\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-times\" class=\"ui-button-danger\" style=\"margin-right: .5em\" (click)=\"onRowEditCancel(rowData, ri)\" pTooltip=\"Cancel\" tooltipPosition=\"top\"></button>\n\n\n                </td>\n            </tr>\n\n        </ng-template>\n\n    </p-table>\n    </div>\n\n\n\n</div>\n\n <p-dialog  [(visible)]=\"display\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\"\n [maximizable]=\"true\" [baseZIndex]=\"10000\">\n <mat-accordion>\n         <mat-expansion-panel>\n           <mat-expansion-panel-header>\n             Select Parent Position\n           </mat-expansion-panel-header>\n             <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                 <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n\n                 <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                   </mat-tree-node>\n\n             </mat-tree>`\n\n         </mat-expansion-panel>\n         <div align=\"right\">\n         <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Yes\"></button>\n         <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n       </div>\n       </mat-accordion>\n\n\n\n</p-dialog>\n<app-footer></app-footer>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/personnel/setdepartment/setdepartment.component.html":
/*!************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/personnel/setdepartment/setdepartment.component.html ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-personnelsubmenu></app-personnelsubmenu>\n<p>setdepartment works!</p>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/personnel/synchronization/synchronization.component.html":
/*!****************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/personnel/synchronization/synchronization.component.html ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-personnelsubmenu></app-personnelsubmenu>\n<div class=\"content_section\">\n        <div class=\"all-content-aria \">\n            <div class=\"top-form-above-menu\">Position : Personnel -> Synchronization</div>\n    <p-toast position=\"top-left\"></p-toast>\n    <p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\n\n    <p-table id=\"mytable\" #dt [value]=\"personnel\" dataKey=\"SN\"  [columns]=\"cols\"   [paginator]=\"true\" [rowsPerPageOptions]=\"[10,15,20,50,1000,5000]\" [rows]=\"20\"   [autoLayout]=\"true\" editMode=\"row\" >\n            <ng-template pTemplate=\"caption\">\n                    <div style=\"text-align: right\" class=\"form-group\">\n                        <button type=\"button\"  pButton icon=\"pi pi-file-o\" iconPos=\"left\" label=\"Synchronization\" (click)=\"synchData()\" style=\"float:left\"></button>\n                        <i class=\"fa fa-search\" style=\"margin:4px 4px 0 0\"></i>\n                        <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" class=\"form-control\">\n                        <p-messages [(value)]=\"msgs\"></p-messages>\n                        </div>\n            </ng-template>\n\n        <ng-template pTemplate=\"header\" let-columns []>\n            <tr >\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn [ngStyle]=\"{'width': auto}\">\n                    {{col.header}}\n\n                    <p-sortIcon *ngIf=col.checkFlag [field]=\"col.field\"  (click)=\"checkAll()\"></p-sortIcon>\n\n                </th>\n            </tr>\n            <tr>\n                <th *ngFor=\"let col of cols\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\n\n                    <input  pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, col.filterMatchMode)\" [value]=\"dt.filters[col.field]?.value\"  >\n\n\n                </th>\n            </tr>\n\n\n        </ng-template>\n\n\n        <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n\n            <tr [pEditableRow]=\"rowData\">\n\n                <td>\n                    {{rowData.personnel_No}}\n                </td>\n                 <td>\n                {{rowData.first_name}}\n                </td>\n                 <td>\n                            {{rowData.last_name}}\n                </td>\n                <td>\n\n                            {{rowData.department}}\n\n                </td> <td>\n\n                            {{rowData.position}}\n\n                </td> <td>\n\n                            {{rowData.Gender}}\n\n                </td>\n\n\n                <td>\n\n                    {{rowData.Area}}\n\n                </td>\n\n                <td style=\"text-align:center; min-width:150px\" >\n                   <!--\n                  <input type=\"checkbox\" (change)=\"onRowEditSave($event.target.checked,rowData)\" style=\"width:20px;height:20px;\">\n                    -->\n                    <input type=\"checkbox\" [(ngModel)]=\"rowData.isChecked\" (change)=\"onRowEditSave($event.target.checked,rowData)\" style=\"width:20px;height:20px;\">\n                </td>\n            </tr>\n\n        </ng-template>\n\n    </p-table>\n\n<div class=\"col-sm-6\">\n    <div class=\"col-sm-12 text-left md-form form-group mt-1\">\n\n          <div class=\"alert alert-dark\" role=\"alert\" *ngIf=\"errordisplayflag\">\n            {{errorDta}}\n          </div>\n    </div>\n </div>\n\n\n\n\n <p-dialog  [(visible)]=\"display\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\"\n [maximizable]=\"true\" [baseZIndex]=\"10000\">\n <mat-accordion>\n         <mat-expansion-panel>\n           <mat-expansion-panel-header>\n             Select Parent Area\n           </mat-expansion-panel-header>\n             <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                 <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n\n                 <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                   </mat-tree-node>\n\n             </mat-tree>`\n\n         </mat-expansion-panel>\n         <div align=\"right\">\n         <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Yes\"></button>\n         <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n       </div>\n       </mat-accordion>\n\n\n</p-dialog>\n        </div>\n        </div>\n<app-footer></app-footer>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/recipes/recipe-details/recipe-details.component.html":
/*!************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/recipes/recipe-details/recipe-details.component.html ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\n        <div class=\"col-xs-12\">\n          <img src=\"\" alt=\"\" class=\"img-responsive\">\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <h1>Recipe Name</h1>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"btn-group\">\n            <button\n              type=\"button\"\n              class=\"btn btn-primary dropdown-toggle\">\n              Manage Recipe <span class=\"caret\"></span>\n            </button>\n            <ul class=\"dropdown-menu\">\n              <li><a href=\"#\">To Shopping List</a></li>\n              <li><a href=\"#\">Edit Recipe</a></li>\n              <li><a href=\"#\">Delete Recipe</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          Description\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          Ingredients\n        </div>\n      </div>\n      "

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html":
/*!******************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<p>recipe-item works!</p>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/recipes/recipe-list/recipe-list.component.html":
/*!******************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/recipes/recipe-list/recipe-list.component.html ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\n        <div class=\"col-xs-12\">\n          <button class=\"btn btn-success\">New Recipe</button>\n        </div>\n      </div>\n      <hr>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <a\n            href=\"#\"\n            class=\"list-group-item clearfix\"\n            *ngFor=\"let recipe of recipiesArray\">\n            <div class=\"pull-left\">\n              <h4 class=\"list-group-item-heading\">{{ recipe.name }}</h4>\n              <p class=\"list-group-item-text\">{{ recipe.description }}</p>\n            </div>\n            <span class=\"pull-right\">\n              <img\n                [src]=\"recipe.imagePathe\"\n                alt=\"{{ recipe.name }}\"\n                class=\"img-responsive\"\n                style=\"max-height: 100px;\">\n            </span>\n          </a>\n          <app-recipe-item></app-recipe-item>\n        </div>\n      </div>\n      \n      "

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/recipes/recipes.component.html":
/*!**************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/recipes/recipes.component.html ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\n    <div class=\"col-md-5\">\n        <app-recipe-list>\n\n        </app-recipe-list>\n    </div>\n    <div class=\"col-md-7\">\n        <app-recipe-details></app-recipe-details>\n    \n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/server/server.component.html":
/*!************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/server/server.component.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<p>server works!\n    {{srverId}}  is {{getServerStatus()}}\n    <button class=\"btn btn-primary\" [disabled]=\"allowNewServer\" (click)=\"onCreateServer()\">ADD</button>\n    {{serverCreationStatus}}\n    <input type=\"text\"\n    (input)=\"onUpdateServer($event)\"/>\n    {{server}}\n    \n</p>\n<p *ngIf=\"paraDisplay;else elseFunction\" >this my para</p>\n\n<ng-template #elseFunction>\n<p> This from else Part</p>>\n</ng-template>\n<p [ngStyle]=\"{backgroundColor:getColour()}\">  This para for STYLE </p>\n<ul>\n<li *ngFor=\"let abcd of array; let i = index \">\n    {{i}}{{abcd.name}},{{abcd.age}},{{abcd.guid}}\n</li>\n<table border=\"1\">\n\n    <tr *ngFor=\"let abcd of array;let i=index\">\n        <td>{{i}}</td>\n        <td>{{abcd.name}}</td>\n        <td>{{abcd.age}}</td>\n        <td>{{abcd.guid}}</td>\n    </tr>\n</table>\n</ul>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/shopping-list/shopping-edit/shopping-edit.component.html":
/*!****************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/shopping-list/shopping-edit/shopping-edit.component.html ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n<app-devicesubmenu></app-devicesubmenu>\n\n<p-messages [(value)]=\"msgs\"></p-messages>\n\n<h3 class=\"first\">Basic</h3>\n<div>\n    <button type=\"button\" pButton (click)=\"showSuccess()\" label=\"Success\" class=\"ui-button-success\"></button>\n   <button type=\"button\" pButton (click)=\"showError()\" label=\"Error\" class=\"ui-button-danger\"></button>\n  <button type=\"button\" pButton (click)=\"clear()\" icon=\"pi pi-times\" style=\"float:right\" label=\"Clear\"></button>\n</div>\n\n\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/shopping-list/shopping-list.component.html":
/*!**************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/shopping-list/shopping-list.component.html ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\n    <div class=\"col-xs-12\">\n        <app-shopping-edit></app-shopping-edit>\n        <hr>\n        <p>hi list work</p>\n    </div>\n</div>\n<div class=\"row\">\n        <div class=\"col-xs-10\">\n          <app-shopping-edit></app-shopping-edit>\n          <hr>\n          <ul class=\"list-group\">\n            <a\n              class=\"list-group-item\"\n              style=\"cursor: pointer\"\n              *ngFor=\"let ingredient of ingredients\"\n            >\n              {{ ingredient.name }} ({{ ingredient.amount }})\n            </a>\n          </ul>\n        </div>\n      </div>\n      "

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/submenu/addevice/addevice.component.html":
/*!************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/submenu/addevice/addevice.component.html ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-devicesubmenu></app-devicesubmenu>\n<p-messages [(value)]=\"msgs\"></p-messages>\n\n<div class=\"container\">\n  <div class=\"col-xs-12\">\n    <div class=\"all-content-aria\">\n      <div class=\"row\">\n        <form #add_DeviceForm=\"ngForm\" (ngSubmit)=\"getaddDeviceForm(add_DeviceForm)\" ngNativeValidate>\n            <div class=\"top-form-above-menu\">Position : Device -> {{title}}</div>\n                <div class=\"col-xs-12 panel panel-primary\">\n                    <div class=\"panel-body\"><b>Device Details</b></div>\n\n                              <div class=\"col-sm-12\">\n                                  <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                      Device Name <i class=\"fa fa-asterisk text-danger\" style=\"color: red; \">*</i>\n                                      <input type=\"text\" name=\"devicename\"  class=\"form-control\" [(ngModel)]=\"device_Name_e\" required>\n                                  </div>\n\n                                  <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                    Select Device Type <i class=\"fa fa-asterisk text-danger\" style=\"color: red; \">*</i>\n                                    <select #mySelect (change)='deviceTypeArrayMethod(mySelect.value)' name=\"Check_In\" class=\"form-control\"  >\n                                      <option *ngFor=\"let prod of deviceTypeArray; let i = index\" [value]=\"prod.id\" [selected]=\"i == deviceTypeArray_init\">{{prod.name}} </option>\n                                    </select>\n                                  </div>\n\n                                  <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                    Serial Number\n                                    <input type=\"text\" name=\"serialnumber\"  class=\"form-control\" [(ngModel)]=\"Serial_Number_e\"  [readonly]=\"editFlag\" >\n                                  </div>\n                                  <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                    Ip Address\n                                    <input type=\"text\" name=\"ipaddress\" class=\"form-control\" [(ngModel)]=\"ip_address_e\" [readonly]=\"disblevalue\">\n                                  </div>\n                                  <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                    Port Number\n                                      <input type=\"number\" name=\"portnumber\"  class=\"form-control\"  [(ngModel)]=\"port_no_e\" [readonly]=\"disblevalue\">\n                                  </div>\n                                  <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                    Request Interval\n                                    <input type=\"number\" name=\"requestInterval\"   class=\"form-control\" [(ngModel)]=\"request_intreval_e\"  >\n                                  </div>\n                                  <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                    Select Time Zone <i class=\"fa fa-asterisk text-danger\" style=\"color: red; \">*</i>\n                                    <select  name=\"timezone\"  class=\"form-control\" [(ngModel)]=\"time_zone_e\" required >\n                                            <option value=\"\" selected>Select Time Zone</option>\n                                            <option timeZoneId=\"1\" gmtAdjustment=\"GMT-12:00\" useDaylightTime=\"0\" value=\"-12\">(GMT-12:00) International Date Line West</option>\n                                            <option timeZoneId=\"2\" gmtAdjustment=\"GMT-11:00\" useDaylightTime=\"0\" value=\"-11\">(GMT-11:00) Midway Island, Samoa</option>\n                                            <option timeZoneId=\"3\" gmtAdjustment=\"GMT-10:00\" useDaylightTime=\"0\" value=\"-10\">(GMT-10:00) Hawaii</option>\n                                            <option timeZoneId=\"4\" gmtAdjustment=\"GMT-09:00\" useDaylightTime=\"1\" value=\"-9\">(GMT-09:00) Alaska</option>\n                                            <option timeZoneId=\"5\" gmtAdjustment=\"GMT-08:00\" useDaylightTime=\"1\" value=\"-8\">(GMT-08:00) Pacific Time (US & Canada)</option>\n                                            <option timeZoneId=\"6\" gmtAdjustment=\"GMT-08:00\" useDaylightTime=\"1\" value=\"-8\">(GMT-08:00) Tijuana, Baja California</option>\n                                            <option timeZoneId=\"7\" gmtAdjustment=\"GMT-07:00\" useDaylightTime=\"0\" value=\"-7\">(GMT-07:00) Arizona</option>\n                                            <option timeZoneId=\"8\" gmtAdjustment=\"GMT-07:00\" useDaylightTime=\"1\" value=\"-7\">(GMT-07:00) Chihuahua, La Paz, Mazatlan</option>\n                                            <option timeZoneId=\"9\" gmtAdjustment=\"GMT-07:00\" useDaylightTime=\"1\" value=\"-7\">(GMT-07:00) Mountain Time (US & Canada)</option>\n                                            <option timeZoneId=\"10\" gmtAdjustment=\"GMT-06:00\" useDaylightTime=\"0\" value=\"-6\">(GMT-06:00) Central America</option>\n                                            <option timeZoneId=\"11\" gmtAdjustment=\"GMT-06:00\" useDaylightTime=\"1\" value=\"-6\">(GMT-06:00) Central Time (US & Canada)</option>\n                                            <option timeZoneId=\"12\" gmtAdjustment=\"GMT-06:00\" useDaylightTime=\"1\" value=\"-6\">(GMT-06:00) Guadalajara, Mexico City, Monterrey</option>\n                                            <option timeZoneId=\"13\" gmtAdjustment=\"GMT-06:00\" useDaylightTime=\"0\" value=\"-6\">(GMT-06:00) Saskatchewan</option>\n                                            <option timeZoneId=\"14\" gmtAdjustment=\"GMT-05:00\" useDaylightTime=\"0\" value=\"-5\">(GMT-05:00) Bogota, Lima, Quito, Rio Branco</option>\n                                            <option timeZoneId=\"15\" gmtAdjustment=\"GMT-05:00\" useDaylightTime=\"1\" value=\"-5\">(GMT-05:00) Eastern Time (US & Canada)</option>\n                                            <option timeZoneId=\"16\" gmtAdjustment=\"GMT-05:00\" useDaylightTime=\"1\" value=\"-5\">(GMT-05:00) Indiana (East)</option>\n                                            <option timeZoneId=\"17\" gmtAdjustment=\"GMT-04:00\" useDaylightTime=\"1\" value=\"-4\">(GMT-04:00) Atlantic Time (Canada)</option>\n                                            <option timeZoneId=\"18\" gmtAdjustment=\"GMT-04:00\" useDaylightTime=\"0\" value=\"-4\">(GMT-04:00) Caracas, La Paz</option>\n                                            <option timeZoneId=\"19\" gmtAdjustment=\"GMT-04:00\" useDaylightTime=\"0\" value=\"-4\">(GMT-04:00) Manaus</option>\n                                            <option timeZoneId=\"20\" gmtAdjustment=\"GMT-04:00\" useDaylightTime=\"1\" value=\"-4\">(GMT-04:00) Santiago</option>\n                                            <option timeZoneId=\"21\" gmtAdjustment=\"GMT-03:30\" useDaylightTime=\"1\" value=\"-3.5\">(GMT-03:30) Newfoundland</option>\n                                            <option timeZoneId=\"22\" gmtAdjustment=\"GMT-03:00\" useDaylightTime=\"1\" value=\"-3\">(GMT-03:00) Brasilia</option>\n                                            <option timeZoneId=\"23\" gmtAdjustment=\"GMT-03:00\" useDaylightTime=\"0\" value=\"-3\">(GMT-03:00) Buenos Aires, Georgetown</option>\n                                            <option timeZoneId=\"24\" gmtAdjustment=\"GMT-03:00\" useDaylightTime=\"1\" value=\"-3\">(GMT-03:00) Greenland</option>\n                                            <option timeZoneId=\"25\" gmtAdjustment=\"GMT-03:00\" useDaylightTime=\"1\" value=\"-3\">(GMT-03:00) Montevideo</option>\n                                            <option timeZoneId=\"26\" gmtAdjustment=\"GMT-02:00\" useDaylightTime=\"1\" value=\"-2\">(GMT-02:00) Mid-Atlantic</option>\n                                            <option timeZoneId=\"27\" gmtAdjustment=\"GMT-01:00\" useDaylightTime=\"0\" value=\"-1\">(GMT-01:00) Cape Verde Is.</option>\n                                            <option timeZoneId=\"28\" gmtAdjustment=\"GMT-01:00\" useDaylightTime=\"1\" value=\"-1\">(GMT-01:00) Azores</option>\n                                            <option timeZoneId=\"29\" gmtAdjustment=\"GMT+00:00\" useDaylightTime=\"0\" value=\"0\">(GMT+00:00) Casablanca, Monrovia, Reykjavik</option>\n                                            <option timeZoneId=\"30\" gmtAdjustment=\"GMT+00:00\" useDaylightTime=\"1\" value=\"0\">(GMT+00:00) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London</option>\n                                            <option timeZoneId=\"31\" gmtAdjustment=\"GMT+01:00\" useDaylightTime=\"1\" value=\"1\">(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna</option>\n                                            <option timeZoneId=\"32\" gmtAdjustment=\"GMT+01:00\" useDaylightTime=\"1\" value=\"1\">(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague</option>\n                                            <option timeZoneId=\"33\" gmtAdjustment=\"GMT+01:00\" useDaylightTime=\"1\" value=\"1\">(GMT+01:00) Brussels, Copenhagen, Madrid, Paris</option>\n                                            <option timeZoneId=\"34\" gmtAdjustment=\"GMT+01:00\" useDaylightTime=\"1\" value=\"1\">(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb</option>\n                                            <option timeZoneId=\"35\" gmtAdjustment=\"GMT+01:00\" useDaylightTime=\"1\" value=\"1\">(GMT+01:00) West Central Africa</option>\n                                            <option timeZoneId=\"36\" gmtAdjustment=\"GMT+02:00\" useDaylightTime=\"1\" value=\"2\">(GMT+02:00) Amman</option>\n                                            <option timeZoneId=\"37\" gmtAdjustment=\"GMT+02:00\" useDaylightTime=\"1\" value=\"2\">(GMT+02:00) Athens, Bucharest, Istanbul</option>\n                                            <option timeZoneId=\"38\" gmtAdjustment=\"GMT+02:00\" useDaylightTime=\"1\" value=\"2\">(GMT+02:00) Beirut</option>\n                                            <option timeZoneId=\"39\" gmtAdjustment=\"GMT+02:00\" useDaylightTime=\"1\" value=\"2\">(GMT+02:00) Cairo</option>\n                                            <option timeZoneId=\"40\" gmtAdjustment=\"GMT+02:00\" useDaylightTime=\"0\" value=\"2\">(GMT+02:00) Harare, Pretoria</option>\n                                            <option timeZoneId=\"41\" gmtAdjustment=\"GMT+02:00\" useDaylightTime=\"1\" value=\"2\">(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius</option>\n                                            <option timeZoneId=\"42\" gmtAdjustment=\"GMT+02:00\" useDaylightTime=\"1\" value=\"2\">(GMT+02:00) Jerusalem</option>\n                                            <option timeZoneId=\"43\" gmtAdjustment=\"GMT+02:00\" useDaylightTime=\"1\" value=\"2\">(GMT+02:00) Minsk</option>\n                                            <option timeZoneId=\"44\" gmtAdjustment=\"GMT+02:00\" useDaylightTime=\"1\" value=\"2\">(GMT+02:00) Windhoek</option>\n                                            <option timeZoneId=\"45\" gmtAdjustment=\"GMT+03:00\" useDaylightTime=\"0\" value=\"3\">(GMT+03:00) Kuwait, Riyadh, Baghdad</option>\n                                            <option timeZoneId=\"46\" gmtAdjustment=\"GMT+03:00\" useDaylightTime=\"1\" value=\"3\">(GMT+03:00) Moscow, St. Petersburg, Volgograd</option>\n                                            <option timeZoneId=\"47\" gmtAdjustment=\"GMT+03:00\" useDaylightTime=\"0\" value=\"3\">(GMT+03:00) Nairobi</option>\n                                            <option timeZoneId=\"48\" gmtAdjustment=\"GMT+03:00\" useDaylightTime=\"0\" value=\"3\">(GMT+03:00) Tbilisi</option>\n                                            <option timeZoneId=\"49\" gmtAdjustment=\"GMT+03:30\" useDaylightTime=\"1\" value=\"3.5\">(GMT+03:30) Tehran</option>\n                                            <option timeZoneId=\"50\" gmtAdjustment=\"GMT+04:00\" useDaylightTime=\"0\" value=\"4\">(GMT+04:00) Abu Dhabi, Muscat</option>\n                                            <option timeZoneId=\"51\" gmtAdjustment=\"GMT+04:00\" useDaylightTime=\"1\" value=\"4\">(GMT+04:00) Baku</option>\n                                            <option timeZoneId=\"52\" gmtAdjustment=\"GMT+04:00\" useDaylightTime=\"1\" value=\"4\">(GMT+04:00) Yerevan</option>\n                                            <option timeZoneId=\"53\" gmtAdjustment=\"GMT+04:30\" useDaylightTime=\"0\" value=\"4.5\">(GMT+04:30) Kabul</option>\n                                            <option timeZoneId=\"54\" gmtAdjustment=\"GMT+05:00\" useDaylightTime=\"1\" value=\"5\">(GMT+05:00) Yekaterinburg</option>\n                                            <option timeZoneId=\"55\" gmtAdjustment=\"GMT+05:00\" useDaylightTime=\"0\" value=\"5\">(GMT+05:00) Islamabad, Karachi, Tashkent</option>\n                                            <option timeZoneId=\"56\" gmtAdjustment=\"GMT+05:30\" useDaylightTime=\"0\" value=\"5.5\">(GMT+05:30) Sri Jayawardenapura</option>\n                                            <option timeZoneId=\"57\" gmtAdjustment=\"GMT+05:30\" useDaylightTime=\"0\" value=\"5.5\">(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi</option>\n                                            <option timeZoneId=\"58\" gmtAdjustment=\"GMT+05:45\" useDaylightTime=\"0\" value=\"5.75\">(GMT+05:45) Kathmandu</option>\n                                            <option timeZoneId=\"59\" gmtAdjustment=\"GMT+06:00\" useDaylightTime=\"1\" value=\"6\">(GMT+06:00) Almaty, Novosibirsk</option>\n                                            <option timeZoneId=\"60\" gmtAdjustment=\"GMT+06:00\" useDaylightTime=\"0\" value=\"6\">(GMT+06:00) Astana, Dhaka</option>\n                                            <option timeZoneId=\"61\" gmtAdjustment=\"GMT+06:30\" useDaylightTime=\"0\" value=\"6.5\">(GMT+06:30) Yangon (Rangoon)</option>\n                                            <option timeZoneId=\"62\" gmtAdjustment=\"GMT+07:00\" useDaylightTime=\"0\" value=\"7\">(GMT+07:00) Bangkok, Hanoi, Jakarta</option>\n                                            <option timeZoneId=\"63\" gmtAdjustment=\"GMT+07:00\" useDaylightTime=\"1\" value=\"7\">(GMT+07:00) Krasnoyarsk</option>\n                                            <option timeZoneId=\"64\" gmtAdjustment=\"GMT+08:00\" useDaylightTime=\"0\" value=\"8\">(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi</option>\n                                            <option timeZoneId=\"65\" gmtAdjustment=\"GMT+08:00\" useDaylightTime=\"0\" value=\"8\">(GMT+08:00) Kuala Lumpur, Singapore</option>\n                                            <option timeZoneId=\"66\" gmtAdjustment=\"GMT+08:00\" useDaylightTime=\"0\" value=\"8\">(GMT+08:00) Irkutsk, Ulaan Bataar</option>\n                                            <option timeZoneId=\"67\" gmtAdjustment=\"GMT+08:00\" useDaylightTime=\"0\" value=\"8\">(GMT+08:00) Perth</option>\n                                            <option timeZoneId=\"68\" gmtAdjustment=\"GMT+08:00\" useDaylightTime=\"0\" value=\"8\">(GMT+08:00) Taipei</option>\n                                            <option timeZoneId=\"69\" gmtAdjustment=\"GMT+09:00\" useDaylightTime=\"0\" value=\"9\">(GMT+09:00) Osaka, Sapporo, Tokyo</option>\n                                            <option timeZoneId=\"70\" gmtAdjustment=\"GMT+09:00\" useDaylightTime=\"0\" value=\"9\">(GMT+09:00) Seoul</option>\n                                            <option timeZoneId=\"71\" gmtAdjustment=\"GMT+09:00\" useDaylightTime=\"1\" value=\"9\">(GMT+09:00) Yakutsk</option>\n                                            <option timeZoneId=\"72\" gmtAdjustment=\"GMT+09:30\" useDaylightTime=\"0\" value=\"9.5\">(GMT+09:30) Adelaide</option>\n                                            <option timeZoneId=\"73\" gmtAdjustment=\"GMT+09:30\" useDaylightTime=\"0\" value=\"9.5\">(GMT+09:30) Darwin</option>\n                                            <option timeZoneId=\"74\" gmtAdjustment=\"GMT+10:00\" useDaylightTime=\"0\" value=\"10\">(GMT+10:00) Brisbane</option>\n                                            <option timeZoneId=\"75\" gmtAdjustment=\"GMT+10:00\" useDaylightTime=\"1\" value=\"10\">(GMT+10:00) Canberra, Melbourne, Sydney</option>\n                                            <option timeZoneId=\"76\" gmtAdjustment=\"GMT+10:00\" useDaylightTime=\"1\" value=\"10\">(GMT+10:00) Hobart</option>\n                                            <option timeZoneId=\"77\" gmtAdjustment=\"GMT+10:00\" useDaylightTime=\"0\" value=\"10\">(GMT+10:00) Guam, Port Moresby</option>\n                                            <option timeZoneId=\"78\" gmtAdjustment=\"GMT+10:00\" useDaylightTime=\"1\" value=\"10\">(GMT+10:00) Vladivostok</option>\n                                            <option timeZoneId=\"79\" gmtAdjustment=\"GMT+11:00\" useDaylightTime=\"1\" value=\"11\">(GMT+11:00) Magadan, Solomon Is., New Caledonia</option>\n                                            <option timeZoneId=\"80\" gmtAdjustment=\"GMT+12:00\" useDaylightTime=\"1\" value=\"12\">(GMT+12:00) Auckland, Wellington</option>\n                                            <option timeZoneId=\"81\" gmtAdjustment=\"GMT+12:00\" useDaylightTime=\"0\" value=\"12\">(GMT+12:00) Fiji, Kamchatka, Marshall Is.</option>\n                                            <option timeZoneId=\"82\" gmtAdjustment=\"GMT+13:00\" useDaylightTime=\"0\" value=\"13\">(GMT+13:00) Nuku'alofa</option>\n                                        </select>\n                                    </div>\n                                    <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                      Select Area  <i class=\"fa fa-asterisk text-danger\" style=\"color: red; \">*</i>\n\n                                     <input type=\"text\" name=\"parentarea\" (click)=\"showDialog()\"  class=\"form-control\" [(ngModel)]=\"area_id_e\"   required  >\n                                    </div>\n                              </div>\n                             <div class=\"col-sm-12\">\n\n\n                                <div class=\"col-sm-3 text-left md-form form-group mt-5\" >\n                                  <br>\n                                  <input type=\"checkbox\" name=\"realTimeDataUpload\"     [(ngModel)]=\"realtime_e\"> : Real-Time Data Upload\n                                </div>\n\n                                <div class=\"col-sm-3 text-left md-form form-group mt-5\" >\n                                  <br>\n                                        <input type=\"checkbox\" name=\"enableDevice\"     [(ngModel)]=\"device_enable_e\"> : Enable Device\n                                </div>\n                            </div>\n                            <div class=\"col-sm-12\">\n\n\n\n\n\n                            </div>\n\n\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                    <p-dialog  [(visible)]=\"display\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\"\n                                    [maximizable]=\"true\" [baseZIndex]=\"10000\">\n                                    <mat-accordion>\n                                            <mat-expansion-panel>\n                                              <mat-expansion-panel-header>\n                                                Select Parent Area\n                                              </mat-expansion-panel-header>\n                                                <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                                                    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n\n                                                    <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                                                      </mat-tree-node>\n\n                                                </mat-tree>`\n\n                                            </mat-expansion-panel>\n                                            <div align=\"right\">\n                                            <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Yes\"></button>\n                                            <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n                                          </div>\n                                          </mat-accordion>\n                            </p-dialog>\n                            </div>\n                </div>\n                <div class=\"col-xs-12 panel panel-primary\">\n                  <div class=\"panel-body\"><b></b></div>\n                          <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                  <div class=\"col-sm-4\">\n                                  </div>\n                                  <div class=\"col-sm-2\">\n                                    <button type=\"submit\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                      <span class=\"glyphicon\" aria-hidden=\"true\"></span> Save\n                                    </button>\n                                  </div>\n                                  <div class=\"col-sm-2\">\n                                    <button type=\"reset\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                      <span class=\"glyphicon\" aria-hidden=\"true\"></span> Cancel\n                                    </button>\n                                  </div>\n                                  <div class=\"col-sm-4\">\n                                  </div>\n                          </div>\n              </div>\n\n            </form>\n            <div class=\"col-sm-6\">\n              <div class=\"col-sm-12 text-left md-form form-group mt-1\">\n                    <div class=\"alert alert-dark\" role=\"alert\" *ngIf=\"errordisplayflag\">\n                      {{errorDta}}\n                    </div>\n              </div>\n          </div>\n        </div>\n    </div>\n  </div>\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/submenu/addeviceareaubmenu/addeviceareaubmenu.component.html":
/*!********************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/submenu/addeviceareaubmenu/addeviceareaubmenu.component.html ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-devicesubmenu></app-devicesubmenu>\n<div class=\"container\">\n    <div class=\"col-xs-12\">\n        <div class=\"all-content-aria\">\n            <div class=\"top-form-above-menu\">Position : Device -> Add Area</div>\n                <div class=\"col-sm-12 panel panel-primary\">\n                    <p-messages [(value)]=\"msgs\"></p-messages>\n                    <div class=\"panel-body\"><b>Area Details</b></div>\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n\n                        <form #addAreaForm=\"ngForm\" (ngSubmit)=\"getaddAreaForm(addAreaForm)\" ngNativeValidate>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n\n                            </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                <input type=\"text\"  name=\"areacode\" placeholder=\"Area Code\" class=\"form-control \" ngModel  required>\n                            </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                <input type=\"text\" name=\"areaname\" placeholder=\"Area Name\" class=\"form-control\" ngModel required>\n                            </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                <input type=\"text\" name=\"remark\" placeholder=\"remark\" class=\"form-control\" ngModel >\n                            </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                <input type=\"text\" name=\"parentarea\" placeholder=\"Parent Area\" class=\"form-control\" [(ngModel)]=\"parentArea\" readonly (click)=\"showDialog()\">\n                            </div>\n                         <!--   <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n\n                                <mat-accordion>\n                                    <mat-expansion-panel>\n                                      <mat-expansion-panel-header>\n                                        <mat-panel-title>\n                                          Select Parent Area\n                                        </mat-panel-title>\n                                      </mat-expansion-panel-header>\n                                        <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                                            <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n\n                                            <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                                              </mat-tree-node>\n\n                                        </mat-tree>\n\n                                    </mat-expansion-panel>\n                                  </mat-accordion>\n\n\n\n                            </div> -->\n\n\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                    <div class=\"col-sm-6\">\n                                        <button type=\"submit\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\" >\n                                            <span class=\"glyphicon\" aria-hidden=\"true\"></span> Save\n                                        </button>\n                                    </div>\n                                    <div class=\"col-sm-6\">\n                                            <button type=\"reset\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                            <span class=\"glyphicon\" aria-hidden=\"true\"></span> Cancel\n                                            </button>\n                                    </div>\n\n                            </div>\n                            <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                            </div>\n\n\n\n                        </form>\n                     </div>\n\n\n\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <p-dialog  [(visible)]=\"display\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\"\n    [maximizable]=\"true\" [baseZIndex]=\"10000\">\n    <mat-accordion>\n            <mat-expansion-panel>\n              <mat-expansion-panel-header>\n                Select Parent Area\n              </mat-expansion-panel-header>\n                <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                    <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n\n                    <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                      </mat-tree-node>\n\n                </mat-tree>`\n\n            </mat-expansion-panel>\n            <div align=\"right\">\n            <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Yes\"></button>\n            <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n          </div>\n          </mat-accordion>\n\n\n   </p-dialog>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/submenu/attendancesubmenu/attendancesubmenu.component.html":
/*!******************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/submenu/attendancesubmenu/attendancesubmenu.component.html ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"sub-menu\">\n    <div class=\"container\">\n     <div class=\"col-md-12\">\n         <div class=\"navbar-collapse \" id=\"myNavbar\">\n             <ul class=\"nav navbar-nav\">\n           <!--     <li><a routerLink=\"/globalrule\">Global Rule</a></li>\n                <li><a routerLink=\"/rules\">Rules</a></li>\n                 <li><a routerLink=\"/timeTableList\">Time Table</a></li>\n                 <li><a routerLink=\"/breakTimeTableList\">Break Time Table</a></li>\n                 <li><a routerLink=\"/shiftlist\">Shift</a></li>\n                 <li><a routerLink=\"/addShedule\">Add Shedule</a></li> -->\n                 <li><a routerLink=\"/transaction\">Transaction</a></li>\n              <!--    <li><a routerLink=\"/report\">Report</a></li> -->\n             </ul>\n         </div>\n     </div>\n</div>\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/submenu/deviceareasubmenu/deviceareasubmenu.component.html":
/*!******************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/submenu/deviceareasubmenu/deviceareasubmenu.component.html ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-devicesubmenu></app-devicesubmenu>\n<div class=\"content_section\">\n        <div class=\"all-content-aria\">\n            <div class=\"top-form-above-menu\">Position : Device -> Area</div>\n    <p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\n    <p-toast position=\"top-left\"></p-toast>\n\n    <p-table id=\"mytable\" #dt [value]=\"allArea\" dataKey=\"data_id\" [columns]=\"cols\"  editMode=\"row\" [paginator]=\"true\" [rowsPerPageOptions]=\"[10,15,20,50,1000,5000]\" [rows]=\"20\" [autoLayout]=\"true\">\n\n            <ng-template pTemplate=\"caption\">\n                    <div style=\"text-align: right\" class=\"form-group\">\n                        <button type=\"button\" pButton icon=\"pi pi-file-o\" iconPos=\"left\" label=\"ADD\" routerLink=\"/addeviceareaubmenu\" style=\"float:left\"></button>\n                        <i class=\"fa fa-search\" style=\"margin:4px 4px 0 0\"></i>\n                        <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" class=\"form-control\">\n                        <p-messages [(value)]=\"msgs\"></p-messages>\n\n                        </div>\n            </ng-template>\n\n        <ng-template pTemplate=\"header\" let-columns []>\n\n            <tr >\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn [ngStyle]=\"{'width':auto}\">\n                    {{col.header}}\n                    <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n            </tr>\n            <tr>\n                    <th *ngFor=\"let col of cols\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\n\n                        <input  pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, col.filterMatchMode)\" [value]=\"dt.filters[col.field]?.value\" >\n\n                    </th>\n            </tr>\n\n\n        </ng-template>\n\n\n        <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n\n            <tr [pEditableRow]=\"rowData\">\n\n\n                <td>\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.area_code\" required [ngStyle]=\"{'width': '100%'}\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{rowData.area_code}}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n\n                <td>\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.area_name\" required [ngStyle]=\"{'width': '100%'}\">\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{rowData.area_name}}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td>\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\"   [ngStyle]=\"{'width': '100%'}\"   (click)=\"showDialog()\" [(ngModel)]=\"parentArea\" required>\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{rowData.parent_area}}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n                <td>\n                    <p-cellEditor>\n                        <ng-template pTemplate=\"input\">\n                            <input pInputText type=\"text\" [(ngModel)]=\"rowData.remark\" [ngStyle]=\"{'width': '100%'}\"    >\n                        </ng-template>\n                        <ng-template pTemplate=\"output\">\n                            {{rowData.remark}}\n                        </ng-template>\n                    </p-cellEditor>\n                </td>\n\n                <td style=\"text-align:center ;min-width:150px\" >\n\n                    <button *ngIf=\"!editing\" pButton type=\"button\" pInitEditableRow icon=\"pi pi-pencil\" class=\"ui-button-info\" (click)=\"onRowEditInit(rowData)\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pSaveEditableRow icon=\"pi pi-check\" class=\"ui-button-success\" style=\"margin-right: .5em\" (click)=\"onRowEditSave(rowData)\" pTooltip=\"Edit\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-trash\" class=\"ui-button-danger\" style=\"margin-right: .5em\"  (click)=\"onRowRemove(rowData, ri)\"  pTooltip=\"Delete\" tooltipPosition=\"top\"></button>\n                    <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-times\" class=\"ui-button-danger\" style=\"margin-right: .5em\"  (click)=\"onRowEditCancel(rowData, ri)\" pTooltip=\"Cancel\" tooltipPosition=\"top\"></button>\n\n\n                </td>\n            </tr>\n\n        </ng-template>\n\n\n    </p-table>\n\n\n\n\n</div>\n</div>\n<div class=\"clearfix\"></div>\n<div class=\"col-sm-6\">\n    <div class=\"col-sm-12 text-left md-form form-group mt-1\">\n\n          <div class=\"alert alert-dark\" role=\"alert\" *ngIf=\"errordisplayflag\">\n            {{errorDta}}\n          </div>\n    </div>\n </div>\n\n\n\n\n <p-dialog  [(visible)]=\"display\" [modal]=\"true\" [responsive]=\"true\" [style]=\"{width: '350px', minWidth: '200px'}\" [minY]=\"70\"\n [maximizable]=\"true\" [baseZIndex]=\"10000\">\n <mat-accordion>\n         <mat-expansion-panel>\n           <mat-expansion-panel-header>\n             Select Parent Area\n           </mat-expansion-panel-header>\n             <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n                 <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n\n                 <mat-radio-button value=\"{{node.item}}\" (change)=\"getValueFromRadioButton($event)\" >{{node.item}} </mat-radio-button>\n                   </mat-tree-node>\n\n             </mat-tree>`\n\n         </mat-expansion-panel>\n         <div align=\"right\">\n         <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Yes\"></button>\n         <button type=\"button\" pButton icon=\"pi pi-close\" (click)=\"displayfalse()\" label=\"No\" class=\"ui-button-secondary\"></button>\n       </div>\n       </mat-accordion>\n\n\n</p-dialog>\n\n<app-footer></app-footer>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/submenu/devicerealtimesubmenu/devicerealtimesubmenu.component.html":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/submenu/devicerealtimesubmenu/devicerealtimesubmenu.component.html ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-devicesubmenu></app-devicesubmenu>\n<div class=\"content_section\">\n        <div class=\"all-content-aria \">\n            <div class=\"top-form-above-menu\">Position : Device -> Real Time Monitoring</div>\n    <p-toast position=\"top-left\"></p-toast>\n    <p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\n\n    <p-table id=\"mytable\" #dt [value]=\"datas\"   [columns]=\"cols\"   [paginator]=\"true\" [rowsPerPageOptions]=\"[10,15,20,50,1000,5000]\" [rows]=\"20\"   [autoLayout]=\"true\" editMode=\"row\" >\n            <ng-template pTemplate=\"caption\">\n                    <div style=\"text-align: right\" class=\"form-group\">\n\n                        <i class=\"fa fa-search\" style=\"margin:4px 4px 0 0\"></i>\n                        <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" class=\"form-control\">\n                        <p-messages [(value)]=\"msgs\"></p-messages>\n                        </div>\n            </ng-template>\n\n        <ng-template pTemplate=\"header\" let-columns []>\n            <tr >\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn [ngStyle]=\"{'width': auto}\">\n                    {{col.header}}\n                    <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n            </tr>\n            <tr>\n                <th *ngFor=\"let col of cols\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\n\n                    <input  pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, col.filterMatchMode)\" [value]=\"dt.filters[col.field]?.value\"  >\n\n\n                </th>\n            </tr>\n\n\n        </ng-template>\n\n\n        <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n\n            <tr [pEditableRow]=\"rowData\">\n\n                <td>\n                        {{rowData.device_name}}\n\n                </td>\n                <td>\n                    {{rowData.device_SN}}\n\n            </td> <td>\n                {{rowData.punch_status}}\n\n        </td> <td>\n            {{rowData.punch_time}}\n\n    </td> <td>\n        {{rowData.last_id}}\n\n</td> <td>\n    {{rowData.personal_No}}\n\n</td> <td>\n    {{rowData.area_name}}\n\n</td> <td>\n    {{rowData.verification_mode}}\n\n</td> <td>\n    {{rowData.work_code}}\n\n</td>\n\n\n            </tr>\n\n        </ng-template>\n\n    </p-table>\n\n        </div>\n        </div>\n<app-footer></app-footer>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/submenu/devicesubmenu/devicesubmenu.component.html":
/*!**********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/submenu/devicesubmenu/devicesubmenu.component.html ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"sub-menu\">\n    <div class=\"container\">\n     <div class=\"col-md-12\">\n         <div class=\"navbar-collapse \" id=\"myNavbar\">\n             <ul class=\"nav navbar-nav\">\n                 \n                <li><a routerLink=\"/device\">Device</a></li>\n                <li><a routerLink=\"/area\">Area</a></li>\n                <li><a routerLink=\"/realtimemonitor\">Real-Time Monitoring</a></li>\n             </ul>\n         </div>\n     </div>  \n</div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/submenu/personnelsubmenu/personnelsubmenu.component.html":
/*!****************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/submenu/personnelsubmenu/personnelsubmenu.component.html ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"sub-menu\">\n    <div class=\"container\">\n     <div class=\"col-md-12\">\n         <div class=\"navbar-collapse \" id=\"myNavbar\">\n             <ul class=\"nav navbar-nav\">\n                <li><a routerLink=\"/personnals\">Personnel</a></li>\n                 <li><a routerLink=\"/department\">Department</a></li>\n                 <li><a routerLink=\"/position\">Position</a></li>\n                 <li><a routerLink=\"/synch\">Synch</a></li>\n             </ul>\n         </div>\n     </div>\n</div>\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/submenu/systemsubmenu/systemsubmenu.component.html":
/*!**********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/submenu/systemsubmenu/systemsubmenu.component.html ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"sub-menu\">\n    <div class=\"container\">\n     <div class=\"col-md-12\">\n         <div class=\"navbar-collapse \" id=\"myNavbar\">\n             <ul class=\"nav navbar-nav\">\n                <li><a routerLink=\"/addNewUser\">New User</a></li>\n                 <li><a routerLink=\"/oracledbSetup\">Oracle DB Setup</a></li>\n             </ul>\n         </div>\n     </div>\n</div>\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/superadmin/superadmin.component.html":
/*!********************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/superadmin/superadmin.component.html ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-personnelsubmenu></app-personnelsubmenu>\n\n <div class=\"container\">\n     <div class=\"col-xs-12\">\n            <div class=\"col-xs-1\">\n            </div>\n            <div class=\"col-xs-10\">\n                    <p-chart type=\"pie\" [data]=\"data\"></p-chart>\n            </div>\n            <div class=\"col-xs-1\">\n            </div>\n          \n    </div>\n     \n</div>\n\n<div class=\"clearfix\"></div> \n<app-footer></app-footer>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/system/add-new-normal-user/add-new-normal-user.component.html":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/system/add-new-normal-user/add-new-normal-user.component.html ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-systemsubmenu></app-systemsubmenu>\n<div class=\"container\">\n  <div class=\"col-xs-12\">\n    <div class=\"all-content-aria\">\n      <div class=\"row\">\n        <p-messages [(value)]=\"msgs\"></p-messages>\n        <form #add_NewNormalUserForm=\"ngForm\" (ngSubmit)=\"getaddNewUserForm(add_NewNormalUserForm)\" ngNativeValidate>\n            <div class=\"top-form-above-menu\">Position : System -> Add New User</div>\n                <div class=\"col-xs-12 panel panel-primary\">\n                    <div class=\"panel-body\"><b>User Register </b></div>\n\n                              <div class=\"col-sm-12\">\n                                  <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                      User Name\n                                      <input type=\"text\" name=\"username\"  class=\"form-control\" [(ngModel)]=\"username\" required>\n                                  </div>\n                                  <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                    Password\n                                    <input type=\"password\" name=\"Password\"  class=\"form-control\" [(ngModel)]=\"password\" required >\n                                  </div>\n                                  <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                    Email\n                                    <input type=\"email\" name=\"email\" class=\"form-control\" [(ngModel)]=\"email\" required>\n                                  </div>\n                                  <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                    First Name\n                                      <input type=\"text\" name=\"firstname\"  class=\"form-control\"  [(ngModel)]=\"first_name\" required>\n                                  </div>\n                              </div>\n                             <div class=\"col-sm-12\">\n                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                 Last Name\n                                  <input type=\"text\" name=\"lastname\"   class=\"form-control\"   [(ngModel)]=\"last_name\" required >\n                                </div>\n                                <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                User Type\n                                <select #mySelect (change)='userTypeMethod(mySelect.value)' name=\"Check_In\" class=\"form-control\"  >\n                                  <option *ngFor=\"let prod of userType_array; let i = index\" [value]=\"prod.id\" [selected]=\"i == userType_init\">{{prod.name}} </option>\n                                </select>\n                                </div>\n                                <div class=\"col-sm-3 text-left md-form form-group mt-5\" >\n                                  Status\n                                  <select #mySelect1 (change)='userStatusMethod(mySelect1.value)' name=\"Check_In\" class=\"form-control\"  >\n                                    <option *ngFor=\"let prod of userStatus_array; let i = index\" [value]=\"prod.id\" [selected]=\"i == userStatus_init\">{{prod.name}} </option>\n                                  </select>\n                                </div>\n\n                                <div class=\"col-sm-3 text-left md-form form-group mt-5\" >\n\n\n                                </div>\n                            </div>\n                            <div class=\"col-sm-12\">\n\n                            <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n\n                            </div>\n                            </div>\n\n\n                </div>\n                <div class=\"col-xs-12 panel panel-primary\">\n                  <div class=\"panel-body\"><b></b></div>\n                          <div class=\"col-sm-12 text-left md-form form-group mt-5\">\n                                  <div class=\"col-sm-4\">\n                                  </div>\n                                  <div class=\"col-sm-2\">\n                                    <button type=\"submit\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                      <span class=\"glyphicon\" aria-hidden=\"true\"></span> Save\n                                    </button>\n                                  </div>\n                                  <div class=\"col-sm-2\">\n                                    <button type=\"reset\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                      <span class=\"glyphicon\" aria-hidden=\"true\"></span> Cancel\n                                    </button>\n                                  </div>\n                                  <div class=\"col-sm-4\">\n                                  </div>\n                          </div>\n              </div>\n\n            </form>\n        </div>\n    </div>\n  </div>\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/system/oracle-data-setup/oracle-data-setup.component.html":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/system/oracle-data-setup/oracle-data-setup.component.html ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-systemsubmenu></app-systemsubmenu>\n<div class=\"container\">\n        <div class=\"col-xs-12\">\n            <div class=\"all-content-aria\">\n                <div class=\"row\">\n    <!---First Section--->\n                       <!----<form action=\"#\" method=\"post\">---->\n                        <p-messages [(value)]=\"msgs\"></p-messages>\n\n                        <form #oracleForm=\"ngForm\" (ngSubmit)=\"getDbSettings(oracleForm)\" ngNativeValidate >\n                        <div class=\"top-form-above-menu\">Position : System->Oracle DB Setp</div>\n                        <div class=\"col-xs-12 panel panel-primary\">\n                                <div class=\"panel-body\"><b>Oracle DataBase Settings</b></div>\n                                <div class=\"col-xs-12\">\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Server Address/IP Address\n                                                <input type=\"text\" name=\"serverAddress\" class=\"form-control\" [(ngModel)]=\"ip_add\" required>\n\n                                        </div>\n\n                                        <div class=\"col-sm-2 text-left md-form form-group mt-5\">\n                                                Port\n                                                <input type=\"text\" name=\"port\" class=\"form-control\" [(ngModel)]=\"port\" required>\n\n                                        </div>\n                                        <div class=\"col-sm-2 text-left md-form form-group mt-5\">\n                                          DB Server\n                                          <input type=\"text\" name=\"port\" class=\"form-control\" [(ngModel)]=\"db_serves\" required >\n\n                                        </div>\n                                        <div class=\"col-sm-2 text-left md-form form-group mt-5\">\n                                          UPLOAD MODE\n                                          <select #mySelect (change)='uploadmodeMethod(mySelect.value)' name=\"Check_In\" class=\"form-control\"  >\n                                            <option *ngFor=\"let prod of uploadMode_array; let i = index\" [value]=\"prod.id\" [selected]=\"i == uploadMode_init\">{{prod.name}} </option>\n                                          </select>\n\n                                        </div>\n                                        <div class=\"col-sm-2 text-left md-form form-group mt-5\">\n                                          Time\n                                          <input type=\"time\" name=\"time\" class=\"form-control\" [(ngModel)]=\"time_interval\" [disabled]=\"isEnabled\">\n\n                                        </div>\n\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n\n                                        </div>\n\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n\n                                        </div>\n\n                                 </div>\n                                 <div class=\"col-xs-12\">\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                Database Name\n                                                <input type=\"text\" name=\"DBName\" class=\"form-control\" [(ngModel)]=\"db_name\" required>\n\n                                        </div>\n\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                               DB Table Name\n                                                <input type=\"text\" name=\"TableName\" class=\"form-control\" [(ngModel)]=\"table_name\" required>\n\n                                        </div>\n\n                                        <div class=\"col-sm-3 text-left md-form form-group mt-5\">\n                                                DB PassWord\n                                                <input type=\"text\" name=\"Password\" class=\"form-control\" [(ngModel)]=\"db_password\" required>\n\n                                        </div>\n\n                                        <div class=\"col-sm-2 text-left md-form form-group mt-5\">\n                                                <br>\n                                                <button type=\"button\"  class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\" (click)=\"getDbSettings(oracleForm)\">\n                                                        <span class=\"glyphicon\" aria-hidden=\"true\"></span> Connection Check\n                                                        </button>\n                                        </div>\n\n\n                                 </div>\n                         </div>\n\n                        <div class=\"col-xs-12 panel panel-primary\">\n                                <div class=\"panel-body\"></div>\n                                        <div class=\"col-xs-12\">\n\n\n                                        </div>\n\n                                        <div class=\"col-xs-12\">\n\n                                        </div>\n                                         <div class=\"col-xs-12\">\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n\n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n\n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                        <button type=\"submit\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                                        <span class=\"glyphicon\" aria-hidden=\"true\"></span> Save\n                                                        </button>\n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n                                                        <button type=\"reset\" class=\"btn btn-primary btn-color btn-bg-color btn-sm btn-block\">\n                                                        <span class=\"glyphicon\" aria-hidden=\"true\"></span> Cancel\n                                                        </button>\n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n\n                                                </div>\n                                                <div class=\"col-sm-2 text-left md-form form-group mt-5  form-inlin\">\n\n                                                </div>\n\n\n                                        </div>\n                        </div>\n                         </form>\n                </div>\n            </div>\n        </div>\n</div>\n\n\n\n\n<app-footer></app-footer>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/system/system.component.html":
/*!************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/system/system.component.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-header></app-header>\n<app-systemsubmenu></app-systemsubmenu>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/testing/testing.component.html":
/*!**************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/testing/testing.component.html ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container\" id=\"content\" #content>\n    \n<p-toast position=\"top-left\"></p-toast>\n<p-confirmDialog [style]=\"{width: '50vw'}\"></p-confirmDialog>\n<p-table id=\"mytable\" #dt [value]=\"cars\" dataKey=\"vin\" [columns]=\"cols\"  editMode=\"row\" [paginator]=\"true\" [rowsPerPageOptions]=\"[10,15,20,50,1000]\" [rows]=\"20\"  [resizableColumns]=\"true\"  >\n   \n        <ng-template pTemplate=\"caption\">\n                <div style=\"text-align: right\">        \n                    <i class=\"fa fa-search\" style=\"margin:4px 4px 0 0\"></i>\n                    <input type=\"text\" pInputText size=\"50\" placeholder=\"Global Filter\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" style=\"width:auto\">\n                </div>\n                <div class=\"ui-helper-clearfix\" >\n                        <button type=\"button\" pButton icon=\"fa fa-file-o\" iconPos=\"left\" label=\"Export to CSV\" (click)=\"dt.exportCSV()\" style=\"float:left\"></button>\n                    </div>\n                    <button (click)=\"mypdfconvert(dt)\">clickMePDF</button>\n               \n        </ng-template>\n    <ng-template pTemplate=\"header\" let-columns []>\n        <tr>\n            <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\" pResizableColumn pReorderableColumn>\n                {{col.header}}\n                <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n            </th>\n        </tr>\n        <tr>\n            <th *ngFor=\"let col of cols\" [ngSwitch]=\"col.field\" class=\"ui-fluid\">\n             \n                <input  pInputText type=\"text\" (input)=\"dt.filter($event.target.value, col.field, col.filterMatchMode)\" [value]=\"dt.filters[col.field]?.value\" >\n                      \n               \n            </th>\n        </tr>\n        {{mytabledetails(dt)}}   \n    </ng-template>\n   \n    <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n        <tr [pEditableRow]=\"rowData\">\n            <td>\n                {{rowData.vin}}\n            </td>\n            <td>\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                        <input pInputText type=\"text\" [(ngModel)]=\"rowData.year\" required>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                        {{rowData.year}}\n                    </ng-template>\n                </p-cellEditor>\n            </td>\n            <td class=\"ui-resizable-column\" style=\"overflow: visible\">\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                        <p-dropdown [options]=\"brands\" [(ngModel)]=\"rowData.brand\" [style]=\"{'width':'100%'}\"></p-dropdown>\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                        {{rowData.brand}}<div id=\"{{rowData.brand}}\"></div>\n                    </ng-template>\n                </p-cellEditor>\n            </td>\n            <td>\n                <p-cellEditor>\n                    <ng-template pTemplate=\"input\">\n                        <input pInputText type=\"text\" [(ngModel)]=\"rowData.color\">\n                    </ng-template>\n                    <ng-template pTemplate=\"output\">\n                        {{rowData.color}}\n                    </ng-template>\n                </p-cellEditor>\n            </td>\n            <td style=\"text-align:center\">\n                \n                <button *ngIf=\"!editing\" pButton type=\"button\" pInitEditableRow icon=\"pi pi-pencil\" class=\"ui-button-info\" (click)=\"onRowEditInit(rowData)\"></button>\n                <button *ngIf=\"editing\" pButton type=\"button\" pSaveEditableRow icon=\"pi pi-check\" class=\"ui-button-success\" style=\"margin-right: .5em\" (click)=\"onRowEditSave(rowData)\" pTooltip=\"Edit\" tooltipPosition=\"top\"></button>\n                <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-trash\" class=\"ui-button-danger\" (click)=\"onRowRemove(rowData, ri)\"  pTooltip=\"Delete\" tooltipPosition=\"top\"></button>\n                <button *ngIf=\"editing\" pButton type=\"button\" pCancelEditableRow icon=\"pi pi-times\" class=\"ui-button-danger\" (click)=\"onRowEditCancel(rowData, ri)\" pTooltip=\"Cancel\" tooltipPosition=\"top\"></button>\n               \n                \n            </td>\n        </tr>\n      \n    </ng-template>\n   <!---<ng-template pTemplate=\"footer\">\n            <tr>\n                <td></td>\n                <td >Total :{{sum}}</td>\n                <td></td>\n                <td></td>\n                <td></td>\n            </tr>\n        </ng-template> -->\n        \n</p-table>\n</div>\n\n\n\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/user/user.component.html":
/*!********************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/user/user.component.html ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<p>user works!</p>\n"

/***/ }),

/***/ "./src/app/admin/admin.component.css":
/*!*******************************************!*\
  !*** ./src/app/admin/admin.component.css ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/admin/admin.component.ts":
/*!******************************************!*\
  !*** ./src/app/admin/admin.component.ts ***!
  \******************************************/
/*! exports provided: AdminComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminComponent", function() { return AdminComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var AdminComponent = /** @class */ (function () {
    function AdminComponent() {
    }
    AdminComponent.prototype.ngOnInit = function () {
    };
    AdminComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-admin',
            template: __webpack_require__(/*! raw-loader!./admin.component.html */ "./node_modules/raw-loader/index.js!./src/app/admin/admin.component.html"),
            styles: [__webpack_require__(/*! ./admin.component.css */ "./src/app/admin/admin.component.css")]
        })
    ], AdminComponent);
    return AdminComponent;
}());



/***/ }),

/***/ "./src/app/app-routing.module.ts":
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/*! exports provided: AppRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function() { return AppRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _login_login_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./login/login.component */ "./src/app/login/login.component.ts");
/* harmony import */ var _error_error_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./error/error.component */ "./src/app/error/error.component.ts");
/* harmony import */ var _superadmin_superadmin_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./superadmin/superadmin.component */ "./src/app/superadmin/superadmin.component.ts");
/* harmony import */ var _device_device_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./device/device.component */ "./src/app/device/device.component.ts");
/* harmony import */ var _attendance_attendance_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./attendance/attendance.component */ "./src/app/attendance/attendance.component.ts");
/* harmony import */ var _system_system_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./system/system.component */ "./src/app/system/system.component.ts");
/* harmony import */ var _submenu_deviceareasubmenu_deviceareasubmenu_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./submenu/deviceareasubmenu/deviceareasubmenu.component */ "./src/app/submenu/deviceareasubmenu/deviceareasubmenu.component.ts");
/* harmony import */ var _submenu_devicerealtimesubmenu_devicerealtimesubmenu_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./submenu/devicerealtimesubmenu/devicerealtimesubmenu.component */ "./src/app/submenu/devicerealtimesubmenu/devicerealtimesubmenu.component.ts");
/* harmony import */ var _submenu_addeviceareaubmenu_addeviceareaubmenu_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./submenu/addeviceareaubmenu/addeviceareaubmenu.component */ "./src/app/submenu/addeviceareaubmenu/addeviceareaubmenu.component.ts");
/* harmony import */ var _testing_testing_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./testing/testing.component */ "./src/app/testing/testing.component.ts");
/* harmony import */ var _submenu_addevice_addevice_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./submenu/addevice/addevice.component */ "./src/app/submenu/addevice/addevice.component.ts");
/* harmony import */ var _personnel_department_department_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./personnel/department/department.component */ "./src/app/personnel/department/department.component.ts");
/* harmony import */ var _personnel_position_position_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./personnel/position/position.component */ "./src/app/personnel/position/position.component.ts");
/* harmony import */ var _personnel_issuecard_issuecard_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./personnel/issuecard/issuecard.component */ "./src/app/personnel/issuecard/issuecard.component.ts");
/* harmony import */ var _personnel_biophoto_biophoto_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./personnel/biophoto/biophoto.component */ "./src/app/personnel/biophoto/biophoto.component.ts");
/* harmony import */ var _personnel_documentsetup_documentsetup_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./personnel/documentsetup/documentsetup.component */ "./src/app/personnel/documentsetup/documentsetup.component.ts");
/* harmony import */ var _personnel_personnels_personnels_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./personnel/personnels/personnels.component */ "./src/app/personnel/personnels/personnels.component.ts");
/* harmony import */ var _personnel_addepartment_addepartment_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./personnel/addepartment/addepartment.component */ "./src/app/personnel/addepartment/addepartment.component.ts");
/* harmony import */ var _personnel_deviceedit_deviceedit_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./personnel/deviceedit/deviceedit.component */ "./src/app/personnel/deviceedit/deviceedit.component.ts");
/* harmony import */ var _personnel_addposition_addposition_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./personnel/addposition/addposition.component */ "./src/app/personnel/addposition/addposition.component.ts");
/* harmony import */ var _personnel_addpersonnel_addpersonnel_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./personnel/addpersonnel/addpersonnel.component */ "./src/app/personnel/addpersonnel/addpersonnel.component.ts");
/* harmony import */ var _personnel_addresignation_addresignation_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./personnel/addresignation/addresignation.component */ "./src/app/personnel/addresignation/addresignation.component.ts");
/* harmony import */ var _attendance_rule_rule_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./attendance/rule/rule.component */ "./src/app/attendance/rule/rule.component.ts");
/* harmony import */ var _attendance_global_rule_global_rule_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./attendance/global-rule/global-rule.component */ "./src/app/attendance/global-rule/global-rule.component.ts");
/* harmony import */ var _attendance_rule_list_rule_list_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./attendance/rule-list/rule-list.component */ "./src/app/attendance/rule-list/rule-list.component.ts");
/* harmony import */ var _attendance_timetable_list_timetable_list_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./attendance/timetable-list/timetable-list.component */ "./src/app/attendance/timetable-list/timetable-list.component.ts");
/* harmony import */ var _attendance_add_time_table_add_time_table_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./attendance/add-time-table/add-time-table.component */ "./src/app/attendance/add-time-table/add-time-table.component.ts");
/* harmony import */ var _attendance_break_time_table_list_break_time_table_list_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./attendance/break-time-table-list/break-time-table-list.component */ "./src/app/attendance/break-time-table-list/break-time-table-list.component.ts");
/* harmony import */ var _attendance_add_break_time_table_add_break_time_table_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./attendance/add-break-time-table/add-break-time-table.component */ "./src/app/attendance/add-break-time-table/add-break-time-table.component.ts");
/* harmony import */ var _attendance_shift_list_shift_list_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./attendance/shift-list/shift-list.component */ "./src/app/attendance/shift-list/shift-list.component.ts");
/* harmony import */ var _attendance_add_shift_add_shift_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./attendance/add-shift/add-shift.component */ "./src/app/attendance/add-shift/add-shift.component.ts");
/* harmony import */ var _attendance_add_shedule_add_shedule_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./attendance/add-shedule/add-shedule.component */ "./src/app/attendance/add-shedule/add-shedule.component.ts");
/* harmony import */ var _shopping_list_shopping_edit_shopping_edit_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./shopping-list/shopping-edit/shopping-edit.component */ "./src/app/shopping-list/shopping-edit/shopping-edit.component.ts");
/* harmony import */ var _attendance_transaction_list_transaction_list_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./attendance/transaction-list/transaction-list.component */ "./src/app/attendance/transaction-list/transaction-list.component.ts");
/* harmony import */ var _system_oracle_data_setup_oracle_data_setup_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./system/oracle-data-setup/oracle-data-setup.component */ "./src/app/system/oracle-data-setup/oracle-data-setup.component.ts");
/* harmony import */ var _system_add_new_normal_user_add_new_normal_user_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./system/add-new-normal-user/add-new-normal-user.component */ "./src/app/system/add-new-normal-user/add-new-normal-user.component.ts");
/* harmony import */ var _gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./gurds/auth.guard */ "./src/app/gurds/auth.guard.ts");
/* harmony import */ var _log_out_log_out_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./log-out/log-out.component */ "./src/app/log-out/log-out.component.ts");
/* harmony import */ var _contact_form_contact_form_component__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./contact-form/contact-form.component */ "./src/app/contact-form/contact-form.component.ts");
/* harmony import */ var _personnel_synchronization_synchronization_component__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./personnel/synchronization/synchronization.component */ "./src/app/personnel/synchronization/synchronization.component.ts");











































var routes = [
    { path: '', component: _login_login_component__WEBPACK_IMPORTED_MODULE_3__["LoginComponent"] },
    { path: 'login', component: _login_login_component__WEBPACK_IMPORTED_MODULE_3__["LoginComponent"] },
    { path: 'superadmin', component: _superadmin_superadmin_component__WEBPACK_IMPORTED_MODULE_5__["SuperadminComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'device', component: _device_device_component__WEBPACK_IMPORTED_MODULE_6__["DeviceComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'personnel', component: _superadmin_superadmin_component__WEBPACK_IMPORTED_MODULE_5__["SuperadminComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'attendance', component: _attendance_attendance_component__WEBPACK_IMPORTED_MODULE_7__["AttendanceComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'system', component: _system_system_component__WEBPACK_IMPORTED_MODULE_8__["SystemComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'area', component: _submenu_deviceareasubmenu_deviceareasubmenu_component__WEBPACK_IMPORTED_MODULE_9__["DeviceareasubmenuComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'realtimemonitor', component: _submenu_devicerealtimesubmenu_devicerealtimesubmenu_component__WEBPACK_IMPORTED_MODULE_10__["DevicerealtimesubmenuComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'addeviceareaubmenu', component: _submenu_addeviceareaubmenu_addeviceareaubmenu_component__WEBPACK_IMPORTED_MODULE_11__["AddeviceareaubmenuComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'testing', component: _testing_testing_component__WEBPACK_IMPORTED_MODULE_12__["TestingComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'addevice', component: _submenu_addevice_addevice_component__WEBPACK_IMPORTED_MODULE_13__["AddeviceComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'department', component: _personnel_department_department_component__WEBPACK_IMPORTED_MODULE_14__["DepartmentComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'position', component: _personnel_position_position_component__WEBPACK_IMPORTED_MODULE_15__["PositionComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'issuecard', component: _personnel_issuecard_issuecard_component__WEBPACK_IMPORTED_MODULE_16__["IssuecardComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'biophoto', component: _personnel_biophoto_biophoto_component__WEBPACK_IMPORTED_MODULE_17__["BiophotoComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'documentsetup', component: _personnel_documentsetup_documentsetup_component__WEBPACK_IMPORTED_MODULE_18__["DocumentsetupComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'personnals', component: _personnel_personnels_personnels_component__WEBPACK_IMPORTED_MODULE_19__["PersonnelsComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'addepartment', component: _personnel_addepartment_addepartment_component__WEBPACK_IMPORTED_MODULE_20__["AddepartmentComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'deviceedit', component: _personnel_deviceedit_deviceedit_component__WEBPACK_IMPORTED_MODULE_21__["DeviceeditComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'addposition', component: _personnel_addposition_addposition_component__WEBPACK_IMPORTED_MODULE_22__["AddpositionComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'addpersonnel', component: _personnel_addpersonnel_addpersonnel_component__WEBPACK_IMPORTED_MODULE_23__["AddpersonnelComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'addresignation', component: _personnel_addresignation_addresignation_component__WEBPACK_IMPORTED_MODULE_24__["AddresignationComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'rule', component: _attendance_rule_rule_component__WEBPACK_IMPORTED_MODULE_25__["RuleComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'globalrule', component: _attendance_global_rule_global_rule_component__WEBPACK_IMPORTED_MODULE_26__["GlobalRuleComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'addrule', component: _attendance_rule_rule_component__WEBPACK_IMPORTED_MODULE_25__["RuleComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'rules', component: _attendance_rule_list_rule_list_component__WEBPACK_IMPORTED_MODULE_27__["RuleListComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'timeTableList', component: _attendance_timetable_list_timetable_list_component__WEBPACK_IMPORTED_MODULE_28__["TimetableListComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'addtimeTable', component: _attendance_add_time_table_add_time_table_component__WEBPACK_IMPORTED_MODULE_29__["AddTimeTableComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'breakTimeTableList', component: _attendance_break_time_table_list_break_time_table_list_component__WEBPACK_IMPORTED_MODULE_30__["BreakTimeTableListComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'addbreakTimeTable', component: _attendance_add_break_time_table_add_break_time_table_component__WEBPACK_IMPORTED_MODULE_31__["AddBreakTimeTableComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'shiftlist', component: _attendance_shift_list_shift_list_component__WEBPACK_IMPORTED_MODULE_32__["ShiftListComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'addshif', component: _attendance_add_shift_add_shift_component__WEBPACK_IMPORTED_MODULE_33__["AddShiftComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'addShedule', component: _attendance_add_shedule_add_shedule_component__WEBPACK_IMPORTED_MODULE_34__["AddSheduleComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'shopi', component: _shopping_list_shopping_edit_shopping_edit_component__WEBPACK_IMPORTED_MODULE_35__["ShoppingEditComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'transaction', component: _attendance_transaction_list_transaction_list_component__WEBPACK_IMPORTED_MODULE_36__["TransactionListComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'addNewUser', component: _system_add_new_normal_user_add_new_normal_user_component__WEBPACK_IMPORTED_MODULE_38__["AddNewNormalUserComponent"] },
    { path: 'oracledbSetup', component: _system_oracle_data_setup_oracle_data_setup_component__WEBPACK_IMPORTED_MODULE_37__["OracleDataSetupComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'contact', component: _contact_form_contact_form_component__WEBPACK_IMPORTED_MODULE_41__["ContactFormComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'logout', component: _log_out_log_out_component__WEBPACK_IMPORTED_MODULE_40__["LogOutComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: 'synch', component: _personnel_synchronization_synchronization_component__WEBPACK_IMPORTED_MODULE_42__["SynchronizationComponent"], canActivate: [_gurds_auth_guard__WEBPACK_IMPORTED_MODULE_39__["AuthGuard"]] },
    { path: '**', component: _error_error_component__WEBPACK_IMPORTED_MODULE_4__["ErrorComponent"] },
];
var AppRoutingModule = /** @class */ (function () {
    function AppRoutingModule() {
    }
    AppRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forRoot(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
        })
    ], AppRoutingModule);
    return AppRoutingModule;
}());



/***/ }),

/***/ "./src/app/app.component.css":
/*!***********************************!*\
  !*** ./src/app/app.component.css ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/app.component.ts":
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var AppComponent = /** @class */ (function () {
    function AppComponent() {
        this.name = 'sajeer';
        console.log("app component ts");
    }
    AppComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-root',
            template: __webpack_require__(/*! raw-loader!./app.component.html */ "./node_modules/raw-loader/index.js!./src/app/app.component.html"),
            styles: [__webpack_require__(/*! ./app.component.css */ "./src/app/app.component.css")]
        })
    ], AppComponent);
    return AppComponent;
}());



/***/ }),

/***/ "./src/app/app.module.ts":
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/*! exports provided: AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./app-routing.module */ "./src/app/app-routing.module.ts");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./app.component */ "./src/app/app.component.ts");
/* harmony import */ var _server_server_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./server/server.component */ "./src/app/server/server.component.ts");
/* harmony import */ var _header_header_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./header/header.component */ "./src/app/header/header.component.ts");
/* harmony import */ var _recipes_recipes_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./recipes/recipes.component */ "./src/app/recipes/recipes.component.ts");
/* harmony import */ var _recipes_recipe_list_recipe_list_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./recipes/recipe-list/recipe-list.component */ "./src/app/recipes/recipe-list/recipe-list.component.ts");
/* harmony import */ var _recipes_recipe_details_recipe_details_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./recipes/recipe-details/recipe-details.component */ "./src/app/recipes/recipe-details/recipe-details.component.ts");
/* harmony import */ var _shopping_list_shopping_list_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./shopping-list/shopping-list.component */ "./src/app/shopping-list/shopping-list.component.ts");
/* harmony import */ var _shopping_list_shopping_edit_shopping_edit_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./shopping-list/shopping-edit/shopping-edit.component */ "./src/app/shopping-list/shopping-edit/shopping-edit.component.ts");
/* harmony import */ var _recipes_recipe_list_recipe_item_recipe_item_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./recipes/recipe-list/recipe-item/recipe-item.component */ "./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts");
/* harmony import */ var _login_login_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./login/login.component */ "./src/app/login/login.component.ts");
/* harmony import */ var _error_error_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./error/error.component */ "./src/app/error/error.component.ts");
/* harmony import */ var _user_user_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./user/user.component */ "./src/app/user/user.component.ts");
/* harmony import */ var _admin_admin_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./admin/admin.component */ "./src/app/admin/admin.component.ts");
/* harmony import */ var _superadmin_superadmin_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./superadmin/superadmin.component */ "./src/app/superadmin/superadmin.component.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _footer_footer_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./footer/footer.component */ "./src/app/footer/footer.component.ts");
/* harmony import */ var _device_device_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./device/device.component */ "./src/app/device/device.component.ts");
/* harmony import */ var _attendance_attendance_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./attendance/attendance.component */ "./src/app/attendance/attendance.component.ts");
/* harmony import */ var _system_system_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./system/system.component */ "./src/app/system/system.component.ts");
/* harmony import */ var _submenu_devicesubmenu_devicesubmenu_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./submenu/devicesubmenu/devicesubmenu.component */ "./src/app/submenu/devicesubmenu/devicesubmenu.component.ts");
/* harmony import */ var _submenu_attendancesubmenu_attendancesubmenu_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./submenu/attendancesubmenu/attendancesubmenu.component */ "./src/app/submenu/attendancesubmenu/attendancesubmenu.component.ts");
/* harmony import */ var _submenu_systemsubmenu_systemsubmenu_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./submenu/systemsubmenu/systemsubmenu.component */ "./src/app/submenu/systemsubmenu/systemsubmenu.component.ts");
/* harmony import */ var _submenu_deviceareasubmenu_deviceareasubmenu_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./submenu/deviceareasubmenu/deviceareasubmenu.component */ "./src/app/submenu/deviceareasubmenu/deviceareasubmenu.component.ts");
/* harmony import */ var _submenu_devicerealtimesubmenu_devicerealtimesubmenu_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./submenu/devicerealtimesubmenu/devicerealtimesubmenu.component */ "./src/app/submenu/devicerealtimesubmenu/devicerealtimesubmenu.component.ts");
/* harmony import */ var _submenu_addeviceareaubmenu_addeviceareaubmenu_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./submenu/addeviceareaubmenu/addeviceareaubmenu.component */ "./src/app/submenu/addeviceareaubmenu/addeviceareaubmenu.component.ts");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/fesm5/animations.js");
/* harmony import */ var _testing_testing_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./testing/testing.component */ "./src/app/testing/testing.component.ts");
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @angular/material/button */ "./node_modules/@angular/material/esm5/button.es5.js");
/* harmony import */ var _angular_material_input__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @angular/material/input */ "./node_modules/@angular/material/esm5/input.es5.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var _angular_material_radio__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @angular/material/radio */ "./node_modules/@angular/material/esm5/radio.es5.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _angular_material_expansion__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @angular/material/expansion */ "./node_modules/@angular/material/esm5/expansion.es5.js");
/* harmony import */ var ag_grid_angular__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ag-grid-angular */ "./node_modules/ag-grid-angular/main.js");
/* harmony import */ var ag_grid_angular__WEBPACK_IMPORTED_MODULE_38___default = /*#__PURE__*/__webpack_require__.n(ag_grid_angular__WEBPACK_IMPORTED_MODULE_38__);
/* harmony import */ var primeng_button__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! primeng/button */ "./node_modules/primeng/button.js");
/* harmony import */ var primeng_button__WEBPACK_IMPORTED_MODULE_39___default = /*#__PURE__*/__webpack_require__.n(primeng_button__WEBPACK_IMPORTED_MODULE_39__);
/* harmony import */ var primeng_table__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! primeng/table */ "./node_modules/primeng/table.js");
/* harmony import */ var primeng_table__WEBPACK_IMPORTED_MODULE_40___default = /*#__PURE__*/__webpack_require__.n(primeng_table__WEBPACK_IMPORTED_MODULE_40__);
/* harmony import */ var primeng_splitbutton__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! primeng/splitbutton */ "./node_modules/primeng/splitbutton.js");
/* harmony import */ var primeng_splitbutton__WEBPACK_IMPORTED_MODULE_41___default = /*#__PURE__*/__webpack_require__.n(primeng_splitbutton__WEBPACK_IMPORTED_MODULE_41__);
/* harmony import */ var primeng_messages__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! primeng/messages */ "./node_modules/primeng/messages.js");
/* harmony import */ var primeng_messages__WEBPACK_IMPORTED_MODULE_42___default = /*#__PURE__*/__webpack_require__.n(primeng_messages__WEBPACK_IMPORTED_MODULE_42__);
/* harmony import */ var primeng_message__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! primeng/message */ "./node_modules/primeng/message.js");
/* harmony import */ var primeng_message__WEBPACK_IMPORTED_MODULE_43___default = /*#__PURE__*/__webpack_require__.n(primeng_message__WEBPACK_IMPORTED_MODULE_43__);
/* harmony import */ var primeng_toast__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! primeng/toast */ "./node_modules/primeng/toast.js");
/* harmony import */ var primeng_toast__WEBPACK_IMPORTED_MODULE_44___default = /*#__PURE__*/__webpack_require__.n(primeng_toast__WEBPACK_IMPORTED_MODULE_44__);
/* harmony import */ var primeng_dropdown__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! primeng/dropdown */ "./node_modules/primeng/dropdown.js");
/* harmony import */ var primeng_dropdown__WEBPACK_IMPORTED_MODULE_45___default = /*#__PURE__*/__webpack_require__.n(primeng_dropdown__WEBPACK_IMPORTED_MODULE_45__);
/* harmony import */ var primeng_inputtext__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! primeng/inputtext */ "./node_modules/primeng/inputtext.js");
/* harmony import */ var primeng_inputtext__WEBPACK_IMPORTED_MODULE_46___default = /*#__PURE__*/__webpack_require__.n(primeng_inputtext__WEBPACK_IMPORTED_MODULE_46__);
/* harmony import */ var primeng_tooltip__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! primeng/tooltip */ "./node_modules/primeng/tooltip.js");
/* harmony import */ var primeng_tooltip__WEBPACK_IMPORTED_MODULE_47___default = /*#__PURE__*/__webpack_require__.n(primeng_tooltip__WEBPACK_IMPORTED_MODULE_47__);
/* harmony import */ var primeng_confirmdialog__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! primeng/confirmdialog */ "./node_modules/primeng/confirmdialog.js");
/* harmony import */ var primeng_confirmdialog__WEBPACK_IMPORTED_MODULE_48___default = /*#__PURE__*/__webpack_require__.n(primeng_confirmdialog__WEBPACK_IMPORTED_MODULE_48__);
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! primeng/api */ "./node_modules/primeng/api.js");
/* harmony import */ var primeng_api__WEBPACK_IMPORTED_MODULE_49___default = /*#__PURE__*/__webpack_require__.n(primeng_api__WEBPACK_IMPORTED_MODULE_49__);
/* harmony import */ var primeng_dialog__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! primeng/dialog */ "./node_modules/primeng/dialog.js");
/* harmony import */ var primeng_dialog__WEBPACK_IMPORTED_MODULE_50___default = /*#__PURE__*/__webpack_require__.n(primeng_dialog__WEBPACK_IMPORTED_MODULE_50__);
/* harmony import */ var _submenu_addevice_addevice_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./submenu/addevice/addevice.component */ "./src/app/submenu/addevice/addevice.component.ts");
/* harmony import */ var _submenu_personnelsubmenu_personnelsubmenu_component__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./submenu/personnelsubmenu/personnelsubmenu.component */ "./src/app/submenu/personnelsubmenu/personnelsubmenu.component.ts");
/* harmony import */ var _personnel_department_department_component__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./personnel/department/department.component */ "./src/app/personnel/department/department.component.ts");
/* harmony import */ var _personnel_position_position_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./personnel/position/position.component */ "./src/app/personnel/position/position.component.ts");
/* harmony import */ var _personnel_issuecard_issuecard_component__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./personnel/issuecard/issuecard.component */ "./src/app/personnel/issuecard/issuecard.component.ts");
/* harmony import */ var _personnel_biophoto_biophoto_component__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./personnel/biophoto/biophoto.component */ "./src/app/personnel/biophoto/biophoto.component.ts");
/* harmony import */ var _personnel_documentsetup_documentsetup_component__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./personnel/documentsetup/documentsetup.component */ "./src/app/personnel/documentsetup/documentsetup.component.ts");
/* harmony import */ var _personnel_personnels_personnels_component__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./personnel/personnels/personnels.component */ "./src/app/personnel/personnels/personnels.component.ts");
/* harmony import */ var primeng_chart__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! primeng/chart */ "./node_modules/primeng/chart.js");
/* harmony import */ var primeng_chart__WEBPACK_IMPORTED_MODULE_59___default = /*#__PURE__*/__webpack_require__.n(primeng_chart__WEBPACK_IMPORTED_MODULE_59__);
/* harmony import */ var _personnel_setdepartment_setdepartment_component__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./personnel/setdepartment/setdepartment.component */ "./src/app/personnel/setdepartment/setdepartment.component.ts");
/* harmony import */ var _personnel_addepartment_addepartment_component__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./personnel/addepartment/addepartment.component */ "./src/app/personnel/addepartment/addepartment.component.ts");
/* harmony import */ var _personnel_deviceedit_deviceedit_component__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./personnel/deviceedit/deviceedit.component */ "./src/app/personnel/deviceedit/deviceedit.component.ts");
/* harmony import */ var _personnel_addposition_addposition_component__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./personnel/addposition/addposition.component */ "./src/app/personnel/addposition/addposition.component.ts");
/* harmony import */ var _personnel_addpersonnel_addpersonnel_component__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./personnel/addpersonnel/addpersonnel.component */ "./src/app/personnel/addpersonnel/addpersonnel.component.ts");
/* harmony import */ var _personnel_addresignation_addresignation_component__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./personnel/addresignation/addresignation.component */ "./src/app/personnel/addresignation/addresignation.component.ts");
/* harmony import */ var _attendance_rule_rule_component__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./attendance/rule/rule.component */ "./src/app/attendance/rule/rule.component.ts");
/* harmony import */ var _attendance_global_rule_global_rule_component__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./attendance/global-rule/global-rule.component */ "./src/app/attendance/global-rule/global-rule.component.ts");
/* harmony import */ var _attendance_rule_list_rule_list_component__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./attendance/rule-list/rule-list.component */ "./src/app/attendance/rule-list/rule-list.component.ts");
/* harmony import */ var _attendance_timetable_list_timetable_list_component__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./attendance/timetable-list/timetable-list.component */ "./src/app/attendance/timetable-list/timetable-list.component.ts");
/* harmony import */ var _attendance_add_time_table_add_time_table_component__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./attendance/add-time-table/add-time-table.component */ "./src/app/attendance/add-time-table/add-time-table.component.ts");
/* harmony import */ var _attendance_break_time_table_list_break_time_table_list_component__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./attendance/break-time-table-list/break-time-table-list.component */ "./src/app/attendance/break-time-table-list/break-time-table-list.component.ts");
/* harmony import */ var _attendance_add_break_time_table_add_break_time_table_component__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./attendance/add-break-time-table/add-break-time-table.component */ "./src/app/attendance/add-break-time-table/add-break-time-table.component.ts");
/* harmony import */ var _attendance_shift_list_shift_list_component__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./attendance/shift-list/shift-list.component */ "./src/app/attendance/shift-list/shift-list.component.ts");
/* harmony import */ var _attendance_add_shift_add_shift_component__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./attendance/add-shift/add-shift.component */ "./src/app/attendance/add-shift/add-shift.component.ts");
/* harmony import */ var _attendance_shedule_list_shedule_list_component__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./attendance/shedule-list/shedule-list.component */ "./src/app/attendance/shedule-list/shedule-list.component.ts");
/* harmony import */ var _attendance_add_shedule_add_shedule_component__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./attendance/add-shedule/add-shedule.component */ "./src/app/attendance/add-shedule/add-shedule.component.ts");
/* harmony import */ var _attendance_transaction_list_transaction_list_component__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./attendance/transaction-list/transaction-list.component */ "./src/app/attendance/transaction-list/transaction-list.component.ts");
/* harmony import */ var _system_oracle_data_setup_oracle_data_setup_component__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./system/oracle-data-setup/oracle-data-setup.component */ "./src/app/system/oracle-data-setup/oracle-data-setup.component.ts");
/* harmony import */ var _system_add_new_normal_user_add_new_normal_user_component__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./system/add-new-normal-user/add-new-normal-user.component */ "./src/app/system/add-new-normal-user/add-new-normal-user.component.ts");
/* harmony import */ var _gurds_auth_guard__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./gurds/auth.guard */ "./src/app/gurds/auth.guard.ts");
/* harmony import */ var _token_interceptor_service__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./token-interceptor.service */ "./src/app/token-interceptor.service.ts");
/* harmony import */ var _log_out_log_out_component__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./log-out/log-out.component */ "./src/app/log-out/log-out.component.ts");
/* harmony import */ var _contact_form_contact_form_component__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./contact-form/contact-form.component */ "./src/app/contact-form/contact-form.component.ts");
/* harmony import */ var _personnel_synchronization_synchronization_component__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./personnel/synchronization/synchronization.component */ "./src/app/personnel/synchronization/synchronization.component.ts");





















































































var AppModule = /** @class */ (function () {
    function AppModule() {
    }
    AppModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
            declarations: [
                _app_component__WEBPACK_IMPORTED_MODULE_5__["AppComponent"],
                _server_server_component__WEBPACK_IMPORTED_MODULE_6__["ServerComponent"],
                _header_header_component__WEBPACK_IMPORTED_MODULE_7__["HeaderComponent"],
                _recipes_recipes_component__WEBPACK_IMPORTED_MODULE_8__["RecipesComponent"],
                _recipes_recipe_list_recipe_list_component__WEBPACK_IMPORTED_MODULE_9__["RecipeListComponent"],
                _recipes_recipe_details_recipe_details_component__WEBPACK_IMPORTED_MODULE_10__["RecipeDetailsComponent"],
                _shopping_list_shopping_list_component__WEBPACK_IMPORTED_MODULE_11__["ShoppingListComponent"],
                _shopping_list_shopping_edit_shopping_edit_component__WEBPACK_IMPORTED_MODULE_12__["ShoppingEditComponent"],
                _recipes_recipe_list_recipe_item_recipe_item_component__WEBPACK_IMPORTED_MODULE_13__["RecipeItemComponent"],
                _login_login_component__WEBPACK_IMPORTED_MODULE_14__["LoginComponent"],
                _error_error_component__WEBPACK_IMPORTED_MODULE_15__["ErrorComponent"],
                _user_user_component__WEBPACK_IMPORTED_MODULE_16__["UserComponent"],
                _admin_admin_component__WEBPACK_IMPORTED_MODULE_17__["AdminComponent"],
                _superadmin_superadmin_component__WEBPACK_IMPORTED_MODULE_18__["SuperadminComponent"],
                _footer_footer_component__WEBPACK_IMPORTED_MODULE_20__["FooterComponent"],
                _device_device_component__WEBPACK_IMPORTED_MODULE_21__["DeviceComponent"],
                _attendance_attendance_component__WEBPACK_IMPORTED_MODULE_22__["AttendanceComponent"],
                _system_system_component__WEBPACK_IMPORTED_MODULE_23__["SystemComponent"],
                _submenu_devicesubmenu_devicesubmenu_component__WEBPACK_IMPORTED_MODULE_24__["DevicesubmenuComponent"],
                _submenu_attendancesubmenu_attendancesubmenu_component__WEBPACK_IMPORTED_MODULE_25__["AttendancesubmenuComponent"],
                _submenu_systemsubmenu_systemsubmenu_component__WEBPACK_IMPORTED_MODULE_26__["SystemsubmenuComponent"],
                _submenu_deviceareasubmenu_deviceareasubmenu_component__WEBPACK_IMPORTED_MODULE_27__["DeviceareasubmenuComponent"],
                _submenu_devicerealtimesubmenu_devicerealtimesubmenu_component__WEBPACK_IMPORTED_MODULE_28__["DevicerealtimesubmenuComponent"],
                _submenu_addeviceareaubmenu_addeviceareaubmenu_component__WEBPACK_IMPORTED_MODULE_29__["AddeviceareaubmenuComponent"],
                _testing_testing_component__WEBPACK_IMPORTED_MODULE_31__["TestingComponent"],
                _submenu_addevice_addevice_component__WEBPACK_IMPORTED_MODULE_51__["AddeviceComponent"],
                _submenu_personnelsubmenu_personnelsubmenu_component__WEBPACK_IMPORTED_MODULE_52__["PersonnelsubmenuComponent"],
                _personnel_department_department_component__WEBPACK_IMPORTED_MODULE_53__["DepartmentComponent"],
                _personnel_position_position_component__WEBPACK_IMPORTED_MODULE_54__["PositionComponent"],
                _personnel_issuecard_issuecard_component__WEBPACK_IMPORTED_MODULE_55__["IssuecardComponent"],
                _personnel_biophoto_biophoto_component__WEBPACK_IMPORTED_MODULE_56__["BiophotoComponent"],
                _personnel_documentsetup_documentsetup_component__WEBPACK_IMPORTED_MODULE_57__["DocumentsetupComponent"],
                _personnel_personnels_personnels_component__WEBPACK_IMPORTED_MODULE_58__["PersonnelsComponent"],
                _personnel_setdepartment_setdepartment_component__WEBPACK_IMPORTED_MODULE_60__["SetdepartmentComponent"],
                _personnel_addepartment_addepartment_component__WEBPACK_IMPORTED_MODULE_61__["AddepartmentComponent"],
                _personnel_deviceedit_deviceedit_component__WEBPACK_IMPORTED_MODULE_62__["DeviceeditComponent"],
                _personnel_addposition_addposition_component__WEBPACK_IMPORTED_MODULE_63__["AddpositionComponent"],
                _personnel_addpersonnel_addpersonnel_component__WEBPACK_IMPORTED_MODULE_64__["AddpersonnelComponent"],
                _personnel_addresignation_addresignation_component__WEBPACK_IMPORTED_MODULE_65__["AddresignationComponent"],
                _attendance_rule_rule_component__WEBPACK_IMPORTED_MODULE_66__["RuleComponent"],
                _attendance_global_rule_global_rule_component__WEBPACK_IMPORTED_MODULE_67__["GlobalRuleComponent"],
                _attendance_rule_list_rule_list_component__WEBPACK_IMPORTED_MODULE_68__["RuleListComponent"],
                _attendance_timetable_list_timetable_list_component__WEBPACK_IMPORTED_MODULE_69__["TimetableListComponent"],
                _attendance_add_time_table_add_time_table_component__WEBPACK_IMPORTED_MODULE_70__["AddTimeTableComponent"],
                _attendance_break_time_table_list_break_time_table_list_component__WEBPACK_IMPORTED_MODULE_71__["BreakTimeTableListComponent"],
                _attendance_add_break_time_table_add_break_time_table_component__WEBPACK_IMPORTED_MODULE_72__["AddBreakTimeTableComponent"],
                _attendance_shift_list_shift_list_component__WEBPACK_IMPORTED_MODULE_73__["ShiftListComponent"],
                _attendance_add_shift_add_shift_component__WEBPACK_IMPORTED_MODULE_74__["AddShiftComponent"],
                _attendance_shedule_list_shedule_list_component__WEBPACK_IMPORTED_MODULE_75__["SheduleListComponent"],
                _attendance_add_shedule_add_shedule_component__WEBPACK_IMPORTED_MODULE_76__["AddSheduleComponent"],
                _attendance_transaction_list_transaction_list_component__WEBPACK_IMPORTED_MODULE_77__["TransactionListComponent"],
                _system_oracle_data_setup_oracle_data_setup_component__WEBPACK_IMPORTED_MODULE_78__["OracleDataSetupComponent"],
                _system_add_new_normal_user_add_new_normal_user_component__WEBPACK_IMPORTED_MODULE_79__["AddNewNormalUserComponent"],
                _log_out_log_out_component__WEBPACK_IMPORTED_MODULE_82__["LogOutComponent"],
                _contact_form_contact_form_component__WEBPACK_IMPORTED_MODULE_83__["ContactFormComponent"],
                _personnel_synchronization_synchronization_component__WEBPACK_IMPORTED_MODULE_84__["SynchronizationComponent"],
            ],
            imports: [
                _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
                _app_routing_module__WEBPACK_IMPORTED_MODULE_4__["AppRoutingModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
                _angular_common_http__WEBPACK_IMPORTED_MODULE_19__["HttpClientModule"],
                _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_30__["BrowserAnimationsModule"],
                _angular_material_button__WEBPACK_IMPORTED_MODULE_32__["MatButtonModule"],
                _angular_material_input__WEBPACK_IMPORTED_MODULE_33__["MatInputModule"],
                _angular_material_tree__WEBPACK_IMPORTED_MODULE_34__["MatTreeModule"],
                _angular_material_radio__WEBPACK_IMPORTED_MODULE_35__["MatRadioModule"],
                _angular_material_dialog__WEBPACK_IMPORTED_MODULE_36__["MatDialogModule"],
                _angular_material_expansion__WEBPACK_IMPORTED_MODULE_37__["MatExpansionModule"],
                ag_grid_angular__WEBPACK_IMPORTED_MODULE_38__["AgGridModule"].withComponents([]),
                primeng_button__WEBPACK_IMPORTED_MODULE_39__["ButtonModule"],
                primeng_table__WEBPACK_IMPORTED_MODULE_40__["TableModule"],
                primeng_splitbutton__WEBPACK_IMPORTED_MODULE_41__["SplitButtonModule"],
                primeng_messages__WEBPACK_IMPORTED_MODULE_42__["MessagesModule"],
                primeng_message__WEBPACK_IMPORTED_MODULE_43__["MessageModule"],
                primeng_toast__WEBPACK_IMPORTED_MODULE_44__["ToastModule"],
                primeng_dropdown__WEBPACK_IMPORTED_MODULE_45__["DropdownModule"],
                primeng_inputtext__WEBPACK_IMPORTED_MODULE_46__["InputTextModule"],
                primeng_tooltip__WEBPACK_IMPORTED_MODULE_47__["TooltipModule"],
                primeng_confirmdialog__WEBPACK_IMPORTED_MODULE_48__["ConfirmDialogModule"],
                primeng_dialog__WEBPACK_IMPORTED_MODULE_50__["DialogModule"],
                primeng_chart__WEBPACK_IMPORTED_MODULE_59__["ChartModule"]
            ],
            providers: [primeng_api__WEBPACK_IMPORTED_MODULE_49__["ConfirmationService"], _gurds_auth_guard__WEBPACK_IMPORTED_MODULE_80__["AuthGuard"],
                {
                    provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_19__["HTTP_INTERCEPTORS"],
                    useClass: _token_interceptor_service__WEBPACK_IMPORTED_MODULE_81__["TokenInterceptorService"],
                    multi: true
                }],
            bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_5__["AppComponent"]]
        })
    ], AppModule);
    return AppModule;
}());



/***/ }),

/***/ "./src/app/attendance/Model/AddSheduleModel.ts":
/*!*****************************************************!*\
  !*** ./src/app/attendance/Model/AddSheduleModel.ts ***!
  \*****************************************************/
/*! exports provided: addSheduleModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addSheduleModel", function() { return addSheduleModel; });
var addSheduleModel = /** @class */ (function () {
    function addSheduleModel(start_Date, end_Date, shift_schedule_shift_No, employInfo_schedule_employ_SN, remove_Overlap_Schedule) {
        this.start_Date = start_Date;
        this.end_Date = end_Date;
        this.shift_schedule_shift_No = shift_schedule_shift_No;
        this.employInfo_schedule_employ_SN = employInfo_schedule_employ_SN;
        this.remove_Overlap_Schedule = remove_Overlap_Schedule;
    }
    addSheduleModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: Boolean }
    ]; };
    return addSheduleModel;
}());



/***/ }),

/***/ "./src/app/attendance/Model/ShiftModel.ts":
/*!************************************************!*\
  !*** ./src/app/attendance/Model/ShiftModel.ts ***!
  \************************************************/
/*! exports provided: addNewShiftModel, DeleteShiftModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addNewShiftModel", function() { return addNewShiftModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeleteShiftModel", function() { return DeleteShiftModel; });
var addNewShiftModel = /** @class */ (function () {
    function addNewShiftModel(shift_name, no_Of_Cycle, unit_Of_Cycle, auto_Shift, count_Day_Off_As, count_Weekend_As, shift_Timetable_Selection) {
        this.shift_name = shift_name;
        this.no_Of_Cycle = no_Of_Cycle;
        this.unit_Of_Cycle = unit_Of_Cycle;
        this.auto_Shift = auto_Shift;
        this.count_Day_Off_As = count_Day_Off_As;
        this.count_Weekend_As = count_Weekend_As;
        this.shift_Timetable_Selection = shift_Timetable_Selection;
    }
    addNewShiftModel.ctorParameters = function () { return [
        { type: String },
        { type: Number },
        { type: Number },
        { type: Boolean },
        { type: Number },
        { type: Number },
        { type: Object }
    ]; };
    return addNewShiftModel;
}());

var DeleteShiftModel = /** @class */ (function () {
    function DeleteShiftModel(shift_name) {
        this.shift_name = shift_name;
    }
    DeleteShiftModel.ctorParameters = function () { return [
        { type: String }
    ]; };
    return DeleteShiftModel;
}());



/***/ }),

/***/ "./src/app/attendance/Model/TimeTableModels.ts":
/*!*****************************************************!*\
  !*** ./src/app/attendance/Model/TimeTableModels.ts ***!
  \*****************************************************/
/*! exports provided: GetTimeTableListModel, DeleteTimeTable, GetBreakTimetableModel, EditBreakTimetableModel, DeleteBreakTimetableModel, addNewTimetableModel, editTimetableModel, getSheduleModel, getShiftModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetTimeTableListModel", function() { return GetTimeTableListModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeleteTimeTable", function() { return DeleteTimeTable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetBreakTimetableModel", function() { return GetBreakTimetableModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditBreakTimetableModel", function() { return EditBreakTimetableModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeleteBreakTimetableModel", function() { return DeleteBreakTimetableModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addNewTimetableModel", function() { return addNewTimetableModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "editTimetableModel", function() { return editTimetableModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSheduleModel", function() { return getSheduleModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getShiftModel", function() { return getShiftModel; });
var GetTimeTableListModel = /** @class */ (function () {
    function GetTimeTableListModel(timetable_Name, check_In, check_Out, workday, multiple_In_Out, base_On_Punch_Type, necessary_Check_In, necessary_Check_OUT, auto_OT_Check_In_Early, auto_OT_Check_Out_Delay, break_Time, check_In_End_Time, check_In_Start_Time, check_Out_End_Time, check_Out_Start_Time, primary_id, type) {
        this.timetable_Name = timetable_Name;
        this.check_In = check_In;
        this.check_Out = check_Out;
        this.workday = workday;
        this.multiple_In_Out = multiple_In_Out;
        this.base_On_Punch_Type = base_On_Punch_Type;
        this.necessary_Check_In = necessary_Check_In;
        this.necessary_Check_OUT = necessary_Check_OUT;
        this.auto_OT_Check_In_Early = auto_OT_Check_In_Early;
        this.auto_OT_Check_Out_Delay = auto_OT_Check_Out_Delay;
        this.break_Time = break_Time;
        this.check_In_End_Time = check_In_End_Time;
        this.check_In_Start_Time = check_In_Start_Time;
        this.check_Out_End_Time = check_Out_End_Time;
        this.check_Out_Start_Time = check_Out_Start_Time;
        this.primary_id = primary_id;
        this.type = type;
    }
    GetTimeTableListModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: Boolean },
        { type: Boolean },
        { type: Boolean },
        { type: Boolean },
        { type: Boolean },
        { type: Boolean },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: Number },
        { type: String }
    ]; };
    return GetTimeTableListModel;
}());

var DeleteTimeTable = /** @class */ (function () {
    function DeleteTimeTable(timetable_Name) {
        this.timetable_Name = timetable_Name;
    }
    DeleteTimeTable.ctorParameters = function () { return [
        { type: String }
    ]; };
    return DeleteTimeTable;
}());

var GetBreakTimetableModel = /** @class */ (function () {
    function GetBreakTimetableModel(break_time_table_Name, end_Time, start_Time, break_Time, base_On_Punch_Type) {
        this.break_time_table_Name = break_time_table_Name;
        this.end_Time = end_Time;
        this.start_Time = start_Time;
        this.break_Time = break_Time;
        this.base_On_Punch_Type = base_On_Punch_Type;
    }
    GetBreakTimetableModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: Boolean }
    ]; };
    return GetBreakTimetableModel;
}());

var EditBreakTimetableModel = /** @class */ (function () {
    function EditBreakTimetableModel(break_time_table_Name, break_time_table_Name_old, end_Time, start_Time, break_Time, base_On_Punch_Type) {
        this.break_time_table_Name = break_time_table_Name;
        this.break_time_table_Name_old = break_time_table_Name_old;
        this.end_Time = end_Time;
        this.start_Time = start_Time;
        this.break_Time = break_Time;
        this.base_On_Punch_Type = base_On_Punch_Type;
    }
    EditBreakTimetableModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: Boolean }
    ]; };
    return EditBreakTimetableModel;
}());

var DeleteBreakTimetableModel = /** @class */ (function () {
    function DeleteBreakTimetableModel(break_time_table_Name) {
        this.break_time_table_Name = break_time_table_Name;
    }
    DeleteBreakTimetableModel.ctorParameters = function () { return [
        { type: String }
    ]; };
    return DeleteBreakTimetableModel;
}());

var addNewTimetableModel = /** @class */ (function () {
    function addNewTimetableModel(timetable_Name, check_In, check_Out, workday, multiple_In_Out, base_On_Punch_Type, necessary_Check_In, necessary_Check_OUT, auto_OT_Check_In_Early, auto_OT_Check_Out_Delay, check_In_Start_Time, check_In_End_Time, check_Out_Start_Time, check_Out_End_Time, type, break_Time) {
        this.timetable_Name = timetable_Name;
        this.check_In = check_In;
        this.check_Out = check_Out;
        this.workday = workday;
        this.multiple_In_Out = multiple_In_Out;
        this.base_On_Punch_Type = base_On_Punch_Type;
        this.necessary_Check_In = necessary_Check_In;
        this.necessary_Check_OUT = necessary_Check_OUT;
        this.auto_OT_Check_In_Early = auto_OT_Check_In_Early;
        this.auto_OT_Check_Out_Delay = auto_OT_Check_Out_Delay;
        this.check_In_Start_Time = check_In_Start_Time;
        this.check_In_End_Time = check_In_End_Time;
        this.check_Out_Start_Time = check_Out_Start_Time;
        this.check_Out_End_Time = check_Out_End_Time;
        this.type = type;
        this.break_Time = break_Time;
    }
    addNewTimetableModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: Boolean },
        { type: Boolean },
        { type: Boolean },
        { type: Boolean },
        { type: Boolean },
        { type: Boolean },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return addNewTimetableModel;
}());

var editTimetableModel = /** @class */ (function () {
    function editTimetableModel(timetable_Name, timetable_Name_old, check_In, check_Out, workday, multiple_In_Out, base_On_Punch_Type, necessary_Check_In, necessary_Check_OUT, auto_OT_Check_In_Early, auto_OT_Check_Out_Delay, check_In_Start_Time, check_In_End_Time, check_Out_Start_Time, check_Out_End_Time, type, break_Time) {
        this.timetable_Name = timetable_Name;
        this.timetable_Name_old = timetable_Name_old;
        this.check_In = check_In;
        this.check_Out = check_Out;
        this.workday = workday;
        this.multiple_In_Out = multiple_In_Out;
        this.base_On_Punch_Type = base_On_Punch_Type;
        this.necessary_Check_In = necessary_Check_In;
        this.necessary_Check_OUT = necessary_Check_OUT;
        this.auto_OT_Check_In_Early = auto_OT_Check_In_Early;
        this.auto_OT_Check_Out_Delay = auto_OT_Check_Out_Delay;
        this.check_In_Start_Time = check_In_Start_Time;
        this.check_In_End_Time = check_In_End_Time;
        this.check_Out_Start_Time = check_Out_Start_Time;
        this.check_Out_End_Time = check_Out_End_Time;
        this.type = type;
        this.break_Time = break_Time;
    }
    editTimetableModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: Boolean },
        { type: Boolean },
        { type: Boolean },
        { type: Boolean },
        { type: Boolean },
        { type: Boolean },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return editTimetableModel;
}());

var getSheduleModel = /** @class */ (function () {
    function getSheduleModel(schedule_No, start_Date, end_Date, shift_schedule_shift_No, shift_schedule_shift_name, employInfo_schedule_employ_SN, employInfo_schedule_user_name, employInfo_schedule_First_name, employInfo_schedule_department) {
        this.schedule_No = schedule_No;
        this.start_Date = start_Date;
        this.end_Date = end_Date;
        this.shift_schedule_shift_No = shift_schedule_shift_No;
        this.shift_schedule_shift_name = shift_schedule_shift_name;
        this.employInfo_schedule_employ_SN = employInfo_schedule_employ_SN;
        this.employInfo_schedule_user_name = employInfo_schedule_user_name;
        this.employInfo_schedule_First_name = employInfo_schedule_First_name;
        this.employInfo_schedule_department = employInfo_schedule_department;
    }
    getSheduleModel.ctorParameters = function () { return [
        { type: Number },
        { type: String },
        { type: String },
        { type: Number },
        { type: String },
        { type: Number },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return getSheduleModel;
}());

var getShiftModel = /** @class */ (function () {
    function getShiftModel(shift_name, no_Of_Cycle, unit_Of_Cycle, auto_Shift, count_Day_Off_As, count_Weekend_As, shift_Timetable_Selection) {
        this.shift_name = shift_name;
        this.no_Of_Cycle = no_Of_Cycle;
        this.unit_Of_Cycle = unit_Of_Cycle;
        this.auto_Shift = auto_Shift;
        this.count_Day_Off_As = count_Day_Off_As;
        this.count_Weekend_As = count_Weekend_As;
        this.shift_Timetable_Selection = shift_Timetable_Selection;
    }
    getShiftModel.ctorParameters = function () { return [
        { type: String },
        { type: Number },
        { type: String },
        { type: Boolean },
        { type: String },
        { type: String },
        { type: Array }
    ]; };
    return getShiftModel;
}());



/***/ }),

/***/ "./src/app/attendance/add-break-time-table/add-break-time-table.component.css":
/*!************************************************************************************!*\
  !*** ./src/app/attendance/add-break-time-table/add-break-time-table.component.css ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0dGVuZGFuY2UvYWRkLWJyZWFrLXRpbWUtdGFibGUvYWRkLWJyZWFrLXRpbWUtdGFibGUuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/attendance/add-break-time-table/add-break-time-table.component.ts":
/*!***********************************************************************************!*\
  !*** ./src/app/attendance/add-break-time-table/add-break-time-table.component.ts ***!
  \***********************************************************************************/
/*! exports provided: TodoItemNode, TodoItemFlatNode, ChecklistDatabase, AddBreakTimeTableComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddBreakTimeTableComponent", function() { return AddBreakTimeTableComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/service/personnel/personnel.service */ "./src/app/service/personnel/personnel.service.ts");
/* harmony import */ var src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/service/attendance/attendance-service.service */ "./src/app/service/attendance/attendance-service.service.ts");
/* harmony import */ var _Model_TimeTableModels__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../Model/TimeTableModels */ "./src/app/attendance/Model/TimeTableModels.ts");











;




var jsPDF = __webpack_require__(/*! jspdf */ "./node_modules/jspdf/dist/jspdf.min.js");
__webpack_require__(/*! jspdf-autotable */ "./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js");
var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service, personnel_service, attendanceService) {
        //this.getallParentPositionFromServer();
        this.service = service;
        this.personnel_service = personnel_service;
        this.attendanceService = attendanceService;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_9__["BehaviorSubject"]([]);
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallParentDeparmentDetails = function () {
        var _this = this;
        //console.log("getallAreasFromServer")
        // console.log("getall Parent Department :addpersonnel")
        this.personnel_service.getAllParentDepartmentDetailsBegining().subscribe(function (response) { return _this.succsess_getALLParentDepartment(response); }, function (error) { return _this.error__getALLParentDepartment(error); });
    };
    ChecklistDatabase.prototype.succsess_getALLParentDepartment = function (response) {
        /* console.log("succsess_getALLParentDepartment addPersonel");
         console.log("TREE DATA-------------");
         console.log(TREE_DATA);
         console.log("response--------------");
         console.log(response);*/
        TREE_DATA = response;
        /* console.log("responses----------------Changed to TREE_DATA");
         console.log(TREE_DATA);*/
        this.initialize();
    };
    ChecklistDatabase.prototype.error__getALLParentDepartment = function (error) {
        //console.log("Eroor  getALLParentDepartment  addpersonel");
    };
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] },
        { type: src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__["AttendanceServiceService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var AddBreakTimeTableComponent = /** @class */ (function () {
    function AddBreakTimeTableComponent(attendanceService, personnel_service, deviceService, messageService, confirmationService, database, service, dialog, router) {
        var _this = this;
        this.attendanceService = attendanceService;
        this.personnel_service = personnel_service;
        this.deviceService = deviceService;
        this.messageService = messageService;
        this.confirmationService = confirmationService;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        //check in rule  
        this.base_On_Punch_Type = [
            { id: 0, name: true, data: "Yes" },
            { id: 1, name: false, data: "No" }
        ];
        this.base_On_Punch_Type_init = 0;
        this.base_On_Punch_Type_data = this.base_On_Punch_Type[this.base_On_Punch_Type_init].id;
        //check out rule
        /*public check_Out_Rule_array = [
          {id: 0, name: "Base On Schedule"},
          {id: 1, name: "Last Check Out"}
        ];
        public check_Out_Rule_init:number=1;
        public check_Out_Rule_data:number=this.check_Out_Rule_array[this.check_Out_Rule_init].id;
        //over time rule
        public Overtime_Rule_array = [
          {id: 0, name: "Auto OT"},
          {id: 1, name: "NO OT"}
        ];
        public Overtime_Rule_init:number=1;
        public Overtime_Rule_data:number=this.Overtime_Rule_array[this.Overtime_Rule_init].id;
        
        public punchPeriod:Number=8;
        
        
        
        // weekend setting
        public weekendTest = [
          {id: 0, name: "mon",data:true},
          {id: 1, name: "tue",data:false},
          {id: 2, name: "wen",data:true},
          {id: 3, name: "thu",data:false},
          {id: 4, name: "fri",data:true},
          {id: 5, name: "sat",data:false},
          {id: 6, name: "sun",data:false}
        ];
        
        
        
        public mon:boolean=false;
        public tue:boolean=false;
        public wed:boolean=false;
        public thu:boolean=false;
        public fri:boolean=false;
        public sat:boolean=false;
        public sun:boolean=false;
        
        
        //public  weekend: boolean[] =boolean [];
        //weekend:boolean[] = new Array(this.mon,this.tue,this.wed,this.wed,this.fri,this.sat,this.sun)
        weekend:boolean[] = new Array(this.weekendTest[0].data,this.weekendTest[1].data,this.weekendTest[2].data,this.weekendTest[3].data,this.weekendTest[4].data,this.weekendTest[5].data,this.weekendTest[6].data)
        public fullName:String;
        
        
        //calculation
        public there_is_No_check_in = [
          {id: 0, name: "Late"},
          {id: 1, name: "Absent"},
          {id: 2, name: "No Complete"},
        ];
        public there_is_No_check_in_init:number=2;
        public there_is_No_check_in_data:String=""+this.there_is_No_check_in[this.there_is_No_check_in_init].id;
        
        public there_is_No_check_in_Minutes:Number=60;
        
        
        public there_is_No_check_out = [
          {id: 0, name: "Early Leave"},
          {id: 1, name: "Absent"},
          {id: 2, name: "No Complete"},
        ];
        public there_is_No_check_out_init:number=2;
        public there_is_No_check_out_data:String=""+this.there_is_No_check_out[this.there_is_No_check_out_init].id;
        public there_is_No_check_out_Minutes:Number=60;
        
        public Require_Check_In_on_leave_period=[
          {id: 0, name: "Must Punch"},
          {id: 1, name: "Use leave end time"}
        ];
        public Require_Check_In_on_leave_period_init:number=1;
        public Require_Check_In_on_leave_period_data:number=this.Require_Check_In_on_leave_period[this.Require_Check_In_on_leave_period_init].id;
        
        public Require_Check_Out_on_leave_period=[
          {id: 0, name: "Must Punch"},
          {id: 1, name: "Use leave start time"}
        ];
        public Require_Check_Out_on_leave_period_init:number=1;
        public Require_Check_Out_on_leave_period_data:Number=this.Require_Check_Out_on_leave_period[this.Require_Check_Out_on_leave_period_init].id;
        
        
        
        public Require_Check_In_on_training_period=[
          {id: 0, name: "Must Punch"},
          {id: 1, name: "Use leave end time"}
        ];
        
        public Require_Check_In_on_training_period_init:number=1;
        public Require_Check_In_on_training_period_data:Number=this.Require_Check_In_on_training_period[this.Require_Check_In_on_training_period_init].id;
        
        public Require_Check_Out_on_training_period=[
          {id: 0, name: "Must Punch"},
          {id: 1, name: "Use leave start time"}
        ];
        
        public Require_Check_Out_on_training_period_init:number=1;
        public Require_Check_Out_on_training_period_data:Number=this.Require_Check_Out_on_training_period[this.Require_Check_Out_on_training_period_init].id;
        
        
        public check_in:Number=10;
        public Check_Out:Number=10;
        public Break_Out:Number=10;
        public Break_In:Number=10;
        public OT_In:Number=10;
        public OT_Out:Number=10;
        public rule_Name:String="Rule Name"
        //Overtime_Rule_init:Number=1;
        public parentDepartment:String="" */
        this.timeZoneForm = _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"];
        this.errordisplayflag = false;
        this.pagenum = 15;
        this.sum = 0;
        this.sumOriginal = 10;
        this.totalRecords = 0;
        this.count = 1;
        this.msgs = [];
        this.MySum = [];
        this.display = false;
        this.parentPosition = "";
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        /*checkInClick(event:any)
        {
          console.log("check in click")
         this.check_In_Rule_init=3;
          this.check_In_Rule_=event.target.value;
          console.log("check_In_Rule :" +this.check_In_Rule)
        }*/
        this.oppoSuits = ['Men', 'Women', 'Boys', 'Inspiration'];
        /*public lateExceed:Number=100;
        public earlyLeaveExceed:Number=60;
        
        public old_Rule_name:String="";*/
        this.edit_Flag = false;
        this.weekendString = new Map();
        this.count1 = 0;
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
        //this.getAllRule_data_to_AllVaraiables();
    }
    /*ionViewDidLoad(){
     setTimeout(() => {
         alert('Hello...')
     }, 5000);
   }*/
    AddBreakTimeTableComponent.prototype.getAllRule_data_to_AllVaraiables = function () {
        console.log("getAllRule_data_to_AllVaraiables  ");
        /* let valid_data=this.attendanceService.get_globalRule_Passed_Data()
         console.log("getAllRule_data_to_AllVaraiables  valid_data : "+valid_data)*/
    };
    AddBreakTimeTableComponent.prototype.showDialog = function () {
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    AddBreakTimeTableComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    AddBreakTimeTableComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    AddBreakTimeTableComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    AddBreakTimeTableComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    AddBreakTimeTableComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    AddBreakTimeTableComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    AddBreakTimeTableComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    AddBreakTimeTableComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    AddBreakTimeTableComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    AddBreakTimeTableComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        // this.parentDepartment=event.value;
    };
    /* getaddDeviceForm(event:NgForm)
     {
    let obj:addDeciceModel=new addDeciceModel(event.value['devicename'],event.value['serialnumber'],event.value['ipaddress'],event.value['portnumber'],event.value['parentarea'],"GMT"+event.value['timezone'],null,null,null,null)
    console.log("add deviceform");
    //console.log(event);
    //console.log(event.value['areacode'])
    console.log(obj);
    //let JsonData=JSON.stringify(obj)
    //console.log("JsonData");
    //console.log(JsonData);
    this.service.postAddDeviceDetails(obj).subscribe(response=>this.success1(response),error=>this.error1(error));
    }*/
    /*editPosition_success(response)
     {
       console.log("position   :  editPosition_success ")
       console.log(response.responce_data)
     // responce_data
      this.errorDta=response.responce_data;
      if(this.errorDta==="Sucsses")
      {
        console.log("if sucsess")
       
        this.personnel_service. getAllPositionDetailsBegining().subscribe(
          response=>this.getAll_GlobalRule_Details_Begining_Success(response),
          error=>this.getAll_Position_Details_Begining_Error(error)
        )
        this.router.navigate(['position']);
      }
      else
      {
       this.errordisplayflag=true;
      }
     }
     editPosition_error(error)
    {
      console.log("position   :  editPosition_Error ")
     console.log(error);
     this.errorDta="Server Not Responding,Please try Again"
     this.errordisplayflag=true;
    
    }*/
    AddBreakTimeTableComponent.prototype.displayfalse = function () {
        console.log("display false" + this.parentPosition);
        this.parentPosition = null;
        this.display = false;
    };
    //constructor(private router: Router,private deviceService:DeviceserviceService,private messageService: MessageService,private confirmationService: ConfirmationService) { }
    AddBreakTimeTableComponent.prototype.ngOnInit = function () {
        this.initialmethod();
        // console.log("ng init")
        this.cols = [
            { field: 'position_No', header: 'Position No', width: '25%' },
            { field: 'position_name', header: 'Position Name', width: '30%' },
            { field: 'parent_position', header: 'Parent Position', width: '28%' },
            { field: 'Employee Count', header: 'Employee Ccount', width: '17%' },
            { field: ' ', header: 'Action', width: '35%' }
        ];
        console.log("ngOnInit");
        //this.getAllRule_data_to_AllVaraiables()
        this.get_all_Break_Time_Table_List();
    };
    AddBreakTimeTableComponent.prototype.initialmethod = function () {
        /* this.attendanceService. getGlobalRule().subscribe(
           response=>this.getAll_GlobalRule_Details_Begining_Success(response),
           error=>this.getAll_Position_Details_Begining_Error(error)
         )*/
    };
    AddBreakTimeTableComponent.prototype.getAll_Position_Details_Begining_Error = function (error) {
        console.log("handle  Error getAllDepartmentDetailsBegining");
        console.log(error);
    };
    AddBreakTimeTableComponent.prototype.positionDelete_success = function (response) {
        console.log("positionDelete_success : success");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Sucsses") {
            console.log("if sucsess");
            //this.router.navigate(['position']);
        }
        else {
            this.initialmethod();
        }
    };
    AddBreakTimeTableComponent.prototype.positionDelete_error = function (error) {
        console.log("positionDelete  Error");
        console.log(error);
        this.errorDta = "Server Not Responding,Please try Again";
        this.errordisplayflag = true;
    };
    /*onRowEditInit(position: addPositionModel) {
      console.log("onRowEditInit position")
     console.log(position)
     this.oldPositionNumber=(position['position_No'])
     console.log("Old Position Number is New "+this.oldPositionNumber)
     this.parentPosition=(position['parent_position'])
     console.log("Parent Position : "+this.parentPosition)
    }*/
    AddBreakTimeTableComponent.prototype.onRowEditSave = function (globalRule) {
        console.log("Save");
        // console.log(this.parentPosition)
        console.log(globalRule);
        /*let obj:editPositionModel=new editPositionModel(this.oldPositionNumber,position['position_No'],position['position_name'],this.parentPosition)
        console.log("Edit position JSON DTA")
        console.log(obj)
        
        
        
        this.personnel_service.editPosition(obj).subscribe(
          response=>this.editPosition_success(response),
          error=>this.editPosition_error(error))*/
    };
    AddBreakTimeTableComponent.prototype.onclick = function () {
        console.log("onclick");
        //console.log(data)
    };
    /*onRowEditCancel(position: addPositionModel, index: number) {
      console.log("onRowEditCancel")
    }*/
    /*onRowRemove(position : addPositionModel, index: number)
    {
    console.log("Position : onRowRemove")
    //console.log(device.Serial_Number)
    let obj:positionNumberModel=new positionNumberModel(this.oldPositionNumber)
    console.log(obj)
    
    this.confirmationService.confirm({
      message: 'Are you sure that you want to proceed?',
      header: 'Confirmation',
      icon: 'pi pi-exclamation-triangle',
      accept: () => {
          this.msgs = [{severity:'info', summary:'Confirmed', detail:'You have accepted'}];
          console.log("YES")
          this.personnel_service.DeletePosition(obj).subscribe(
            response=>this.positionDelete_success(response),
            error=>this.positionDelete_error(error))
    
      },
      reject: () => {
          this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];
          console.log("NOS")
      }
    });
    
    }*/
    AddBreakTimeTableComponent.prototype.showSuccess = function () {
        this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
    };
    AddBreakTimeTableComponent.prototype.showDialog1 = function () {
        this.display = true;
    };
    AddBreakTimeTableComponent.prototype.assignValu = function () {
        console.log("assiagn value");
        this.display = false;
    };
    AddBreakTimeTableComponent.prototype.myFunction = function () {
        console.log("click ME");
    };
    AddBreakTimeTableComponent.prototype.submitFormData = function (event) {
        console.log("click ME");
        console.log(event);
    };
    AddBreakTimeTableComponent.prototype.submitFormData1 = function () {
        var _this = this;
        console.log(this.edit_Flag);
        if (this.edit_Flag === false) {
            var obj = new _Model_TimeTableModels__WEBPACK_IMPORTED_MODULE_14__["GetBreakTimetableModel"](this.break_time_table_Name, this.end_Time, this.start_Time, this.break_Time, this.base_On_Punch_Type[this.base_On_Punch_Type_data].name);
            console.log(obj);
            this.attendanceService.add_Break_Time_Table(obj).subscribe(function (response) { return _this.success_addBreakTimeTable(response); }, function (error) { return _this.error_addBreakTimeTable(error); });
        }
        if (this.edit_Flag === true) {
            this.edit_Flag = false;
            var obj = new _Model_TimeTableModels__WEBPACK_IMPORTED_MODULE_14__["EditBreakTimetableModel"](this.break_time_table_Name, this.break_time_table_Name_old, this.end_Time, this.start_Time, this.break_Time, this.base_On_Punch_Type[this.base_On_Punch_Type_data].name);
            console.log(obj);
            this.attendanceService.Edit_Break_Time_Table(obj).subscribe(function (response) { return _this.success_editBreakTimetable(response); }, function (error) { return _this.error_editBreakTimetable(error); });
        }
    };
    AddBreakTimeTableComponent.prototype.success_addBreakTimeTable = function (response) {
        console.log("success_addBreakTimeTable : add Break time table Componet");
        console.log(response.responce_data);
        this.router.navigate(['breakTimeTableList']);
    };
    AddBreakTimeTableComponent.prototype.error_addBreakTimeTable = function (error) {
        console.log("error_addBreakTimeTable : add Break time table Componet");
        console.log(error);
    };
    AddBreakTimeTableComponent.prototype.success_editBreakTimetable = function (response) {
        console.log("success_editBreakTimetable : add Break time table Componet");
        console.log(response.responce_data);
        this.router.navigate(['breakTimeTableList']);
    };
    AddBreakTimeTableComponent.prototype.error_editBreakTimetable = function (error) {
        console.log("error_addBreakTimeTable : add Break time table Componet");
        console.log(error);
    };
    AddBreakTimeTableComponent.prototype.onClickSubmit = function (data) {
        console.log(data);
    };
    /*checkInRuleMethod(data:any)
    {
    this.check_In_Rule_data=data;
    console.log("checkInRuleMethod   "+this.check_In_Rule_data)
    }
    checkOutRuleMethod(data:any)
    {
    this.check_Out_Rule_data=data;
    console.log("checkOutRuleMethod   "+this.check_Out_Rule_data)
    }
    overTimeRuleMethod(data:any)
    {
    this.Overtime_Rule_data=data;
    console.log("overTimeRuleMethod   "+this.Overtime_Rule_data)
    console.log(this.punchPeriod)
    }
    there_is_No_check_in_method(data:any)
    {
    this.there_is_No_check_in_data=data;
    console.log("there_is_No_check_in_method   "+this.there_is_No_check_in_data)
    console.log(this.there_is_No_check_in_data)
    }
    there_is_No_check_out_method(data:any)
    {
    this.there_is_No_check_out_data=data;
    console.log("there_is_No_check_out_method   "+this.there_is_No_check_out_data)
    console.log(this.there_is_No_check_out_data)
    }
    
    Require_Check_In_on_leave_period_method(data:any)
    {
      this.Require_Check_In_on_leave_period_data=data;
      console.log("Require_Check_In_on_leave_period_method   "+this.Require_Check_In_on_leave_period_data)
      console.log(this.Require_Check_In_on_leave_period_data)
    }
    
    Require_Check_Out_on_leave_period_method(data:any)
    {
      this.Require_Check_Out_on_leave_period_data=data;
      console.log("Require_Check_Out_on_leave_period_method   "+this.Require_Check_Out_on_leave_period_data)
      console.log(this.Require_Check_Out_on_leave_period_data)
    }
    
    Require_Check_In_on_training_period_method(data:any)
    {
      this.Require_Check_In_on_training_period_data=data;
      console.log("Require_Check_In_on_training_period_method   "+this.Require_Check_In_on_training_period_data)
      console.log(this.Require_Check_In_on_training_period_data)
    }
    
    Require_Check_Out_on_training_period_method(data:any)
    {
      this.Require_Check_Out_on_training_period_data=data;
      console.log("Require_Check_Out_on_training_period_method   "+this.Require_Check_Out_on_training_period_data)
      console.log(this.Require_Check_Out_on_training_period_data)
    }*/
    AddBreakTimeTableComponent.prototype.base_On_Punch_Type_Method = function (data) {
        this.base_On_Punch_Type_data = data;
        console.log("base_On_Punch_Type_Method");
        console.log(this.base_On_Punch_Type_data);
    };
    /*weekendSelection(truFalse:boolean,data2:any)
    {
      //check the defulat selected values of weekend selection
    
      for (var _i = 0; _i < this.weekend.length; _i++) {
        var data = this.weekend[_i];
        if(data)
        {
          this.weekendString.set(this.weekendTest[_i].name,this.count1)
          this.count1++;
        }
    }
    console.log(this.weekendString)
    if(truFalse)
    {
      let size=this.weekendString.size
      console.log("size is : "+size)
      this.weekendString.set(data2,size++)
    }
    else
    {
      this.weekendString.delete(data2)
    }
    console.log(this.weekendString)
    
    console.log("weekendSelection");
    console.log(truFalse);
    console.log(data2);
    console.log(this.weekend);
    
    
    }
    public display_Department:Boolean=false;
    showDepartment() {
      this.database.getallParentDeparmentDetails();
      
      this.display_Department = true;
    }*/
    AddBreakTimeTableComponent.prototype.get_all_Break_Time_Table_List = function () {
        var _this = this;
        console.log("get_all_Break_Time_Table_List :add break time table Component");
        this.attendanceService.Get_Break_Time_Table_List().subscribe(function (response) { return _this.succsess_1(response); }, function (error) { return _this.error_1(error); });
    };
    AddBreakTimeTableComponent.prototype.succsess_1 = function (response) {
        var e_1, _a;
        var valid_data;
        console.log("succsess_1  break time table  : add break time table componet");
        console.log(response);
        this.break_time_table_Name = this.attendanceService.get_breakTimetable_Name();
        this.break_time_table_Name_old = this.break_time_table_Name;
        this.attendanceService.set_breakTimetable_Name("");
        console.log(" break time table name " + this.break_time_table_Name);
        if (this.break_time_table_Name.length > 1) {
            this.edit_Flag = true;
            try {
                for (var response_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](response), response_1_1 = response_1.next(); !response_1_1.done; response_1_1 = response_1.next()) {
                    var entry = response_1_1.value;
                    console.log("Data : " + entry.break_time_table_Name);
                    if (entry.break_time_table_Name === this.break_time_table_Name)
                        valid_data = entry;
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (response_1_1 && !response_1_1.done && (_a = response_1.return)) _a.call(response_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
            console.log("valid_data " + valid_data);
        }
        else
            this.edit_Flag = false;
        if (this.edit_Flag === true) {
            console.log("edit flag true " + valid_data.base_On_Punch_Type);
            this.break_time_table_Name = valid_data.break_time_table_Name;
            this.end_Time = valid_data.end_Time;
            this.start_Time = valid_data.start_Time;
            this.break_Time = valid_data.break_Time;
            console.log(valid_data.base_On_Punch_Type);
            if (valid_data.base_On_Punch_Type == true)
                this.base_On_Punch_Type_init = 0;
            else
                this.base_On_Punch_Type_init = 1;
            console.log(this.base_On_Punch_Type_init);
        }
    };
    AddBreakTimeTableComponent.prototype.error_1 = function (error) {
        console.log("error_1  break time table  : ");
        console.log(error);
    };
    AddBreakTimeTableComponent.ctorParameters = function () { return [
        { type: src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__["AttendanceServiceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"] },
        { type: primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"] },
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] }
    ]; };
    AddBreakTimeTableComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-break-time-table',
            template: __webpack_require__(/*! raw-loader!./add-break-time-table.component.html */ "./node_modules/raw-loader/index.js!./src/app/attendance/add-break-time-table/add-break-time-table.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"], ChecklistDatabase],
            styles: [__webpack_require__(/*! ./add-break-time-table.component.css */ "./src/app/attendance/add-break-time-table/add-break-time-table.component.css")]
        })
    ], AddBreakTimeTableComponent);
    return AddBreakTimeTableComponent;
}());



/***/ }),

/***/ "./src/app/attendance/add-shedule/add-shedule.component.css":
/*!******************************************************************!*\
  !*** ./src/app/attendance/add-shedule/add-shedule.component.css ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0dGVuZGFuY2UvYWRkLXNoZWR1bGUvYWRkLXNoZWR1bGUuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/attendance/add-shedule/add-shedule.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/attendance/add-shedule/add-shedule.component.ts ***!
  \*****************************************************************/
/*! exports provided: AddSheduleComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddSheduleComponent", function() { return AddSheduleComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/service/personnel/personnel.service */ "./src/app/service/personnel/personnel.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/service/attendance/attendance-service.service */ "./src/app/service/attendance/attendance-service.service.ts");
/* harmony import */ var _Model_AddSheduleModel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Model/AddSheduleModel */ "./src/app/attendance/Model/AddSheduleModel.ts");






var AddSheduleComponent = /** @class */ (function () {
    function AddSheduleComponent(PersonnelService1, datepipe, attendanceService) {
        this.PersonnelService1 = PersonnelService1;
        this.datepipe = datepipe;
        this.attendanceService = attendanceService;
        this.myDate = "2020-01-01";
        this.endDate = "2020-01-01";
        this.myDate1 = "2020-01-01";
        this.stratDate = "2020-01-01";
        this.Removeoverlap = false;
        this.ShiftNames = new Array();
        this.employeeSL_no = null;
    }
    AddSheduleComponent.prototype.ngOnInit = function () {
        this.initialmethod();
        this.initialmethod2();
        this.cols = [
            { field: 'personnel_No', header: 'Personnel No', width: '10%' },
            { field: 'first_name', header: 'First Name', width: '20%' },
            { field: 'department', header: 'Department', width: '25%' },
            { field: 'Action', header: '', width: '25%' }
        ];
    };
    AddSheduleComponent.prototype.initialmethod = function () {
        var _this = this;
        this.PersonnelService1.getAlPersonnelDetailsBegining().subscribe(function (response) { return _this.handleSuccess1(response); }, function (error) { return _this.handleError1(error); });
    };
    AddSheduleComponent.prototype.initialmethod2 = function () {
        var _this = this;
        this.attendanceService.Get_Shift_List().subscribe(function (res) { return _this.handleSuccess2(res); }, function (error1) { return _this.handleError2(error1); });
    };
    AddSheduleComponent.prototype.handleSuccess2 = function (response1) {
        var e_1, _a;
        console.log("handleSuccess Shift List");
        console.log("SGIHT NAMES");
        try {
            for (var response1_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](response1), response1_1_1 = response1_1.next(); !response1_1_1.done; response1_1_1 = response1_1.next()) {
                var entry = response1_1_1.value;
                console.log(entry.shift_name);
                this.ShiftNames.push(entry.shift_name);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (response1_1_1 && !response1_1_1.done && (_a = response1_1.return)) _a.call(response1_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        this.SelectedShiftName = this.ShiftNames[0];
    };
    AddSheduleComponent.prototype.handleError2 = function (error) {
        console.log("handle  Error");
        console.log(error);
    };
    AddSheduleComponent.prototype.handleSuccess1 = function (response) {
        console.log("handleSuccess");
        console.log(response);
        this.personnel = response;
    };
    AddSheduleComponent.prototype.handleError1 = function (error) {
        console.log("handle  Error");
        console.log(error);
    };
    AddSheduleComponent.prototype.birthDate_Method = function () {
        this.stratDate = this.datepipe.transform(this.myDate1, 'yyyy-MM-dd');
        console.log("Birth Date :" + this.stratDate);
    };
    AddSheduleComponent.prototype.employmentDate_Method = function () {
        this.endDate = this.datepipe.transform(this.myDate, 'yyyy-MM-dd');
        console.log("Employment Date :" + this.endDate);
    };
    AddSheduleComponent.prototype.onRowEditSave = function (data) {
        console.log(data['personnel_No']);
        this.employeeSL_no = data['personnel_No'];
    };
    AddSheduleComponent.prototype.Shift_Selection_Method = function (data) {
        console.log(data.target.value);
        this.SelectedShiftName = data.target.value;
    };
    AddSheduleComponent.prototype.formDataSubmit = function () {
        var _this = this;
        var obj = new _Model_AddSheduleModel__WEBPACK_IMPORTED_MODULE_5__["addSheduleModel"](this.stratDate, this.endDate, this.SelectedShiftName, this.employeeSL_no, this.Removeoverlap);
        this.attendanceService.Get_Shift_List().subscribe(function (res) { return _this.handleSuccess3(res); }, function (error1) { return _this.handleError3(error1); });
    };
    AddSheduleComponent.prototype.handleSuccess3 = function (response1) {
        var e_2, _a;
        console.log("handleSuccess Shift List");
        console.log("SGIHT NAMES");
        try {
            for (var response1_2 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](response1), response1_2_1 = response1_2.next(); !response1_2_1.done; response1_2_1 = response1_2.next()) {
                var entry = response1_2_1.value;
                console.log(entry.shift_name);
                this.ShiftNames.push(entry.shift_name);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (response1_2_1 && !response1_2_1.done && (_a = response1_2.return)) _a.call(response1_2);
            }
            finally { if (e_2) throw e_2.error; }
        }
        this.SelectedShiftName = this.ShiftNames[0];
    };
    AddSheduleComponent.prototype.handleError3 = function (error) {
        console.log("handle  Error");
        console.log(error);
    };
    AddSheduleComponent.ctorParameters = function () { return [
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_2__["PersonnelService"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"] },
        { type: src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_4__["AttendanceServiceService"] }
    ]; };
    AddSheduleComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-shedule',
            template: __webpack_require__(/*! raw-loader!./add-shedule.component.html */ "./node_modules/raw-loader/index.js!./src/app/attendance/add-shedule/add-shedule.component.html"),
            providers: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"]],
            styles: [__webpack_require__(/*! ./add-shedule.component.css */ "./src/app/attendance/add-shedule/add-shedule.component.css")]
        })
    ], AddSheduleComponent);
    return AddSheduleComponent;
}());



/***/ }),

/***/ "./src/app/attendance/add-shift/add-shift.component.css":
/*!**************************************************************!*\
  !*** ./src/app/attendance/add-shift/add-shift.component.css ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".my-custom-scrollbar {\r\n    position: relative;\r\n    height: 500px;\r\n    overflow: auto;\r\n    }\r\n    .table-wrapper-scroll-y {\r\n    display: block;\r\n    }\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXR0ZW5kYW5jZS9hZGQtc2hpZnQvYWRkLXNoaWZ0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLGNBQWM7SUFDZDtJQUNBO0lBQ0EsY0FBYztJQUNkIiwiZmlsZSI6InNyYy9hcHAvYXR0ZW5kYW5jZS9hZGQtc2hpZnQvYWRkLXNoaWZ0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktY3VzdG9tLXNjcm9sbGJhciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBoZWlnaHQ6IDUwMHB4O1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICB9XHJcbiAgICAudGFibGUtd3JhcHBlci1zY3JvbGwteSB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIH0iXX0= */"

/***/ }),

/***/ "./src/app/attendance/add-shift/add-shift.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/attendance/add-shift/add-shift.component.ts ***!
  \*************************************************************/
/*! exports provided: AddShiftComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddShiftComponent", function() { return AddShiftComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/service/attendance/attendance-service.service */ "./src/app/service/attendance/attendance-service.service.ts");
/* harmony import */ var _Model_ShiftModel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Model/ShiftModel */ "./src/app/attendance/Model/ShiftModel.ts");




var TREE_DATA = {};
var AddShiftComponent = /** @class */ (function () {
    function AddShiftComponent(attendanceService) {
        this.attendanceService = attendanceService;
        this.Week = ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"];
        this.editedTimeTableString = "";
        this.editedTimeTable = new Map();
        this.shiftTimeTable = new Map();
        this.number_Of_cycle = 1;
        this.unit_Of_cycle = [
            { id: 0, name: "Day" },
            { id: 1, name: "Week" },
            { id: 2, name: "Month" }
        ];
        this.unit_Of_cycle_init = 1;
        this.unit_Of_cycle_data = this.unit_Of_cycle[this.unit_Of_cycle_init].id;
        this.shiftName = "Shift name";
        this.AutoShift = false;
        this.countDayoffAs_Array = [
            { id: 0, name: "Normal Work" },
            { id: 1, name: "Normal OT" },
            { id: 2, name: "Weekend OT" }
        ];
        this.countDayoffAs_init = 1;
        this.countDayoffAs_data = this.countDayoffAs_Array[this.countDayoffAs_init].id;
        this.countWeekendAs_Array = [
            { id: 0, name: "Normal Work" },
            { id: 1, name: "Normal OT" },
            { id: 2, name: "Weekend OT" }
        ];
        this.countWeekendAs_init = 1;
        this.countWeekendAs_data = this.countWeekendAs_Array[this.countWeekendAs_init].id;
        this.count = 0;
    }
    AddShiftComponent.prototype.ngOnInit = function () {
        //this.shiftTimeTable.set(0,this.obj)
        // console.log(obj1.name)
        this.data_For_Shift_Edit = this.attendanceService.getShift();
        if (this.data_For_Shift_Edit) {
            console.log(this.data_For_Shift_Edit.shift_Timetable_Selection);
            console.log(this.data_For_Shift_Edit.shift_Timetable_Selection[0]);
            console.log(this.data_For_Shift_Edit.shift_Timetable_Selection[0]['firstName']);
            // console.log(JSON.stringify(this.data_For_Shift_Edit.shift_Timetable_Selection))
            // let data=JSON.stringify(this.data_For_Shift_Edit.shift_Timetable_Selection)
            //  let data1:Mydata[]=JSON.parse(this.data_For_Shift_Edit.shift_Timetable_Selection)
            // console.log("datas"+data1[0])
            //let data:Mydata[]=this.data_For_Shift_Edit.shift_Timetable_Selection;
            //  console.log("tree data"+data)
            //  console.log(data[0])
            /* let data=JSON.stringify(this.data_For_Shift_Edit.shift_Timetable_Selection);
             console.log("edit True"+data)*/
        }
        else {
            console.log("edit False");
        }
        this.initialmethod();
        this.cols = [
            { field: 'timetable_Name', header: 'Time Table', width: '25%' },
            { field: ' ', header: 'Select', width: '35%' }
        ];
        this.initialmethod2();
    };
    AddShiftComponent.prototype.initialmethod = function () {
        var _this = this;
        this.attendanceService.Get_Time_Table_List().subscribe(function (response) { return _this.Successs1(response); }, function (error) { return _this.Error1(error); });
    };
    AddShiftComponent.prototype.initialmethod2 = function () {
        for (var i = 1; i <= 7; i++) {
            var myObj0 = { name: this.Week[i - 1], index: i, checked: false, timeTable: "" };
            //  this.shiftTimeTable.set(i,myObj0)
        }
        console.log(this.shiftTimeTable);
    };
    // public checkedBreakTimeTables = new Map();
    AddShiftComponent.prototype.Successs1 = function (response) {
        var e_1, _a;
        console.log("Success  Time TAble List");
        var count = 0;
        try {
            for (var response_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](response), response_1_1 = response_1.next(); !response_1_1.done; response_1_1 = response_1.next()) {
                var entry = response_1_1.value;
                entry.primary_id = count++;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (response_1_1 && !response_1_1.done && (_a = response_1.return)) _a.call(response_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        this.allRules = response;
        console.log(this.allRules);
    };
    AddShiftComponent.prototype.Error1 = function (error) {
        console.log("handle  Error  Time Table List");
        console.log(error);
    };
    AddShiftComponent.prototype.onRowEditSave = function (data) {
        var _this = this;
        if (this.editedTimeTable.has(data.timetable_Name))
            this.editedTimeTable.delete(data.timetable_Name);
        else
            this.editedTimeTable.set(data.timetable_Name, this.editedTimeTable.size + 1);
        // console.log(this.editedTimeTable)
        // this.editedTimeTable.set("sajeer",this.editedTimeTable.size+1)
        // this.editedTimeTable.set("abcd",this.editedTimeTable.size+1)
        // console.log(this.editedTimeTable);
        this.editedTimeTableString = "";
        Array.from(this.editedTimeTable.keys()).forEach(function (key) {
            return _this.ConVertToString(key);
        });
        this.ConVertToString1();
    };
    AddShiftComponent.prototype.ConVertToString = function (key) {
        console.log(key + "   " + this.count++);
        this.editedTimeTableString = this.editedTimeTableString + "" + key + ",";
        console.log(this.editedTimeTableString);
    };
    AddShiftComponent.prototype.ConVertToString1 = function () {
        this.editedTimeTableString = this.editedTimeTableString.substr(0, this.editedTimeTableString.length - 1);
        console.log("Final Time Table String : " + this.editedTimeTableString);
    };
    AddShiftComponent.prototype.unit_Of_cycle_Method = function (data) {
        this.unit_Of_cycle_data = this.unit_Of_cycle[data].id;
        console.log("unit_Of_cycle_Method " + this.unit_Of_cycle_data);
        this.shiftTimeTable.clear();
        this.number_Of_cycle = 1;
        this.arayChangingFunction();
    };
    AddShiftComponent.prototype.countDayoffAs_Method = function (data) {
        this.countDayoffAs_data = this.countDayoffAs_Array[data].id;
        console.log("countDayoffAs_Method " + this.countDayoffAs_data);
    };
    AddShiftComponent.prototype.countWeekendAs_Method = function (data) {
        this.countWeekendAs_data = this.countWeekendAs_Array[data].id;
        console.log("countWeekendAs_Method " + this.countWeekendAs_data);
    };
    AddShiftComponent.prototype.arayChangingFunction = function () {
        console.log("arry changing :" + this.number_Of_cycle);
        this.shiftTimeTable.clear();
        switch (this.unit_Of_cycle_data) {
            case 0: {
                console.log("Day inside Switch Function");
                if (this.number_Of_cycle >= 0 || this.number_Of_cycle < 10) {
                    console.log("first if condion case 0");
                    for (var i = 1; i <= 10; i++) {
                        var myObj0 = { name: "Day : " + i, index: i, checked: false, timeTable: "" };
                        this.shiftTimeTable.set(i, myObj0);
                    }
                }
                if (this.number_Of_cycle > 10 && this.number_Of_cycle <= 99) {
                    for (var i = 1; i <= this.number_Of_cycle; i++) {
                        var myObj0 = { name: "Day : " + i, index: i, checked: false, timeTable: "" };
                        this.shiftTimeTable.set(i, myObj0);
                    }
                }
                else {
                    console.log("Day maximum limit is 99");
                    this.number_Of_cycle = 1;
                }
                break;
            }
            case 1: {
                console.log("Week inside Switch Function");
                if (this.number_Of_cycle == 0 || this.number_Of_cycle == 1) {
                    console.log("initialmethod2");
                    this.initialmethod2();
                }
                if (this.number_Of_cycle > 1 && this.number_Of_cycle <= 12) {
                    var count = 0;
                    for (var j = 0; j < this.number_Of_cycle; j++) {
                        for (var i = 1; i <= 7; i++) {
                            var myObj0 = { name: this.Week[i - 1], index: count, checked: false, timeTable: "" };
                            this.shiftTimeTable.set(count, myObj0);
                            count++;
                            console.log("set value index : " + count);
                        }
                    }
                }
                else {
                    console.log("Week maximum limit is 12");
                    this.number_Of_cycle = 1;
                }
                break;
            }
            case 2: {
                console.log("Month inside Switch Function");
                if (this.number_Of_cycle >= 1 && this.number_Of_cycle <= 12) {
                    var count = 0;
                    for (var j = 0; j < this.number_Of_cycle; j++) {
                        for (var i = 1; i <= 31; i++) {
                            var myObj0 = { name: "Day : " + i, index: i, checked: false, timeTable: "" };
                            count++;
                            this.shiftTimeTable.set(count, myObj0);
                        }
                    }
                }
                else {
                    console.log("Month maximum limit is 12");
                    this.number_Of_cycle = 1;
                }
                if (this.number_Of_cycle == 0 || this.number_Of_cycle == 1) {
                    for (var i = 1; i <= 31; i++) {
                        var myObj0 = { name: "Day : " + i, index: i, checked: false, timeTable: "" };
                        this.shiftTimeTable.set(i, myObj0);
                    }
                }
                break;
            }
            default: {
                console.log("Defualt inside Switch Function");
                break;
            }
        }
    };
    AddShiftComponent.prototype.trackByEmpCode = function (index, employee) {
        /*  console.log("index  "+index)
          console.log("employee  "+employee)*/
    };
    AddShiftComponent.prototype.checkedorUnchecked = function (checkBox, name, indexInterface, checked, timeTable, index) {
        console.log("checkBox : " + checkBox.currentTarget.checked);
        console.log(name + "  " + checked + "  " + indexInterface + "  " + timeTable + "index : " + index);
        console.log(this.shiftTimeTable);
        if (checkBox.currentTarget.checked === true) 
        //let obj:Mydata=this.shiftTimeTable.get(index)
        //if(obj.checked===true)
        {
            console.log("Checked True");
            var myObj = { name: name, index: indexInterface, checked: true, timeTable: this.editedTimeTableString };
            this.shiftTimeTable.set(index + 1, myObj);
        }
        //if(obj.checked===false)
        if (checkBox.currentTarget.checked === false) {
            console.log("Checked False");
            var myObj = { name: name, index: indexInterface, checked: false, timeTable: "" };
            this.shiftTimeTable.set(index + 1, myObj);
        }
        this.shiftTimeTable.forEach(function (value, key) {
            console.log(key, value);
        });
    };
    AddShiftComponent.prototype.submitFormData = function () {
        var e_2, _a, e_3, _b;
        console.log("Submit");
        try {
            /* this.shiftTimeTable.forEach((value: any, key: any) => {
               console.log(key, value);
             })*/
            for (var _c = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](this.shiftTimeTable.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {
                var entry = _d.value;
                //console.log(entry[0], entry[1].timeTable);
                if (entry[1].timeTable.length > 0) {
                    console.log(entry[0], entry[1]);
                }
                else
                    this.shiftTimeTable.delete(entry[0]);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_2) throw e_2.error; }
        }
        console.log("final MAP Varaibles");
        try {
            for (var _e = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](this.shiftTimeTable.entries()), _f = _e.next(); !_f.done; _f = _e.next()) {
                var entry = _f.value;
                console.log(entry[0], entry[1]);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_3) throw e_3.error; }
        }
        var returnedObject = this.mapToObj(this.shiftTimeTable);
        console.log(JSON.stringify(returnedObject));
        var obj = new _Model_ShiftModel__WEBPACK_IMPORTED_MODULE_3__["addNewShiftModel"](this.shiftName, this.number_Of_cycle, this.unit_Of_cycle_data, this.AutoShift, this.countDayoffAs_data, this.countWeekendAs_data, returnedObject);
        console.log("before adding to server ");
        console.log(obj);
        this.attendanceService.add_Shift(obj).subscribe(function (response) { return console.log(response); }, function (error) { return console.log(error); });
    };
    AddShiftComponent.prototype.mapToObj = function (inputMap) {
        var obj = {};
        inputMap.forEach(function (value, key) {
            obj[key] = value;
        });
        return obj;
    };
    AddShiftComponent.ctorParameters = function () { return [
        { type: src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_2__["AttendanceServiceService"] }
    ]; };
    AddShiftComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-shift',
            template: __webpack_require__(/*! raw-loader!./add-shift.component.html */ "./node_modules/raw-loader/index.js!./src/app/attendance/add-shift/add-shift.component.html"),
            styles: [__webpack_require__(/*! ./add-shift.component.css */ "./src/app/attendance/add-shift/add-shift.component.css")]
        })
    ], AddShiftComponent);
    return AddShiftComponent;
}());



/***/ }),

/***/ "./src/app/attendance/add-time-table/add-time-table.component.css":
/*!************************************************************************!*\
  !*** ./src/app/attendance/add-time-table/add-time-table.component.css ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0dGVuZGFuY2UvYWRkLXRpbWUtdGFibGUvYWRkLXRpbWUtdGFibGUuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/attendance/add-time-table/add-time-table.component.ts":
/*!***********************************************************************!*\
  !*** ./src/app/attendance/add-time-table/add-time-table.component.ts ***!
  \***********************************************************************/
/*! exports provided: TodoItemNode, TodoItemFlatNode, ChecklistDatabase, AddTimeTableComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddTimeTableComponent", function() { return AddTimeTableComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/service/personnel/personnel.service */ "./src/app/service/personnel/personnel.service.ts");
/* harmony import */ var src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/service/attendance/attendance-service.service */ "./src/app/service/attendance/attendance-service.service.ts");
/* harmony import */ var _Model_TimeTableModels__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../Model/TimeTableModels */ "./src/app/attendance/Model/TimeTableModels.ts");











;





var jsPDF = __webpack_require__(/*! jspdf */ "./node_modules/jspdf/dist/jspdf.min.js");
__webpack_require__(/*! jspdf-autotable */ "./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js");
var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service, personnel_service, attendanceService) {
        //this.getallParentPositionFromServer();
        this.service = service;
        this.personnel_service = personnel_service;
        this.attendanceService = attendanceService;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_9__["BehaviorSubject"]([]);
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallParentDeparmentDetails = function () {
        //console.log("getallAreasFromServer")
        console.log("getall Parent Department :addpersonnel");
        // this.personnel_service.getAllParentDepartmentDetailsBegining().subscribe(response=>this.succsess_getALLParentDepartment(response),error=>this.error__getALLParentDepartment(error))
    };
    ChecklistDatabase.prototype.succsess_getALLParentDepartment = function (response) {
        console.log("succsess_getALLParentDepartment addPersonel");
        console.log("TREE DATA-------------");
        console.log(TREE_DATA);
        console.log("response--------------");
        console.log(response);
        TREE_DATA = response;
        console.log("responses----------------Changed to TREE_DATA");
        console.log(TREE_DATA);
        this.initialize();
    };
    ChecklistDatabase.prototype.error__getALLParentDepartment = function (error) {
        console.log("Eroor  getALLParentDepartment  addpersonel");
    };
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] },
        { type: src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__["AttendanceServiceService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var AddTimeTableComponent = /** @class */ (function () {
    function AddTimeTableComponent(attendanceService, personnel_service, deviceService, messageService, confirmationService, database, service, dialog, router) {
        var _this = this;
        this.attendanceService = attendanceService;
        this.personnel_service = personnel_service;
        this.deviceService = deviceService;
        this.messageService = messageService;
        this.confirmationService = confirmationService;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.breakTimeTableNames = [];
        this.checkedBreakTimeTables = new Map();
        this.checkedBreakTimeTables1 = ['aq', 'test3'];
        this.edit_flag = false;
        this.timetable_Name = "";
        this.old_timetable_Name = "";
        this.check_In = "00:00:00";
        this.check_Out = "00:00:00";
        this.workday = "1.0";
        this.check_In_Start_Time = "00:00:00";
        this.check_In_End_Time = "00:00:00";
        this.check_Out_Start_Time = "00:00:00";
        this.check_Out_End_Time = "00:00:00";
        this.break_Time = "";
        //check in rule  
        this.multiple_In_Out = [
            { id: 0, name: true, data: "Yes" },
            { id: 1, name: false, data: "No" }
        ];
        this.multiple_In_Out_init = 1;
        this.multiple_In_Out_data = this.multiple_In_Out[this.multiple_In_Out_init].name;
        //check out rule
        this.base_On_Punch_Type = [
            { id: 0, name: true, data: "Yes" },
            { id: 1, name: false, data: "No" }
        ];
        this.base_On_Punch_Type_init = 1;
        this.base_On_Punch_Type_data = this.base_On_Punch_Type[this.base_On_Punch_Type_init].name;
        //over time rule
        this.necessary_Check_In = [
            { id: 0, name: true, data: "Yes" },
            { id: 1, name: false, data: "No" }
        ];
        this.necessary_Check_In_init = 1;
        this.necessary_Check_In_data = this.necessary_Check_In[this.necessary_Check_In_init].name;
        this.necessary_Check_OUT = [
            { id: 0, name: true, data: "Yes" },
            { id: 1, name: false, data: "No" }
        ];
        this.necessary_Check_OUT_init = 1;
        this.necessary_Check_OUT_data = this.necessary_Check_OUT[this.necessary_Check_OUT_init].name;
        this.auto_OT_Check_In_Early = [
            { id: 0, name: true, data: "Yes" },
            { id: 1, name: false, data: "No" }
        ];
        this.auto_OT_Check_In_Early_init = 1;
        this.auto_OT_Check_In_Early_data = this.auto_OT_Check_In_Early[this.auto_OT_Check_In_Early_init].name;
        this.auto_OT_Check_Out_Delay = [
            { id: 0, name: true, data: "Yes" },
            { id: 1, name: false, data: "No" }
        ];
        this.auto_OT_Check_Out_Delay_init = 1;
        this.auto_OT_Check_Out_Delay_data = this.auto_OT_Check_Out_Delay[this.auto_OT_Check_Out_Delay_init].name;
        this.type = [
            { id: 0, name: true, data: "Flexible " },
            { id: 1, name: false, data: "Normal" }
        ];
        this.type_init = 1;
        this.type_data = this.type[this.type_init].id;
        this.timeZoneForm = _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"];
        this.errordisplayflag = false;
        this.pagenum = 15;
        this.sum = 0;
        this.sumOriginal = 10;
        this.totalRecords = 0;
        this.count = 1;
        this.msgs = [];
        this.MySum = [];
        this.display = false;
        this.parentPosition = "";
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        /*checkInClick(event:any)
        {
          console.log("check in click")
         this.check_In_Rule_init=3;
          this.check_In_Rule_=event.target.value;
          console.log("check_In_Rule :" +this.check_In_Rule)
        }*/
        this.oppoSuits = ['Men', 'Women', 'Boys', 'Inspiration'];
        this.weekendString = new Map();
        this.count1 = 0;
        this.display_Department = false;
        this.checked = false;
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
        this.router.events.subscribe(function (e) {
            if (e instanceof _angular_router__WEBPACK_IMPORTED_MODULE_4__["NavigationEnd"]) {
                // Function you want to call here
                console.log("after Loading all DATA");
            }
        });
        //this.getAllRule_data_to_AllVaraiables();
    }
    /*ionViewDidLoad(){
     setTimeout(() => {
         alert('Hello...')
     }, 5000);
   }*/
    AddTimeTableComponent.prototype.getAllRule_data_to_AllVaraiables = function () {
        console.log("getAllRule_data_to_AllVaraiables  ");
        /* let valid_data=this.attendanceService.get_globalRule_Passed_Data()
         console.log("getAllRule_data_to_AllVaraiables  valid_data : "+valid_data)*/
    };
    AddTimeTableComponent.prototype.showDialog = function () {
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    AddTimeTableComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    AddTimeTableComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    AddTimeTableComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    AddTimeTableComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    AddTimeTableComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    AddTimeTableComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    AddTimeTableComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    AddTimeTableComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    AddTimeTableComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    AddTimeTableComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        // this.parentDepartment=event.value;
    };
    /* getaddDeviceForm(event:NgForm)
     {
    let obj:addDeciceModel=new addDeciceModel(event.value['devicename'],event.value['serialnumber'],event.value['ipaddress'],event.value['portnumber'],event.value['parentarea'],"GMT"+event.value['timezone'],null,null,null,null)
    console.log("add deviceform");
    //console.log(event);
    //console.log(event.value['areacode'])
    console.log(obj);
    //let JsonData=JSON.stringify(obj)
    //console.log("JsonData");
    //console.log(JsonData);
    this.service.postAddDeviceDetails(obj).subscribe(response=>this.success1(response),error=>this.error1(error));
    }*/
    /*editPosition_success(response)
     {
       console.log("position   :  editPosition_success ")
       console.log(response.responce_data)
     // responce_data
      this.errorDta=response.responce_data;
      if(this.errorDta==="Sucsses")
      {
        console.log("if sucsess")
       
        this.personnel_service. getAllPositionDetailsBegining().subscribe(
          response=>this.getAll_GlobalRule_Details_Begining_Success(response),
          error=>this.getAll_Position_Details_Begining_Error(error)
        )
        this.router.navigate(['position']);
      }
      else
      {
       this.errordisplayflag=true;
      }
     }
     editPosition_error(error)
    {
      console.log("position   :  editPosition_Error ")
     console.log(error);
     this.errorDta="Server Not Responding,Please try Again"
     this.errordisplayflag=true;
    
    }*/
    AddTimeTableComponent.prototype.displayfalse = function () {
        console.log("display false" + this.parentPosition);
        this.parentPosition = null;
        this.display = false;
    };
    //constructor(private router: Router,private deviceService:DeviceserviceService,private messageService: MessageService,private confirmationService: ConfirmationService) { }
    AddTimeTableComponent.prototype.ngOnInit = function () {
        this.initialmethod();
        // console.log("ng init")
        this.cols = [
            { field: 'position_No', header: 'Position No', width: '25%' },
            { field: 'position_name', header: 'Position Name', width: '30%' },
            { field: 'parent_position', header: 'Parent Position', width: '28%' },
            { field: 'Employee Count', header: 'Employee Ccount', width: '17%' },
            { field: ' ', header: 'Action', width: '35%' }
        ];
        this.cols1 = [
            { field: 'break_time_table_Name', header: 'Name', width: '25%' },
            { field: 'start_Time', header: 'Start Time ', width: '30%' },
            { field: 'end_Time', header: 'End Time', width: '30%' },
            { field: 'break_Time', header: 'Break Time', width: '30%' },
            { field: 'base_On_Punch_Type', header: 'Punch Type', width: '20%' },
            { field: ' ', header: 'Action', width: '35%' }
        ];
        console.log("ngOnInit");
        //this.getAllRule_data_to_AllVaraiables()
        //this.get_all_Rule_List();
        this.attendanceService.getTimeTable();
    };
    AddTimeTableComponent.prototype.initialmethod = function () {
        var _this = this;
        this.attendanceService.Get_Break_Time_Table_List().subscribe(function (response) { return _this.Successs1(response); }, function (error) { return _this.Error1(error); });
    };
    // public checkedBreakTimeTables = new Map();
    AddTimeTableComponent.prototype.Successs1 = function (response) {
        var e_1, _a, e_2, _b, e_3, _c, e_4, _d;
        var count = 0;
        console.log("Success Break Time TAble List" + this.checkedBreakTimeTables);
        count = 0;
        var flag = 0;
        var data = this.attendanceService.getTimeTable();
        if (data) {
            this.edit_flag = true;
            console.log("edit flag true" + data);
            var editedTimeTableName = data.break_Time;
            this.breakTimeTableNames = editedTimeTableName.split(' ');
            this.checkedBreakTimeTables.clear();
            try {
                for (var _e = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](this.breakTimeTableNames), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var entry = _f.value;
                    console.log("editedTimeTableName " + entry);
                    this.checkedBreakTimeTables.set(entry, count++);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
                }
                finally { if (e_1) throw e_1.error; }
            }
            console.log("finall break time table for editing in map " + this.checkedBreakTimeTables);
            try {
                for (var response_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](response), response_1_1 = response_1.next(); !response_1_1.done; response_1_1 = response_1.next()) { //break time table 
                    var entry = response_1_1.value;
                    entry.primary_id = count++;
                    try {
                        for (var _g = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](this.checkedBreakTimeTables.keys()), _h = _g.next(); !_h.done; _h = _g.next()) {
                            var eachBreakTimetable = _h.value;
                            console.log("Break time : " + eachBreakTimetable + "   Entry Name : " + entry.break_time_table_Name);
                            if (eachBreakTimetable === entry.break_time_table_Name) {
                                entry.checked1 = false;
                                flag = 1;
                                console.log("matched");
                            }
                        }
                    }
                    catch (e_3_1) { e_3 = { error: e_3_1 }; }
                    finally {
                        try {
                            if (_h && !_h.done && (_c = _g.return)) _c.call(_g);
                        }
                        finally { if (e_3) throw e_3.error; }
                    }
                    if (flag === 1) {
                        flag = 0;
                        entry.checked1 = true;
                        console.log("Not matched");
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (response_1_1 && !response_1_1.done && (_b = response_1.return)) _b.call(response_1);
                }
                finally { if (e_2) throw e_2.error; }
            }
            console.log("Finally");
            console.log(response);
            this.allRules = response;
            this.timetable_Name = data.timetable_Name;
            this.old_timetable_Name = this.timetable_Name;
            this.check_In = data.check_In;
            this.check_Out = data.check_Out;
            this.workday = data.workday;
            this.multiple_In_Out_data = data.multiple_In_Out;
            if (this.multiple_In_Out_data === true)
                this.multiple_In_Out_init = 0;
            else
                this.multiple_In_Out_init = 1;
            this.base_On_Punch_Type_data = data.base_On_Punch_Type;
            if (this.base_On_Punch_Type_data === true)
                this.base_On_Punch_Type_init = 0;
            else
                this.base_On_Punch_Type_init = 1;
            this.necessary_Check_In_data = data.necessary_Check_In;
            if (this.necessary_Check_In_data === true)
                this.necessary_Check_In_init = 0;
            else
                this.necessary_Check_In_init = 1;
            this.necessary_Check_OUT_data = data.necessary_Check_OUT;
            if (this.necessary_Check_OUT_data === true)
                this.necessary_Check_OUT_init = 0;
            else
                this.necessary_Check_OUT_init = 1;
            this.auto_OT_Check_In_Early_data = data.auto_OT_Check_In_Early;
            if (this.auto_OT_Check_In_Early_data === true)
                this.auto_OT_Check_In_Early_init = 0;
            else
                this.auto_OT_Check_In_Early_init = 1;
            this.auto_OT_Check_Out_Delay_data = data.auto_OT_Check_Out_Delay;
            if (this.auto_OT_Check_Out_Delay_data === true)
                this.auto_OT_Check_Out_Delay_init = 0;
            else
                this.auto_OT_Check_Out_Delay_init = 1;
            this.check_In_Start_Time = data.check_In_Start_Time;
            this.check_In_End_Time = data.check_In_End_Time;
            this.check_Out_Start_Time = data.check_Out_Start_Time;
            this.check_Out_End_Time = data.check_Out_End_Time;
            this.break_Time = data.break_Time;
        }
        else {
            count = 0;
            try {
                for (var response_2 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](response), response_2_1 = response_2.next(); !response_2_1.done; response_2_1 = response_2.next()) { //break time table 
                    var entry = response_2_1.value;
                    entry.primary_id = count++;
                }
            }
            catch (e_4_1) { e_4 = { error: e_4_1 }; }
            finally {
                try {
                    if (response_2_1 && !response_2_1.done && (_d = response_2.return)) _d.call(response_2);
                }
                finally { if (e_4) throw e_4.error; }
            }
            console.log("edit flag False" + data);
            this.allRules = response;
        }
    };
    AddTimeTableComponent.prototype.Error1 = function (error) {
        console.log("handle  Error Break Time Table List");
        console.log(error);
    };
    AddTimeTableComponent.prototype.getAll_Position_Details_Begining_Error = function (error) {
        console.log("handle  Error getAllDepartmentDetailsBegining");
        console.log(error);
    };
    /*positionDelete_success(response)
     {
        console.log("positionDelete_success : success")
        console.log(response.responce_data)
      // responce_data
       this.errorDta=response.responce_data;
       if(this.errorDta==="Sucsses")
       {
         console.log("if sucsess")
         //this.router.navigate(['position']);
       }
       else
       {
       this.initialmethod()
      }
      }
    
      positionDelete_error(error)
    {
      console.log("positionDelete  Error")
      console.log(error);
      this.errorDta="Server Not Responding,Please try Again"
      this.errordisplayflag=true;
    
    }*/
    AddTimeTableComponent.prototype.onRowEditInit = function (position) {
        console.log("onRowEditInit position");
        console.log(position);
    };
    AddTimeTableComponent.prototype.onRowEditSave = function (editBreakTime) {
        var _this = this;
        console.log("Save");
        console.log(editBreakTime.break_time_table_Name);
        if (this.checkedBreakTimeTables.has(editBreakTime.break_time_table_Name)) {
            this.checkedBreakTimeTables.delete(editBreakTime.break_time_table_Name);
        }
        else {
            this.checkedBreakTimeTables.set(editBreakTime.break_time_table_Name, this.checkedBreakTimeTables.size + 1);
        }
        console.log(this.checkedBreakTimeTables);
        this.break_Time = "";
        this.checkedBreakTimeTables.forEach(function (value, key) {
            _this.convertToString(key, value);
        });
        console.log("final break time" + this.break_Time);
        this.break_Time = this.break_Time.substring(0, this.break_Time.length - 1);
        console.log("final break time 2" + this.break_Time);
    };
    AddTimeTableComponent.prototype.onclick = function () {
        console.log("onclick");
        //console.log(data)
    };
    /*onRowEditCancel(position: addPositionModel, index: number) {
      console.log("onRowEditCancel")
    }*/
    /*onRowRemove(position : addPositionModel, index: number)
    {
    console.log("Position : onRowRemove")
    //console.log(device.Serial_Number)
    let obj:positionNumberModel=new positionNumberModel(this.oldPositionNumber)
    console.log(obj)
    
    this.confirmationService.confirm({
      message: 'Are you sure that you want to proceed?',
      header: 'Confirmation',
      icon: 'pi pi-exclamation-triangle',
      accept: () => {
          this.msgs = [{severity:'info', summary:'Confirmed', detail:'You have accepted'}];
          console.log("YES")
          this.personnel_service.DeletePosition(obj).subscribe(
            response=>this.positionDelete_success(response),
            error=>this.positionDelete_error(error))
    
      },
      reject: () => {
          this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];
          console.log("NOS")
      }
    });
    
    }*/
    AddTimeTableComponent.prototype.showSuccess = function () {
        this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
    };
    AddTimeTableComponent.prototype.showDialog1 = function () {
        this.display = true;
    };
    AddTimeTableComponent.prototype.assignValu = function () {
        console.log("assiagn value");
        this.display = false;
    };
    AddTimeTableComponent.prototype.myFunction = function () {
        console.log("click ME");
    };
    AddTimeTableComponent.prototype.submitFormData = function (event) {
        console.log("click ME");
        console.log(event);
    };
    /*public lateExceed:Number=100;
    public earlyLeaveExceed:Number=60;
    
    public old_Rule_name:String="";*/
    AddTimeTableComponent.prototype.convertToString = function (key, value) {
        this.break_Time = this.break_Time + key + " ";
    };
    AddTimeTableComponent.prototype.submitFormData1 = function () {
        var _this = this;
        if (this.edit_flag === false) {
            console.log("add New Time table");
            var obj = new _Model_TimeTableModels__WEBPACK_IMPORTED_MODULE_14__["addNewTimetableModel"](this.timetable_Name, this.check_In, this.check_Out, this.workday, this.multiple_In_Out_data, this.base_On_Punch_Type_data, this.necessary_Check_In_data, this.necessary_Check_OUT_data, this.auto_OT_Check_In_Early_data, this.auto_OT_Check_Out_Delay_data, this.check_In_Start_Time, this.check_In_End_Time, this.check_Out_Start_Time, this.check_Out_End_Time, "" + this.type_data, this.break_Time);
            console.log(obj);
            this.attendanceService.add_TimeTable(obj).subscribe(function (response) { return _this.success_addTimeTAble(response); }, function (error) { return _this.error_addTimeTAble(error); });
        }
        if (this.edit_flag === true) {
            this.edit_flag = false;
            console.log("edit  Time table");
            var obj = new _Model_TimeTableModels__WEBPACK_IMPORTED_MODULE_14__["editTimetableModel"](this.timetable_Name, this.old_timetable_Name, this.check_In, this.check_Out, this.workday, this.multiple_In_Out_data, this.base_On_Punch_Type_data, this.necessary_Check_In_data, this.necessary_Check_OUT_data, this.auto_OT_Check_In_Early_data, this.auto_OT_Check_Out_Delay_data, this.check_In_Start_Time, this.check_In_End_Time, this.check_Out_Start_Time, this.check_Out_End_Time, "" + this.type_data, this.break_Time);
            console.log(obj);
            this.attendanceService.add_TimeTable(obj).subscribe(function (response) { return _this.success_editTimeTAble(response); }, function (error) { return _this.error_editTimeTAble(error); });
        }
    };
    AddTimeTableComponent.prototype.success_editTimeTAble = function (response) {
        console.log("success_editTimeTAble ");
        console.log(response.responce_data);
        if (response.responce_data == "Success")
            this.router.navigate(['timeTableList']);
    };
    AddTimeTableComponent.prototype.error_editTimeTAble = function (error) {
        console.log("error_editTimeTAble :");
        console.log(error);
    };
    AddTimeTableComponent.prototype.success_addTimeTAble = function (response) {
        console.log("success_addTimeTAble ");
        console.log(response.responce_data);
        if (response.responce_data == "Success")
            this.router.navigate(['timeTableList']);
    };
    AddTimeTableComponent.prototype.error_addTimeTAble = function (error) {
        console.log("error_addTimeTAble :");
        console.log(error);
    };
    AddTimeTableComponent.prototype.onClickSubmit = function (data) {
        console.log(data);
    };
    AddTimeTableComponent.prototype.multiple_In_Out_Method = function (data) {
        this.multiple_In_Out_data = this.multiple_In_Out[data].name;
        console.log("multiple_In_Out_Method");
        console.log(this.multiple_In_Out_data);
    };
    AddTimeTableComponent.prototype.base_On_Punch_Type_Method = function (data) {
        this.base_On_Punch_Type_data = this.base_On_Punch_Type[data].name;
        console.log("base_On_Punch_Type_Method");
        console.log(this.base_On_Punch_Type_data);
    };
    AddTimeTableComponent.prototype.necessary_Check_In_Method = function (data) {
        this.necessary_Check_In_data = this.necessary_Check_In[data].name;
        console.log("necessary_Check_In");
        console.log(this.necessary_Check_In_data);
    };
    AddTimeTableComponent.prototype.necessary_Check_OUT_Method = function (data) {
        this.necessary_Check_OUT_data = this.necessary_Check_OUT[data].name;
        console.log("necessary_Check_OUT");
        console.log(this.necessary_Check_OUT_data);
    };
    AddTimeTableComponent.prototype.auto_OT_Check_In_Early_Method = function (data) {
        this.auto_OT_Check_In_Early_data = this.auto_OT_Check_In_Early[data].name;
        console.log("auto_OT_Check_In_Early");
        console.log(this.auto_OT_Check_In_Early_data);
    };
    AddTimeTableComponent.prototype.auto_OT_Check_Out_Delay_Method = function (data) {
        this.auto_OT_Check_Out_Delay_data = this.auto_OT_Check_Out_Delay[data].name;
        console.log("auto_OT_Check_Out_Delay");
        console.log(this.auto_OT_Check_Out_Delay_data);
    };
    AddTimeTableComponent.prototype.type_Method = function (data) {
        this.type_data = data;
        console.log("type");
        console.log(this.type_data);
    };
    /*weekendSelection(truFalse:boolean,data2:any)
    {
      //check the defulat selected values of weekend selection
    
      for (var _i = 0; _i < this.weekend.length; _i++) {
        var data = this.weekend[_i];
        if(data)
        {
          this.weekendString.set(this.weekendTest[_i].name,this.count1)
          this.count1++;
        }
    }
    console.log(this.weekendString)
    if(truFalse)
    {
      let size=this.weekendString.size
      console.log("size is : "+size)
      this.weekendString.set(data2,size++)
    }
    else
    {
      this.weekendString.delete(data2)
    }
    console.log(this.weekendString)
    
    console.log("weekendSelection");
    console.log(truFalse);
    console.log(data2);
    console.log(this.weekend);
    
    
    }
    public display_Department:Boolean=false;
    showDepartment() {
      this.database.getallParentDeparmentDetails();
      
      this.display_Department = true;
    }*/
    AddTimeTableComponent.prototype.get_all_Rule_List = function () {
        //console.log("get_all_Rule_List :Global Rule Component")
        //this.attendanceService.get_Rule_and_GlobalRule_List().subscribe(response=>this.succsess_getALL_Rules_List(response),error=>this.error_getALL_Rules_List(error))
    };
    AddTimeTableComponent.prototype.succsess_getALL_Rules_List = function (response) {
        var e_5, _a;
        var valid_data;
        console.log("succsess_getALL_Rules_List  :  Global Rule Component");
        console.log(response);
        /*this.rule_Name=this.attendanceService.get_rule_Name()
        this.attendanceService.set_rule_Name("");
        console.log(" rule name "+this.rule_Name)
      if(this.rule_Name.length>1)
      {
        this.edit_Flag=true;
        for (let entry of response) {
          console.log("Data : "+entry.name);
          if(entry.name===this.rule_Name)
          valid_data=entry;
        }*/
        console.log(valid_data);
        //weekOff=valid_data.weekend
        //var array = valid_data.weekend
        var array = " ";
        console.log("Arry : " + array);
        var array1 = array.split(' ');
        console.log("Arry1 : " + array1);
        console.log("Arry1 : " + array1.length);
        console.log("Arry1 : " + array1[1]);
        try {
            /*public mon:boolean=true;
            public tue:boolean=false;
            public wed:boolean=false;
            public thu:boolean=false;
            public fri:boolean=false;
            public sat:boolean=false;
            public sun:boolean=true;*/
            for (var array1_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](array1), array1_1_1 = array1_1.next(); !array1_1_1.done; array1_1_1 = array1_1.next()) {
                var entry = array1_1_1.value;
                console.log("heloo");
                /*console.log(entry)
                if(entry=="mon")
                this.mon=true;
                if(entry=="tue")
                this.tue=true;
                if(entry=="wen")
                this.wed=true;
                if(entry=="thu")
                this.thu=true;
                if(entry=="fri")
                this.fri=true;
                if(entry=="sat")
                this.sat=true;
                if(entry=="sun")
                this.sun=true;*/
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (array1_1_1 && !array1_1_1.done && (_a = array1_1.return)) _a.call(array1_1);
            }
            finally { if (e_5) throw e_5.error; }
        }
        /*}
        else
        {
          console.log("heloo")
        }*/
    };
    AddTimeTableComponent.prototype.error_getALL_Rules_List = function (error) {
        console.log("error_getALL_Rules_List  :  Global Rule Component");
        console.log(error);
    };
    AddTimeTableComponent.prototype.showDepartment = function () {
        // this.database.getallParentDeparmentDetails();
        this.display_Department = true;
    };
    AddTimeTableComponent.prototype.checked_Method = function () {
        console.log("checked_Method");
    };
    AddTimeTableComponent.prototype.Not_checked_Method = function () {
        console.log("Not checked_Method");
    };
    AddTimeTableComponent.ctorParameters = function () { return [
        { type: src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__["AttendanceServiceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"] },
        { type: primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"] },
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] }
    ]; };
    AddTimeTableComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-time-table',
            template: __webpack_require__(/*! raw-loader!./add-time-table.component.html */ "./node_modules/raw-loader/index.js!./src/app/attendance/add-time-table/add-time-table.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"], ChecklistDatabase],
            styles: [__webpack_require__(/*! ./add-time-table.component.css */ "./src/app/attendance/add-time-table/add-time-table.component.css")]
        })
    ], AddTimeTableComponent);
    return AddTimeTableComponent;
}());



/***/ }),

/***/ "./src/app/attendance/attendance.component.css":
/*!*****************************************************!*\
  !*** ./src/app/attendance/attendance.component.css ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0dGVuZGFuY2UvYXR0ZW5kYW5jZS5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/attendance/attendance.component.ts":
/*!****************************************************!*\
  !*** ./src/app/attendance/attendance.component.ts ***!
  \****************************************************/
/*! exports provided: AddAttendance, SerialNumberModel, TodoItemNode, TodoItemFlatNode, ChecklistDatabase, AttendanceComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddAttendance", function() { return AddAttendance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SerialNumberModel", function() { return SerialNumberModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttendanceComponent", function() { return AttendanceComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/service/personnel/personnel.service */ "./src/app/service/personnel/personnel.service.ts");




//declare let jsPDF:any;








;


var jsPDF = __webpack_require__(/*! jspdf */ "./node_modules/jspdf/dist/jspdf.min.js");
__webpack_require__(/*! jspdf-autotable */ "./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js");
var AddAttendance = /** @class */ (function () {
    function AddAttendance(department, name) {
        this.department = department;
        this.name = name;
    }
    AddAttendance.ctorParameters = function () { return [
        { type: String },
        { type: String }
    ]; };
    return AddAttendance;
}());

var SerialNumberModel = /** @class */ (function () {
    function SerialNumberModel(Serial_Number) {
        this.Serial_Number = Serial_Number;
    }
    SerialNumberModel.ctorParameters = function () { return [
        { type: String }
    ]; };
    return SerialNumberModel;
}());

var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service) {
        this.service = service;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_10__["BehaviorSubject"]([]);
        this.getallAreasFromServer();
        console.log("before Initializing");
        console.log(TREE_DATA);
        console.log("After Initializing");
        console.log("First Constructor Finished" + TREE_DATA);
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallAreasFromServer = function () {
        var _this = this;
        console.log("getallAreasFromServer");
        this.service.getAlPersonnelDetailsBegining().subscribe(function (response) { return _this.succsess(response); }, function (error) { return _this.errorHandlin(error); });
    };
    ChecklistDatabase.prototype.succsess = function (response) {
        console.log("Succes");
        console.log("TREE DATA-------------");
        console.log(TREE_DATA);
        console.log("response--------------");
        console.log(response);
        TREE_DATA = response;
        console.log("responses----------------Changed to TREE_DATA");
        console.log(TREE_DATA);
        this.initialize();
    };
    ChecklistDatabase.prototype.errorHandlin = function (error) {
        console.log("Eroor");
    };
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_13__["PersonnelService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var AttendanceComponent = /** @class */ (function () {
    function AttendanceComponent(deviceService, messageService, confirmationService, PersonnelService, database, service, dialog, router) {
        var _this = this;
        this.deviceService = deviceService;
        this.messageService = messageService;
        this.confirmationService = confirmationService;
        this.PersonnelService = PersonnelService;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.timeZoneForm = _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormGroup"];
        this.errordisplayflag = false;
        this.pagenum = 15;
        this.sum = 0;
        this.sumOriginal = 10;
        this.totalRecords = 0;
        this.count = 1;
        this.msgs = [];
        this.MySum = [];
        this.display = false;
        this.parentArea = "abcd";
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_7__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_9__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_8__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_9__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
    }
    AttendanceComponent.prototype.showDialog = function () {
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    AttendanceComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    AttendanceComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    AttendanceComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    AttendanceComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    AttendanceComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    AttendanceComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    AttendanceComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    AttendanceComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    AttendanceComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    AttendanceComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.parentArea = event.value;
    };
    AttendanceComponent.prototype.getaddDeviceForm = function (event) {
        //let obj:addDeciceModel=new addDeciceModel(event.value['devicename'],event.value['serialnumber'],event.value['ipaddress'],event.value['portnumber'],event.value['parentarea'],"GMT"+event.value['timezone'],null,null,null,null)
        console.log("add deviceform");
        //console.log(event);
        //console.log(event.value['areacode'])  
        //console.log(obj);
        //let JsonData=JSON.stringify(obj)
        //console.log("JsonData");
        //console.log(JsonData);
        //this.service.postAddDeviceDetails(obj).subscribe(response=>this.success1(response),error=>this.error1(error));
    };
    AttendanceComponent.prototype.success1 = function (response) {
        console.log("success1");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Sucsses") {
            console.log("if sucsess");
            this.router.navigate(['device']);
        }
        else {
            this.errordisplayflag = true;
        }
    };
    AttendanceComponent.prototype.error1 = function (error) {
        console.log("error1");
        console.log(error);
        this.errorDta = "Server Not Responding,Please try Again";
        this.errordisplayflag = true;
    };
    AttendanceComponent.prototype.displayfalse = function () {
        console.log("display false" + this.parentArea);
        this.parentArea = null;
        this.display = false;
    };
    //constructor(private router: Router,private deviceService:DeviceserviceService,private messageService: MessageService,private confirmationService: ConfirmationService) { }
    AttendanceComponent.prototype.ngOnInit = function () {
        this.initialmethod();
        // console.log("ng init")
        this.cols = [
            { field: 'name', header: 'Name', width: '30%' },
            { field: 'department', header: 'Department', width: '35%' },
            { field: 'Action', header: '', width: '30%' }
        ];
    };
    AttendanceComponent.prototype.initialmethod = function () {
        var _this = this;
        this.PersonnelService.getAllAttendanceDetailsBegining().subscribe(function (response) { return _this.handleSuccess1(response); }, function (error) { return _this.handleError1(error); });
    };
    AttendanceComponent.prototype.handleSuccess1 = function (response) {
        console.log("handleSuccess");
        this.attendance = response;
    };
    AttendanceComponent.prototype.handleError1 = function (error) {
        console.log("handle  Error");
        console.log(error);
    };
    AttendanceComponent.prototype.success1D = function (response) {
        var _this = this;
        console.log("success1");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Sucsses") {
            console.log("if sucsess");
            this.router.navigate(['device']);
        }
        else {
            this.errordisplayflag = true;
            this.deviceService.getDeviceDetailsAtBeginning().subscribe(function (response) { return _this.handleSuccess1(response); }, function (error) { return _this.handleError1(error); });
        }
    };
    AttendanceComponent.prototype.error1D = function (error) {
        console.log("error1");
        console.log(error);
        this.errorDta = "Server Not Responding,Please try Again";
        this.errordisplayflag = true;
    };
    AttendanceComponent.prototype.onRowEditInit = function (car) {
        console.log("onRowEditInit");
        // this.clonedCars[car.vin] = {...car};
    };
    AttendanceComponent.prototype.onRowEditSave = function (device) {
        console.log("onRowEditSave");
        console.log(this.parentArea);
        console.log(device);
        console.log(device['device_enable']);
        // let obj:addDeciceModel=new addDeciceModel(device['device_Name'],device['Serial_Number'],device['ip_address'],device['port_no'],device['area_id'],device['time_zone'],null,null,null,null)
        //console.log(obj)
        /*this.deviceService.deviceEdit(obj).subscribe(
          response=>this.success1(response),
          error=>this.error1(error))*/
    };
    AttendanceComponent.prototype.onRowEditCancel = function (car, index) {
        console.log("onRowEditCancel");
    };
    AttendanceComponent.prototype.onRowRemove = function (device, index) {
        var _this = this;
        console.log("rowData");
        //console.log(device.Serial_Number)
        //let obj:SerialNumberModel=new SerialNumberModel(device.Serial_Number)
        //console.log(obj)
        console.log("ri");
        console.log(index);
        this.confirmationService.confirm({
            message: 'Are you sure that you want to proceed?',
            header: 'Confirmation',
            icon: 'pi pi-exclamation-triangle',
            accept: function () {
                _this.msgs = [{ severity: 'info', summary: 'Confirmed', detail: 'You have accepted' }];
                console.log("YES");
                /*    this.deviceService.DeleteDevice(obj).subscribe(
                      response=>this.success1D(response),
                      error=>this.error1D(error))*/
            },
            reject: function () {
                _this.msgs = [{ severity: 'info', summary: 'Rejected', detail: 'You have rejected' }];
                console.log("NOS");
            }
        });
    };
    AttendanceComponent.prototype.showSuccess = function () {
        this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
    };
    AttendanceComponent.prototype.mytabledetails = function (table) {
        this.totalRecords = table._totalRecords;
        //console.log(table)
        var filterValue = table.filteredValue;
        var sum1 = 0;
        var year;
        var year1;
        //console.log("filter value")
        //console.log(filterValue)
        if (filterValue && filterValue.length != 0) {
            //console.log("filtered value  "+table.filteredValue[0]['year'])
            sum1 = 0;
            this.sum = 0;
            for (var i = 0; i < table.filteredValue.length; i++) {
                //console.log(table.filteredValue[i]['year'])
                year = table.filteredValue[i]['year'];
                year1 = parseInt(year);
                sum1 = sum1 + year1;
                this.sum = sum1;
            }
            //console.log("The sum is "+sum1)
        }
        else {
            //console.log("no filter value")
            this.sum = 0;
            sum1 = 0;
            for (var i = 0; i < table._totalRecords; i++) {
                //console.log(this.tableData[i]['year'])
                sum1 = sum1 + parseInt(table._value[i]['year']);
                //console.log("sum ="+this.sum)
                this.sum = sum1;
            }
            //console.log("Else some "+this.sum)
        }
    };
    AttendanceComponent.prototype.mypdfconvert = function (mytable) {
        //console.log(mytable)
        var arrayOfArray = jquery__WEBPACK_IMPORTED_MODULE_4__('table tr').map(function () {
            return [
                jquery__WEBPACK_IMPORTED_MODULE_4__('td', this).map(function () {
                    return jquery__WEBPACK_IMPORTED_MODULE_4__(this).text();
                }).get()
            ];
        });
        //console.log("arrayOfArray")
        //console.log(arrayOfArray)
        var columnLength = arrayOfArray.length;
        var rowLength = arrayOfArray[0].length;
        if (rowLength === 0) {
            rowLength = arrayOfArray[2].length;
            //console.log("row lengtgh "+rowLength)
            //console.log("column lengtgh "+columnLength)
        }
        var doc = new jsPDF();
        var col = ["Device Name", "Serial Number", "Ip Address", "Area Name", "Stats", "Last Activity", "Device Model", "Firmware Version",
            "User Count", "FP Count", "Fcae Count", "FV Count", "Palm Count"];
        var col1 = ["Company1", "Contact", "Country"];
        var rows = [];
        var count = 1;
        for (var j = 0; j < columnLength; j++) {
            var temp = [];
            for (var i = 0; i < rowLength - 1; i++) {
                if ((arrayOfArray[j].length) == 0) {
                    //console.log("lenth is ZEROo")
                }
                else {
                    //console.log("not ZERo")
                    var data = arrayOfArray[j][i];
                    temp.push(arrayOfArray[j][i]);
                }
            }
            if ((arrayOfArray[j].length) != 0) {
                rows.push(temp);
            }
        }
        //console.log(rows)
        doc.autoTable(col, rows);
        doc.save('Test.pdf');
    };
    AttendanceComponent.prototype.showDialog1 = function () {
        this.display = true;
    };
    AttendanceComponent.prototype.assignValu = function () {
        console.log("assiagn value");
        this.display = false;
    };
    AttendanceComponent.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_12__["DeviceserviceService"] },
        { type: primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"] },
        { type: primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_13__["PersonnelService"] },
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_12__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_11__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"] }
    ]; };
    AttendanceComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-attendance',
            template: __webpack_require__(/*! raw-loader!./attendance.component.html */ "./node_modules/raw-loader/index.js!./src/app/attendance/attendance.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"], ChecklistDatabase],
            styles: [__webpack_require__(/*! ./attendance.component.css */ "./src/app/attendance/attendance.component.css")]
        })
    ], AttendanceComponent);
    return AttendanceComponent;
}());



/***/ }),

/***/ "./src/app/attendance/break-time-table-list/break-time-table-list.component.css":
/*!**************************************************************************************!*\
  !*** ./src/app/attendance/break-time-table-list/break-time-table-list.component.css ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0dGVuZGFuY2UvYnJlYWstdGltZS10YWJsZS1saXN0L2JyZWFrLXRpbWUtdGFibGUtbGlzdC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/attendance/break-time-table-list/break-time-table-list.component.ts":
/*!*************************************************************************************!*\
  !*** ./src/app/attendance/break-time-table-list/break-time-table-list.component.ts ***!
  \*************************************************************************************/
/*! exports provided: TodoItemNode, TodoItemFlatNode, ChecklistDatabase, BreakTimeTableListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BreakTimeTableListComponent", function() { return BreakTimeTableListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/service/personnel/personnel.service */ "./src/app/service/personnel/personnel.service.ts");
/* harmony import */ var src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/service/attendance/attendance-service.service */ "./src/app/service/attendance/attendance-service.service.ts");
/* harmony import */ var _Model_TimeTableModels__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../Model/TimeTableModels */ "./src/app/attendance/Model/TimeTableModels.ts");











;




var jsPDF = __webpack_require__(/*! jspdf */ "./node_modules/jspdf/dist/jspdf.min.js");
__webpack_require__(/*! jspdf-autotable */ "./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js");
var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service, PersonnelService) {
        this.service = service;
        this.PersonnelService = PersonnelService;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_9__["BehaviorSubject"]([]);
        // this.getallParentDepartmentServer();
        /* console.log("before Initializing")
         console.log(TREE_DATA)
         console.log("After Initializing")
          console.log("First Constructor Finished"+TREE_DATA)*/
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    /*  getallParentDepartmentServer(){
        console.log("getallParentDepartmentServer")
        this.PersonnelService.getAllParentDepartmentDetailsBegining().subscribe(response=>this.succsess(response),error=>this.errorHandlin(error))
      }*/
    /*succsess(response)
    {
      console.log("Succes");
      console.log("TREE DATA-------------");
      console.log(TREE_DATA);
      console.log("response--------------");
      console.log(response);
      TREE_DATA=response;
      console.log("responses----------------Changed to TREE_DATA");
      console.log(TREE_DATA);
      this.initialize();
    }*/
    /* errorHandlin(error)
       {
         console.log("Eroor");
       }*/
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var BreakTimeTableListComponent = /** @class */ (function () {
    function BreakTimeTableListComponent(attendanceService, personnel_service, deviceService, messageService, confirmationService, database, service, dialog, router) {
        var _this = this;
        this.attendanceService = attendanceService;
        this.personnel_service = personnel_service;
        this.deviceService = deviceService;
        this.messageService = messageService;
        this.confirmationService = confirmationService;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.Break_Time_Table_Name = "";
        this.timeZoneForm = _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"];
        this.errordisplayflag = false;
        this.pagenum = 15;
        this.sum = 0;
        this.sumOriginal = 10;
        this.totalRecords = 0;
        this.count = 1;
        this.msgs = [];
        this.MySum = [];
        this.display = false;
        this.parentArea = "";
        this.parentDepartment = "";
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
    }
    BreakTimeTableListComponent.prototype.showDialog = function () {
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    BreakTimeTableListComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    BreakTimeTableListComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    BreakTimeTableListComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    BreakTimeTableListComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    BreakTimeTableListComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    BreakTimeTableListComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    BreakTimeTableListComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    BreakTimeTableListComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    BreakTimeTableListComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    BreakTimeTableListComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.parentDepartment = event.value;
    };
    BreakTimeTableListComponent.prototype.Edit_Department_success = function (response) {
        console.log("Edit_Department_success");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Sucsses") {
            console.log("if sucsess  Edit_Department_success");
            this.initialmethod();
            this.router.navigate(['department']);
        }
        else {
            console.log("if else sucsess  Edit_Department_success");
            this.errordisplayflag = true;
        }
    };
    BreakTimeTableListComponent.prototype.Department_edit_error = function (error) {
        console.log("error1");
        console.log(error);
        this.errorDta = "Server Not Responding,Please try Again";
        this.errordisplayflag = true;
    };
    BreakTimeTableListComponent.prototype.displayfalse = function () {
        console.log("display false" + this.parentArea);
        this.parentArea = null;
        this.display = false;
    };
    //constructor(private router: Router,private deviceService:DeviceserviceService,private messageService: MessageService,private confirmationService: ConfirmationService) { }
    BreakTimeTableListComponent.prototype.ngOnInit = function () {
        this.initialmethod();
        // console.log("ng init")
        this.cols = [
            { field: 'break_time_table_Name', header: 'Name', width: '25%' },
            { field: 'start_Time', header: 'Start Time ', width: '30%' },
            { field: 'end_Time', header: 'End Time', width: '30%' },
            { field: 'break_Time', header: 'Break Time', width: '30%' },
            { field: 'base_On_Punch_Type', header: 'Based On Punch Type', width: '20%' },
            { field: ' ', header: 'Action', width: '35%' }
        ];
    };
    BreakTimeTableListComponent.prototype.initialmethod = function () {
        var _this = this;
        this.attendanceService.Get_Break_Time_Table_List().subscribe(function (response) { return _this.Successs1(response); }, function (error) { return _this.Error1(error); });
    };
    BreakTimeTableListComponent.prototype.Successs1 = function (response) {
        var e_1, _a;
        console.log("Success Break Time TAble List");
        console.log(response);
        var jsonArray;
        var count = 0;
        try {
            for (var response_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](response), response_1_1 = response_1.next(); !response_1_1.done; response_1_1 = response_1.next()) {
                var entry = response_1_1.value;
                console.log("Before");
                console.log(entry);
                entry.primary_id = count++;
                console.log("After");
                console.log(entry);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (response_1_1 && !response_1_1.done && (_a = response_1.return)) _a.call(response_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        console.log(response);
        this.allRules = response;
    };
    BreakTimeTableListComponent.prototype.Error1 = function (error) {
        console.log("handle  Error Break Time Table List");
        console.log(error);
    };
    BreakTimeTableListComponent.prototype.Delete_success = function (response) {
        console.log("success break time table delete ");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Sucsses") {
            console.log("if sucsess");
            this.initialmethod();
            this.router.navigate(['breakTimeTableList']);
        }
        else {
            this.errordisplayflag = true;
            this.initialmethod();
        }
    };
    BreakTimeTableListComponent.prototype.Delete_error = function (error) {
        console.log("Department_Delete_error");
        console.log(error);
        this.errorDta = "Server Not Responding,Please try Again";
        this.errordisplayflag = true;
    };
    BreakTimeTableListComponent.prototype.onRowEditInit = function (data) {
        console.log("onRowEditInit");
        console.log(data);
        this.Break_Time_Table_Name = data.break_time_table_Name;
        console.log(this.Break_Time_Table_Name);
    };
    BreakTimeTableListComponent.prototype.onRowEditSave = function () {
        console.log("onRowEditSave");
        this.attendanceService.set_breakTimetable_Name(this.Break_Time_Table_Name);
        this.router.navigate(['addbreakTimeTable']);
    };
    BreakTimeTableListComponent.prototype.onRowEditCancel = function (index) {
        console.log("onRowEditCancel");
    };
    BreakTimeTableListComponent.prototype.onRowRemove = function (department, index) {
        var _this = this;
        console.log("onRowRemove");
        //console.log(device.Serial_Number)
        //console.log(obj)
        this.confirmationService.confirm({
            message: 'Are you sure that you want to proceed?',
            header: 'Confirmation',
            icon: 'pi pi-exclamation-triangle',
            accept: function () {
                _this.msgs = [{ severity: 'info', summary: 'Confirmed', detail: 'You have accepted' }];
                console.log("YES");
                var obj = new _Model_TimeTableModels__WEBPACK_IMPORTED_MODULE_14__["DeleteBreakTimetableModel"](_this.Break_Time_Table_Name);
                console.log(obj);
                _this.attendanceService.Delete_Break_Time_Table(obj).subscribe(function (response) { return _this.Delete_success(response); }, function (error) { return _this.Delete_error(error); });
            },
            reject: function () {
                _this.msgs = [{ severity: 'info', summary: 'Rejected', detail: 'You have rejected' }];
                console.log("NOS");
            }
        });
    };
    BreakTimeTableListComponent.prototype.showSuccess = function () {
        this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
    };
    BreakTimeTableListComponent.prototype.showDialog1 = function () {
        this.display = true;
    };
    BreakTimeTableListComponent.prototype.assignValu = function () {
        console.log("assiagn value");
        this.display = false;
    };
    BreakTimeTableListComponent.ctorParameters = function () { return [
        { type: src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__["AttendanceServiceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"] },
        { type: primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"] },
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] }
    ]; };
    BreakTimeTableListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-break-time-table-list',
            template: __webpack_require__(/*! raw-loader!./break-time-table-list.component.html */ "./node_modules/raw-loader/index.js!./src/app/attendance/break-time-table-list/break-time-table-list.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"], ChecklistDatabase],
            styles: [__webpack_require__(/*! ./break-time-table-list.component.css */ "./src/app/attendance/break-time-table-list/break-time-table-list.component.css")]
        })
    ], BreakTimeTableListComponent);
    return BreakTimeTableListComponent;
}());



/***/ }),

/***/ "./src/app/attendance/global-rule/global-rule.component.css":
/*!******************************************************************!*\
  !*** ./src/app/attendance/global-rule/global-rule.component.css ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0dGVuZGFuY2UvZ2xvYmFsLXJ1bGUvZ2xvYmFsLXJ1bGUuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/attendance/global-rule/global-rule.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/attendance/global-rule/global-rule.component.ts ***!
  \*****************************************************************/
/*! exports provided: TodoItemNode, TodoItemFlatNode, ChecklistDatabase, GlobalRuleComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GlobalRuleComponent", function() { return GlobalRuleComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/service/personnel/personnel.service */ "./src/app/service/personnel/personnel.service.ts");
/* harmony import */ var src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/service/attendance/attendance-service.service */ "./src/app/service/attendance/attendance-service.service.ts");











;




var jsPDF = __webpack_require__(/*! jspdf */ "./node_modules/jspdf/dist/jspdf.min.js");
__webpack_require__(/*! jspdf-autotable */ "./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js");
var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service, personnel_service, attendanceService) {
        //this.getallParentPositionFromServer();
        this.service = service;
        this.personnel_service = personnel_service;
        this.attendanceService = attendanceService;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_9__["BehaviorSubject"]([]);
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallParentDeparmentDetails = function () {
        var _this = this;
        //console.log("getallAreasFromServer")
        console.log("getall Parent Department :addpersonnel");
        this.personnel_service.getAllParentDepartmentDetailsBegining().subscribe(function (response) { return _this.succsess_getALLParentDepartment(response); }, function (error) { return _this.error__getALLParentDepartment(error); });
    };
    ChecklistDatabase.prototype.succsess_getALLParentDepartment = function (response) {
        console.log("succsess_getALLParentDepartment addPersonel");
        console.log("TREE DATA-------------");
        console.log(TREE_DATA);
        console.log("response--------------");
        console.log(response);
        TREE_DATA = response;
        console.log("responses----------------Changed to TREE_DATA");
        console.log(TREE_DATA);
        this.initialize();
    };
    ChecklistDatabase.prototype.error__getALLParentDepartment = function (error) {
        console.log("Eroor  getALLParentDepartment  addpersonel");
    };
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] },
        { type: src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__["AttendanceServiceService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var GlobalRuleComponent = /** @class */ (function () {
    function GlobalRuleComponent(attendanceService, personnel_service, deviceService, messageService, confirmationService, database, service, dialog, router) {
        var _this = this;
        this.attendanceService = attendanceService;
        this.personnel_service = personnel_service;
        this.deviceService = deviceService;
        this.messageService = messageService;
        this.confirmationService = confirmationService;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        //check in rule  
        this.check_In_Rule_array = [
            { id: 0, name: "Base On Schedule" },
            { id: 1, name: "First Check In" }
        ];
        this.check_In_Rule_init = 0;
        this.check_In_Rule_data = this.check_In_Rule_array[this.check_In_Rule_init].id;
        //check out rule
        this.check_Out_Rule_array = [
            { id: 0, name: "Base On Schedule" },
            { id: 1, name: "Last Check Out" }
        ];
        this.check_Out_Rule_init = 1;
        this.check_Out_Rule_data = this.check_Out_Rule_array[this.check_Out_Rule_init].id;
        //over time rule
        this.Overtime_Rule_array = [
            { id: 0, name: "Auto OT" },
            { id: 1, name: "NO OT" }
        ];
        this.Overtime_Rule_init = 1;
        this.Overtime_Rule_data = this.Overtime_Rule_array[this.Overtime_Rule_init].id;
        this.punchPeriod = 8;
        // weekend setting
        this.weekendTest = [
            { id: 0, name: "mon", data: true },
            { id: 1, name: "tue", data: false },
            { id: 2, name: "wen", data: true },
            { id: 3, name: "thu", data: false },
            { id: 4, name: "fri", data: true },
            { id: 5, name: "sat", data: false },
            { id: 6, name: "sun", data: false }
        ];
        this.mon = false;
        this.tue = false;
        this.wed = false;
        this.thu = false;
        this.fri = false;
        this.sat = false;
        this.sun = false;
        //public  weekend: boolean[] =boolean [];
        //weekend:boolean[] = new Array(this.mon,this.tue,this.wed,this.wed,this.fri,this.sat,this.sun)
        this.weekend = new Array(this.weekendTest[0].data, this.weekendTest[1].data, this.weekendTest[2].data, this.weekendTest[3].data, this.weekendTest[4].data, this.weekendTest[5].data, this.weekendTest[6].data);
        //calculation 
        this.there_is_No_check_in = [
            { id: 0, name: "Late" },
            { id: 1, name: "Absent" },
            { id: 2, name: "No Complete" },
        ];
        this.there_is_No_check_in_init = 2;
        this.there_is_No_check_in_data = "" + this.there_is_No_check_in[this.there_is_No_check_in_init].id;
        this.there_is_No_check_in_Minutes = 60;
        this.there_is_No_check_out = [
            { id: 0, name: "Early Leave" },
            { id: 1, name: "Absent" },
            { id: 2, name: "No Complete" },
        ];
        this.there_is_No_check_out_init = 2;
        this.there_is_No_check_out_data = "" + this.there_is_No_check_out[this.there_is_No_check_out_init].id;
        this.there_is_No_check_out_Minutes = 60;
        this.Require_Check_In_on_leave_period = [
            { id: 0, name: "Must Punch" },
            { id: 1, name: "Use leave end time" }
        ];
        this.Require_Check_In_on_leave_period_init = 1;
        this.Require_Check_In_on_leave_period_data = this.Require_Check_In_on_leave_period[this.Require_Check_In_on_leave_period_init].id;
        this.Require_Check_Out_on_leave_period = [
            { id: 0, name: "Must Punch" },
            { id: 1, name: "Use leave start time" }
        ];
        this.Require_Check_Out_on_leave_period_init = 1;
        this.Require_Check_Out_on_leave_period_data = this.Require_Check_Out_on_leave_period[this.Require_Check_Out_on_leave_period_init].id;
        this.Require_Check_In_on_training_period = [
            { id: 0, name: "Must Punch" },
            { id: 1, name: "Use leave end time" }
        ];
        this.Require_Check_In_on_training_period_init = 1;
        this.Require_Check_In_on_training_period_data = this.Require_Check_In_on_training_period[this.Require_Check_In_on_training_period_init].id;
        this.Require_Check_Out_on_training_period = [
            { id: 0, name: "Must Punch" },
            { id: 1, name: "Use leave start time" }
        ];
        this.Require_Check_Out_on_training_period_init = 1;
        this.Require_Check_Out_on_training_period_data = this.Require_Check_Out_on_training_period[this.Require_Check_Out_on_training_period_init].id;
        this.check_in = 0;
        this.Check_Out = 0;
        this.Break_Out = 0;
        this.Break_In = 0;
        this.OT_In = 0;
        this.OT_Out = 0;
        //Overtime_Rule_init:Number=1;
        this.parentDepartment = "";
        this.timeZoneForm = _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"];
        this.errordisplayflag = false;
        this.pagenum = 15;
        this.sum = 0;
        this.sumOriginal = 10;
        this.totalRecords = 0;
        this.count = 1;
        this.msgs = [];
        this.MySum = [];
        this.display = false;
        this.parentPosition = "";
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        /*checkInClick(event:any)
        {
          console.log("check in click")
         this.check_In_Rule_init=3;
          this.check_In_Rule_=event.target.value;
          console.log("check_In_Rule :" +this.check_In_Rule)
        }*/
        this.oppoSuits = ['Men', 'Women', 'Boys', 'Inspiration'];
        this.lateExceed = 100;
        this.earlyLeaveExceed = 60;
        this.weekendString = new Map();
        this.count1 = 0;
        this.display_Department = false;
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
        this.router.events.subscribe(function (e) {
            if (e instanceof _angular_router__WEBPACK_IMPORTED_MODULE_4__["NavigationEnd"]) {
                // Function you want to call here
                console.log("after Loading all DATA");
            }
        });
        //this.getAllRule_data_to_AllVaraiables();
    }
    GlobalRuleComponent.prototype.globalRule = function (data) {
        console.log(data);
    };
    /*ionViewDidLoad(){
     setTimeout(() => {
         alert('Hello...')
     }, 5000);
   }*/
    GlobalRuleComponent.prototype.getAllRule_data_to_AllVaraiables = function () {
        console.log("getAllRule_data_to_AllVaraiables  ");
        // let valid_data=this.attendanceService.get_globalRule_Passed_Data()
        // console.log("getAllRule_data_to_AllVaraiables  valid_data : "+valid_data)
    };
    GlobalRuleComponent.prototype.showDialog = function () {
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    GlobalRuleComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    GlobalRuleComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    GlobalRuleComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    GlobalRuleComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    GlobalRuleComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    GlobalRuleComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    GlobalRuleComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    GlobalRuleComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    GlobalRuleComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    GlobalRuleComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.parentDepartment = event.value;
    };
    /* getaddDeviceForm(event:NgForm)
     {
    let obj:addDeciceModel=new addDeciceModel(event.value['devicename'],event.value['serialnumber'],event.value['ipaddress'],event.value['portnumber'],event.value['parentarea'],"GMT"+event.value['timezone'],null,null,null,null)
    console.log("add deviceform");
    //console.log(event);
    //console.log(event.value['areacode'])
    console.log(obj);
    //let JsonData=JSON.stringify(obj)
    //console.log("JsonData");
    //console.log(JsonData);
    this.service.postAddDeviceDetails(obj).subscribe(response=>this.success1(response),error=>this.error1(error));
    }*/
    /*editPosition_success(response)
     {
       console.log("position   :  editPosition_success ")
       console.log(response.responce_data)
     // responce_data
      this.errorDta=response.responce_data;
      if(this.errorDta==="Sucsses")
      {
        console.log("if sucsess")
       
        this.personnel_service. getAllPositionDetailsBegining().subscribe(
          response=>this.getAll_GlobalRule_Details_Begining_Success(response),
          error=>this.getAll_Position_Details_Begining_Error(error)
        )
        this.router.navigate(['position']);
      }
      else
      {
       this.errordisplayflag=true;
      }
     }
     editPosition_error(error)
    {
      console.log("position   :  editPosition_Error ")
     console.log(error);
     this.errorDta="Server Not Responding,Please try Again"
     this.errordisplayflag=true;
    
    }*/
    GlobalRuleComponent.prototype.displayfalse = function () {
        console.log("display false" + this.parentPosition);
        this.parentPosition = null;
        this.display = false;
    };
    //constructor(private router: Router,private deviceService:DeviceserviceService,private messageService: MessageService,private confirmationService: ConfirmationService) { }
    GlobalRuleComponent.prototype.ngOnInit = function () {
        this.initialmethod();
        // console.log("ng init")
        this.cols = [
            { field: 'position_No', header: 'Position No', width: '25%' },
            { field: 'position_name', header: 'Position Name', width: '30%' },
            { field: 'parent_position', header: 'Parent Position', width: '28%' },
            { field: 'Employee Count', header: 'Employee Ccount', width: '17%' },
            { field: ' ', header: 'Action', width: '35%' }
        ];
        console.log("ngOnInit");
        //this.getAllRule_data_to_AllVaraiables()
        this.get_all_Rule_List();
    };
    GlobalRuleComponent.prototype.initialmethod = function () {
        /* this.attendanceService. getGlobalRule().subscribe(
           response=>this.getAll_GlobalRule_Details_Begining_Success(response),
           error=>this.getAll_Position_Details_Begining_Error(error)
         )*/
        this.attendanceService.set_rule_Name("");
    };
    GlobalRuleComponent.prototype.getAll_Position_Details_Begining_Error = function (error) {
        console.log("handle  Error getAllDepartmentDetailsBegining");
        console.log(error);
    };
    GlobalRuleComponent.prototype.positionDelete_success = function (response) {
        console.log("positionDelete_success : success");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Sucsses") {
            console.log("if sucsess");
            //this.router.navigate(['position']);
        }
        else {
            this.initialmethod();
        }
    };
    GlobalRuleComponent.prototype.positionDelete_error = function (error) {
        console.log("positionDelete  Error");
        console.log(error);
        this.errorDta = "Server Not Responding,Please try Again";
        this.errordisplayflag = true;
    };
    /*onRowEditInit(position: addPositionModel) {
      console.log("onRowEditInit position")
     console.log(position)
     this.oldPositionNumber=(position['position_No'])
     console.log("Old Position Number is New "+this.oldPositionNumber)
     this.parentPosition=(position['parent_position'])
     console.log("Parent Position : "+this.parentPosition)
    }*/
    GlobalRuleComponent.prototype.onRowEditSave = function (globalRule) {
        console.log("Save");
        // console.log(this.parentPosition)
        console.log(globalRule);
        console.log("test 1 : " + this.check_In_Rule_data);
        /*let obj:editPositionModel=new editPositionModel(this.oldPositionNumber,position['position_No'],position['position_name'],this.parentPosition)
        console.log("Edit position JSON DTA")
        console.log(obj)
        
        
        
        this.personnel_service.editPosition(obj).subscribe(
          response=>this.editPosition_success(response),
          error=>this.editPosition_error(error))*/
    };
    GlobalRuleComponent.prototype.onclick = function () {
        console.log("onclick");
        //console.log(data)
    };
    /*onRowEditCancel(position: addPositionModel, index: number) {
      console.log("onRowEditCancel")
    }*/
    /*onRowRemove(position : addPositionModel, index: number)
    {
    console.log("Position : onRowRemove")
    //console.log(device.Serial_Number)
    let obj:positionNumberModel=new positionNumberModel(this.oldPositionNumber)
    console.log(obj)
    
    this.confirmationService.confirm({
      message: 'Are you sure that you want to proceed?',
      header: 'Confirmation',
      icon: 'pi pi-exclamation-triangle',
      accept: () => {
          this.msgs = [{severity:'info', summary:'Confirmed', detail:'You have accepted'}];
          console.log("YES")
          this.personnel_service.DeletePosition(obj).subscribe(
            response=>this.positionDelete_success(response),
            error=>this.positionDelete_error(error))
    
      },
      reject: () => {
          this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];
          console.log("NOS")
      }
    });
    
    }*/
    GlobalRuleComponent.prototype.showSuccess = function () {
        this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
    };
    GlobalRuleComponent.prototype.showDialog1 = function () {
        this.display = true;
    };
    GlobalRuleComponent.prototype.assignValu = function () {
        console.log("assiagn value");
        this.display = false;
    };
    GlobalRuleComponent.prototype.myFunction = function () {
        console.log("click ME");
    };
    GlobalRuleComponent.prototype.submitFormData = function (event) {
        console.log("click ME");
        console.log(event);
    };
    GlobalRuleComponent.prototype.submitFormData1 = function (event) {
        var _this = this;
        console.log("click ME 1");
        // console.log(event)
        // console.log(this.fullName)
        console.log(this.mon);
        var weekOff = "";
        if (this.mon)
            weekOff = weekOff + "mon";
        if (this.tue)
            weekOff = weekOff + " " + "tue";
        if (this.wed)
            weekOff = weekOff + " " + "wen";
        if (this.thu)
            weekOff = weekOff + " " + "thu";
        if (this.fri)
            weekOff = weekOff + " " + "fri";
        if (this.sat)
            weekOff = weekOff + " " + "sat";
        if (this.sun)
            weekOff = weekOff + " " + "sun";
        console.log(weekOff);
        console.log(this.lateExceed + "" + this.earlyLeaveExceed);
        var obj = new src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__["GlobalRuleModel"](this.check_In_Rule_data, this.check_Out_Rule_data, this.Overtime_Rule_data, "Global", "Global", this.punchPeriod, weekOff, this.lateExceed, this.earlyLeaveExceed, this.there_is_No_check_in_data, this.there_is_No_check_in_Minutes, this.there_is_No_check_out_data, this.there_is_No_check_out_Minutes, this.check_in, this.Check_Out, this.Break_In, this.OT_In, this.OT_Out, this.Break_Out, true, this.parentDepartment);
        console.log("ALL DATA ");
        console.log(obj);
        this.attendanceService.addRule_and_GlobalRule(obj).subscribe(function (response) { return _this.success_addRule(response); }, function (error) { return _this.error_addRule(error); });
    };
    GlobalRuleComponent.prototype.success_addRule = function (response) {
        console.log("success_addRule : Global Rule Componet");
        console.log(response);
        this.router.navigate(['rules']);
    };
    GlobalRuleComponent.prototype.error_addRule = function (error) {
        console.log("error_addRule : Global Rule Componet");
        console.log(error);
    };
    GlobalRuleComponent.prototype.onClickSubmit = function (data) {
        console.log(data);
    };
    GlobalRuleComponent.prototype.checkInRuleMethod = function (data) {
        this.check_In_Rule_data = data;
        console.log("checkInRuleMethod   " + this.check_In_Rule_data);
    };
    GlobalRuleComponent.prototype.checkOutRuleMethod = function (data) {
        this.check_Out_Rule_data = data;
        console.log("checkOutRuleMethod   " + this.check_Out_Rule_data);
    };
    GlobalRuleComponent.prototype.overTimeRuleMethod = function (data) {
        this.Overtime_Rule_data = data;
        console.log("overTimeRuleMethod   " + this.Overtime_Rule_data);
        console.log(this.punchPeriod);
    };
    GlobalRuleComponent.prototype.there_is_No_check_in_method = function (data) {
        this.there_is_No_check_in_data = data;
        console.log("there_is_No_check_in_method   " + this.there_is_No_check_in_data);
        console.log(this.there_is_No_check_in_data);
    };
    GlobalRuleComponent.prototype.there_is_No_check_out_method = function (data) {
        this.there_is_No_check_out_data = data;
        console.log("there_is_No_check_out_method   " + this.there_is_No_check_out_data);
        console.log(this.there_is_No_check_out_data);
    };
    GlobalRuleComponent.prototype.Require_Check_In_on_leave_period_method = function (data) {
        this.Require_Check_In_on_leave_period_data = data;
        console.log("Require_Check_In_on_leave_period_method   " + this.Require_Check_In_on_leave_period_data);
        console.log(this.Require_Check_In_on_leave_period_data);
    };
    GlobalRuleComponent.prototype.Require_Check_Out_on_leave_period_method = function (data) {
        this.Require_Check_Out_on_leave_period_data = data;
        console.log("Require_Check_Out_on_leave_period_method   " + this.Require_Check_Out_on_leave_period_data);
        console.log(this.Require_Check_Out_on_leave_period_data);
    };
    GlobalRuleComponent.prototype.Require_Check_In_on_training_period_method = function (data) {
        this.Require_Check_In_on_training_period_data = data;
        console.log("Require_Check_In_on_training_period_method   " + this.Require_Check_In_on_training_period_data);
        console.log(this.Require_Check_In_on_training_period_data);
    };
    GlobalRuleComponent.prototype.Require_Check_Out_on_training_period_method = function (data) {
        this.Require_Check_Out_on_training_period_data = data;
        console.log("Require_Check_Out_on_training_period_method   " + this.Require_Check_Out_on_training_period_data);
        console.log(this.Require_Check_Out_on_training_period_data);
    };
    GlobalRuleComponent.prototype.weekendSelection = function (truFalse, data2) {
        //check the defulat selected values of weekend selection
        for (var _i = 0; _i < this.weekend.length; _i++) {
            var data = this.weekend[_i];
            if (data) {
                this.weekendString.set(this.weekendTest[_i].name, this.count1);
                this.count1++;
            }
        }
        console.log(this.weekendString);
        if (truFalse) {
            var size = this.weekendString.size;
            console.log("size is : " + size);
            this.weekendString.set(data2, size++);
        }
        else {
            this.weekendString.delete(data2);
        }
        console.log(this.weekendString);
        console.log("weekendSelection");
        console.log(truFalse);
        console.log(data2);
        console.log(this.weekend);
    };
    GlobalRuleComponent.prototype.showDepartment = function () {
        this.database.getallParentDeparmentDetails();
        this.display_Department = true;
    };
    GlobalRuleComponent.prototype.get_all_Rule_List = function () {
        var _this = this;
        console.log("get_all_Rule_List :Global Rule Component");
        this.attendanceService.get_GlobalRule_List().subscribe(function (res1) { return _this.succsess_getALL_Rules_List1(res1); }, function (error) { return _this.error_getALL_Rules_List(error); });
    };
    GlobalRuleComponent.prototype.succsess_getALL_Rules_List1 = function (res1) {
        var e_1, _a;
        this.valid_data = res1;
        console.log("succsess_getALL_Rules_List  :  Global Rule Component");
        console.log(this.valid_data);
        // this.attendanceService.set_globalRule_Passed_Data(valid_data);
        this.check_In_Rule_init = this.valid_data[0].check_In_Rule;
        this.check_Out_Rule_init = this.valid_data[0].check_Out_Rule;
        this.Overtime_Rule_init = this.valid_data[0].Overtime_Rule;
        this.punchPeriod = this.valid_data[0].duplicate_Punch_Period;
        this.lateExceed = this.valid_data[0].when_Late_Exceeds;
        this.earlyLeaveExceed = this.valid_data[0].when_Early_Leave_Exceeds;
        this.there_is_No_check_in_init = +this.valid_data[0].when_there_is_no_Check_In_count_as;
        this.there_is_No_check_in_Minutes = this.valid_data[0].when_there_is_no_Check_In_Minute;
        this.there_is_No_check_out_init = +this.valid_data[0].when_there_is_no_Check_Out_count_as;
        this.there_is_No_check_out_Minutes = this.valid_data[0].when_there_is_no_Check_Out_Minute;
        this.check_in = this.valid_data[0].check_In;
        this.Check_Out = this.valid_data[0].Check_Out;
        this.Break_In = this.valid_data[0].Break_In;
        this.OT_In = this.valid_data[0].OT_In;
        this.OT_Out = this.valid_data[0].OT_Out;
        this.Break_Out = this.valid_data[0].Break_Out;
        this.parentDepartment = this.valid_data[0].department;
        //weekOff=valid_data.weekend
        var array = this.valid_data[0].weekend;
        console.log("Arry : " + array);
        var array1 = array.split(' ');
        console.log("Arry1 : " + array1);
        console.log("Arry1 : " + array1.length);
        console.log("Arry1 : " + array1[1]);
        try {
            /*public mon:boolean=true;
            public tue:boolean=false;
            public wed:boolean=false;
            public thu:boolean=false;
            public fri:boolean=false;
            public sat:boolean=false;
            public sun:boolean=true;*/
            for (var array1_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](array1), array1_1_1 = array1_1.next(); !array1_1_1.done; array1_1_1 = array1_1.next()) {
                var entry = array1_1_1.value;
                console.log(entry);
                if (entry === "mon")
                    this.mon = true;
                if (entry === "tue")
                    this.tue = true;
                if (entry === "wen")
                    this.wed = true;
                if (entry === "thu")
                    this.thu = true;
                if (entry === "fri")
                    this.fri = true;
                if (entry === "sat")
                    this.sat = true;
                if (entry === "sun")
                    this.sun = true;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (array1_1_1 && !array1_1_1.done && (_a = array1_1.return)) _a.call(array1_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    GlobalRuleComponent.prototype.error_getALL_Rules_List = function (error) {
        console.log("error_getALL_Rules_List  :  Global Rule Component");
        console.log(error);
    };
    GlobalRuleComponent.ctorParameters = function () { return [
        { type: src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__["AttendanceServiceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"] },
        { type: primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"] },
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] }
    ]; };
    GlobalRuleComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-global-rule',
            template: __webpack_require__(/*! raw-loader!./global-rule.component.html */ "./node_modules/raw-loader/index.js!./src/app/attendance/global-rule/global-rule.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"], ChecklistDatabase],
            styles: [__webpack_require__(/*! ./global-rule.component.css */ "./src/app/attendance/global-rule/global-rule.component.css")]
        })
    ], GlobalRuleComponent);
    return GlobalRuleComponent;
}());



/***/ }),

/***/ "./src/app/attendance/rule-list/rule-list.component.css":
/*!**************************************************************!*\
  !*** ./src/app/attendance/rule-list/rule-list.component.css ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0dGVuZGFuY2UvcnVsZS1saXN0L3J1bGUtbGlzdC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/attendance/rule-list/rule-list.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/attendance/rule-list/rule-list.component.ts ***!
  \*************************************************************/
/*! exports provided: TodoItemNode, TodoItemFlatNode, ChecklistDatabase, RuleListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RuleListComponent", function() { return RuleListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/service/personnel/personnel.service */ "./src/app/service/personnel/personnel.service.ts");
/* harmony import */ var src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/service/attendance/attendance-service.service */ "./src/app/service/attendance/attendance-service.service.ts");











;



var jsPDF = __webpack_require__(/*! jspdf */ "./node_modules/jspdf/dist/jspdf.min.js");
__webpack_require__(/*! jspdf-autotable */ "./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js");
var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service, PersonnelService) {
        this.service = service;
        this.PersonnelService = PersonnelService;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_9__["BehaviorSubject"]([]);
        // this.getallParentDepartmentServer();
        /* console.log("before Initializing")
         console.log(TREE_DATA)
         console.log("After Initializing")
          console.log("First Constructor Finished"+TREE_DATA)*/
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    /*  getallParentDepartmentServer(){
        console.log("getallParentDepartmentServer")
        this.PersonnelService.getAllParentDepartmentDetailsBegining().subscribe(response=>this.succsess(response),error=>this.errorHandlin(error))
      }*/
    /*succsess(response)
    {
      console.log("Succes");
      console.log("TREE DATA-------------");
      console.log(TREE_DATA);
      console.log("response--------------");
      console.log(response);
      TREE_DATA=response;
      console.log("responses----------------Changed to TREE_DATA");
      console.log(TREE_DATA);
      this.initialize();
    }*/
    /* errorHandlin(error)
       {
         console.log("Eroor");
       }*/
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var RuleListComponent = /** @class */ (function () {
    function RuleListComponent(attendanceService, personnel_service, deviceService, messageService, confirmationService, database, service, dialog, router) {
        var _this = this;
        this.attendanceService = attendanceService;
        this.personnel_service = personnel_service;
        this.deviceService = deviceService;
        this.messageService = messageService;
        this.confirmationService = confirmationService;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.rule_Name = "";
        this.timeZoneForm = _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"];
        this.errordisplayflag = false;
        this.pagenum = 15;
        this.sum = 0;
        this.sumOriginal = 10;
        this.totalRecords = 0;
        this.count = 1;
        this.msgs = [];
        this.MySum = [];
        this.display = false;
        this.parentArea = "";
        this.parentDepartment = "";
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
    }
    RuleListComponent.prototype.showDialog = function () {
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    RuleListComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    RuleListComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    RuleListComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    RuleListComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    RuleListComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    RuleListComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    RuleListComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    RuleListComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    RuleListComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    RuleListComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.parentDepartment = event.value;
    };
    RuleListComponent.prototype.Edit_Department_success = function (response) {
        console.log("Edit_Department_success");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Sucsses") {
            console.log("if sucsess  Edit_Department_success");
            this.initialmethod();
            this.router.navigate(['department']);
        }
        else {
            console.log("if else sucsess  Edit_Department_success");
            this.errordisplayflag = true;
        }
    };
    RuleListComponent.prototype.Department_edit_error = function (error) {
        console.log("error1");
        console.log(error);
        this.errorDta = "Server Not Responding,Please try Again";
        this.errordisplayflag = true;
    };
    RuleListComponent.prototype.displayfalse = function () {
        console.log("display false" + this.parentArea);
        this.parentArea = null;
        this.display = false;
    };
    //constructor(private router: Router,private deviceService:DeviceserviceService,private messageService: MessageService,private confirmationService: ConfirmationService) { }
    RuleListComponent.prototype.ngOnInit = function () {
        this.initialmethod();
        // console.log("ng init")
        this.cols = [
            { field: 'name', header: 'Name', width: '25%' },
            { field: 'department', header: 'Department', width: '30%' },
            { field: 'weekend', header: 'Week Off', width: '30%' },
            { field: 'global_Rule', header: 'Global Rule', width: '30%' },
            { field: ' ', header: 'Action', width: '35%' }
        ];
    };
    RuleListComponent.prototype.initialmethod = function () {
        var _this = this;
        this.attendanceService.get_Rule_and_GlobalRule_List().subscribe(function (response) { return _this.handleSuccessGetAllRulesDetailsBegininig(response); }, function (error) { return _this.handleErrorGetAllRulesDetailsBegininig(error); });
    };
    RuleListComponent.prototype.handleSuccessGetAllRulesDetailsBegininig = function (response) {
        var e_1, _a;
        console.log("Success handleSuccessGetAllRulesDetailsBegininig");
        console.log(response);
        var jsonArray;
        var count = 0;
        try {
            for (var response_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](response), response_1_1 = response_1.next(); !response_1_1.done; response_1_1 = response_1.next()) {
                var entry = response_1_1.value;
                console.log("Before");
                console.log(entry);
                entry.primary_id = count++;
                console.log("After");
                console.log(entry);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (response_1_1 && !response_1_1.done && (_a = response_1.return)) _a.call(response_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        console.log(response);
        this.allRules = response;
    };
    RuleListComponent.prototype.handleErrorGetAllRulesDetailsBegininig = function (error) {
        console.log("handle  Error handleErrorGetAllRulesDetailsBegininig");
        console.log(error);
    };
    RuleListComponent.prototype.Delete_success = function (response) {
        console.log("success department delete ");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Sucsses") {
            console.log("if sucsess");
            this.initialmethod();
            this.router.navigate(['rules']);
        }
        else {
            this.errordisplayflag = true;
            this.initialmethod();
        }
    };
    RuleListComponent.prototype.Delete_error = function (error) {
        console.log("Department_Delete_error");
        console.log(error);
        this.errorDta = "Server Not Responding,Please try Again";
        this.errordisplayflag = true;
    };
    RuleListComponent.prototype.onRowEditInit = function (data) {
        console.log("onRowEditInit");
        console.log(data);
        this.rule_Name = data.name;
        console.log(this.rule_Name);
    };
    RuleListComponent.prototype.onRowEditSave = function () {
        console.log("onRowEditSave");
        if (this.rule_Name === "Global") {
            this.router.navigate(['globalrule']);
        }
        else {
            console.log("Not a Global Rule");
            this.attendanceService.set_rule_Name(this.rule_Name);
            this.router.navigate(['addrule']);
        }
    };
    RuleListComponent.prototype.onRowEditCancel = function (index) {
        console.log("onRowEditCancel");
    };
    RuleListComponent.prototype.onRowRemove = function (department, index) {
        var _this = this;
        console.log("onRowRemove");
        //console.log(device.Serial_Number)
        //console.log(obj)
        this.confirmationService.confirm({
            message: 'Are you sure that you want to proceed?',
            header: 'Confirmation',
            icon: 'pi pi-exclamation-triangle',
            accept: function () {
                _this.msgs = [{ severity: 'info', summary: 'Confirmed', detail: 'You have accepted' }];
                console.log("YES");
                var obj = new src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__["Delete_Rule_Model"](_this.rule_Name);
                _this.attendanceService.Delete_Rule(obj).subscribe(function (response) { return _this.Delete_success(response); }, function (error) { return _this.Delete_error(error); });
            },
            reject: function () {
                _this.msgs = [{ severity: 'info', summary: 'Rejected', detail: 'You have rejected' }];
                console.log("NOS");
            }
        });
    };
    RuleListComponent.prototype.showSuccess = function () {
        this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
    };
    RuleListComponent.prototype.showDialog1 = function () {
        this.display = true;
    };
    RuleListComponent.prototype.assignValu = function () {
        console.log("assiagn value");
        this.display = false;
    };
    RuleListComponent.ctorParameters = function () { return [
        { type: src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__["AttendanceServiceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"] },
        { type: primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"] },
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] }
    ]; };
    RuleListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-rule-list',
            template: __webpack_require__(/*! raw-loader!./rule-list.component.html */ "./node_modules/raw-loader/index.js!./src/app/attendance/rule-list/rule-list.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"], ChecklistDatabase],
            styles: [__webpack_require__(/*! ./rule-list.component.css */ "./src/app/attendance/rule-list/rule-list.component.css")]
        })
    ], RuleListComponent);
    return RuleListComponent;
}());



/***/ }),

/***/ "./src/app/attendance/rule/rule.component.css":
/*!****************************************************!*\
  !*** ./src/app/attendance/rule/rule.component.css ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0dGVuZGFuY2UvcnVsZS9ydWxlLmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/attendance/rule/rule.component.ts":
/*!***************************************************!*\
  !*** ./src/app/attendance/rule/rule.component.ts ***!
  \***************************************************/
/*! exports provided: TodoItemNode, TodoItemFlatNode, ChecklistDatabase, RuleComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RuleComponent", function() { return RuleComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/service/personnel/personnel.service */ "./src/app/service/personnel/personnel.service.ts");
/* harmony import */ var src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/service/attendance/attendance-service.service */ "./src/app/service/attendance/attendance-service.service.ts");











;




var jsPDF = __webpack_require__(/*! jspdf */ "./node_modules/jspdf/dist/jspdf.min.js");
__webpack_require__(/*! jspdf-autotable */ "./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js");
var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service, personnel_service, attendanceService) {
        //this.getallParentPositionFromServer();
        this.service = service;
        this.personnel_service = personnel_service;
        this.attendanceService = attendanceService;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_9__["BehaviorSubject"]([]);
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallParentDeparmentDetails = function () {
        var _this = this;
        //console.log("getallAreasFromServer")
        console.log("getall Parent Department :addpersonnel");
        this.personnel_service.getAllParentDepartmentDetailsBegining().subscribe(function (response) { return _this.succsess_getALLParentDepartment(response); }, function (error) { return _this.error__getALLParentDepartment(error); });
    };
    ChecklistDatabase.prototype.succsess_getALLParentDepartment = function (response) {
        console.log("succsess_getALLParentDepartment addPersonel");
        console.log("TREE DATA-------------");
        console.log(TREE_DATA);
        console.log("response--------------");
        console.log(response);
        TREE_DATA = response;
        console.log("responses----------------Changed to TREE_DATA");
        console.log(TREE_DATA);
        this.initialize();
    };
    ChecklistDatabase.prototype.error__getALLParentDepartment = function (error) {
        console.log("Eroor  getALLParentDepartment  addpersonel");
    };
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] },
        { type: src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__["AttendanceServiceService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var RuleComponent = /** @class */ (function () {
    function RuleComponent(attendanceService, personnel_service, deviceService, messageService, confirmationService, database, service, dialog, router) {
        var _this = this;
        this.attendanceService = attendanceService;
        this.personnel_service = personnel_service;
        this.deviceService = deviceService;
        this.messageService = messageService;
        this.confirmationService = confirmationService;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        //check in rule  
        this.check_In_Rule_array = [
            { id: 0, name: "Base On Schedule" },
            { id: 1, name: "First Check In" }
        ];
        this.check_In_Rule_init = 0;
        this.check_In_Rule_data = this.check_In_Rule_array[this.check_In_Rule_init].id;
        //check out rule
        this.check_Out_Rule_array = [
            { id: 0, name: "Base On Schedule" },
            { id: 1, name: "Last Check Out" }
        ];
        this.check_Out_Rule_init = 1;
        this.check_Out_Rule_data = this.check_Out_Rule_array[this.check_Out_Rule_init].id;
        //over time rule
        this.Overtime_Rule_array = [
            { id: 0, name: "Auto OT" },
            { id: 1, name: "NO OT" }
        ];
        this.Overtime_Rule_init = 1;
        this.Overtime_Rule_data = this.Overtime_Rule_array[this.Overtime_Rule_init].id;
        this.punchPeriod = 8;
        // weekend setting
        this.weekendTest = [
            { id: 0, name: "mon", data: true },
            { id: 1, name: "tue", data: false },
            { id: 2, name: "wen", data: true },
            { id: 3, name: "thu", data: false },
            { id: 4, name: "fri", data: true },
            { id: 5, name: "sat", data: false },
            { id: 6, name: "sun", data: false }
        ];
        this.mon = false;
        this.tue = false;
        this.wed = false;
        this.thu = false;
        this.fri = false;
        this.sat = false;
        this.sun = false;
        //public  weekend: boolean[] =boolean [];
        //weekend:boolean[] = new Array(this.mon,this.tue,this.wed,this.wed,this.fri,this.sat,this.sun)
        this.weekend = new Array(this.weekendTest[0].data, this.weekendTest[1].data, this.weekendTest[2].data, this.weekendTest[3].data, this.weekendTest[4].data, this.weekendTest[5].data, this.weekendTest[6].data);
        //calculation 
        this.there_is_No_check_in = [
            { id: 0, name: "Late" },
            { id: 1, name: "Absent" },
            { id: 2, name: "No Complete" },
        ];
        this.there_is_No_check_in_init = 2;
        this.there_is_No_check_in_data = "" + this.there_is_No_check_in[this.there_is_No_check_in_init].id;
        this.there_is_No_check_in_Minutes = 60;
        this.there_is_No_check_out = [
            { id: 0, name: "Early Leave" },
            { id: 1, name: "Absent" },
            { id: 2, name: "No Complete" },
        ];
        this.there_is_No_check_out_init = 2;
        this.there_is_No_check_out_data = "" + this.there_is_No_check_out[this.there_is_No_check_out_init].id;
        this.there_is_No_check_out_Minutes = 60;
        this.Require_Check_In_on_leave_period = [
            { id: 0, name: "Must Punch" },
            { id: 1, name: "Use leave end time" }
        ];
        this.Require_Check_In_on_leave_period_init = 1;
        this.Require_Check_In_on_leave_period_data = this.Require_Check_In_on_leave_period[this.Require_Check_In_on_leave_period_init].id;
        this.Require_Check_Out_on_leave_period = [
            { id: 0, name: "Must Punch" },
            { id: 1, name: "Use leave start time" }
        ];
        this.Require_Check_Out_on_leave_period_init = 1;
        this.Require_Check_Out_on_leave_period_data = this.Require_Check_Out_on_leave_period[this.Require_Check_Out_on_leave_period_init].id;
        this.Require_Check_In_on_training_period = [
            { id: 0, name: "Must Punch" },
            { id: 1, name: "Use leave end time" }
        ];
        this.Require_Check_In_on_training_period_init = 1;
        this.Require_Check_In_on_training_period_data = this.Require_Check_In_on_training_period[this.Require_Check_In_on_training_period_init].id;
        this.Require_Check_Out_on_training_period = [
            { id: 0, name: "Must Punch" },
            { id: 1, name: "Use leave start time" }
        ];
        this.Require_Check_Out_on_training_period_init = 1;
        this.Require_Check_Out_on_training_period_data = this.Require_Check_Out_on_training_period[this.Require_Check_Out_on_training_period_init].id;
        this.check_in = 10;
        this.Check_Out = 10;
        this.Break_Out = 10;
        this.Break_In = 10;
        this.OT_In = 10;
        this.OT_Out = 10;
        this.rule_Name = "Rule Name";
        //Overtime_Rule_init:Number=1;
        this.parentDepartment = "";
        this.timeZoneForm = _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"];
        this.errordisplayflag = false;
        this.pagenum = 15;
        this.sum = 0;
        this.sumOriginal = 10;
        this.totalRecords = 0;
        this.count = 1;
        this.msgs = [];
        this.MySum = [];
        this.display = false;
        this.parentPosition = "";
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        /*checkInClick(event:any)
        {
          console.log("check in click")
         this.check_In_Rule_init=3;
          this.check_In_Rule_=event.target.value;
          console.log("check_In_Rule :" +this.check_In_Rule)
        }*/
        this.oppoSuits = ['Men', 'Women', 'Boys', 'Inspiration'];
        this.lateExceed = 100;
        this.earlyLeaveExceed = 60;
        this.old_Rule_name = "";
        this.edit_Flag = false;
        this.weekendString = new Map();
        this.count1 = 0;
        this.display_Department = false;
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
        this.router.events.subscribe(function (e) {
            if (e instanceof _angular_router__WEBPACK_IMPORTED_MODULE_4__["NavigationEnd"]) {
                // Function you want to call here
                console.log("after Loading all DATA");
            }
        });
        //this.getAllRule_data_to_AllVaraiables();
    }
    RuleComponent.prototype.globalRule = function (data) {
        console.log(data);
    };
    /*ionViewDidLoad(){
     setTimeout(() => {
         alert('Hello...')
     }, 5000);
   }*/
    RuleComponent.prototype.getAllRule_data_to_AllVaraiables = function () {
        console.log("getAllRule_data_to_AllVaraiables  ");
        /* let valid_data=this.attendanceService.get_globalRule_Passed_Data()
         console.log("getAllRule_data_to_AllVaraiables  valid_data : "+valid_data)*/
    };
    RuleComponent.prototype.showDialog = function () {
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    RuleComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    RuleComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    RuleComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    RuleComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    RuleComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    RuleComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    RuleComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    RuleComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    RuleComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    RuleComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.parentDepartment = event.value;
    };
    /* getaddDeviceForm(event:NgForm)
     {
    let obj:addDeciceModel=new addDeciceModel(event.value['devicename'],event.value['serialnumber'],event.value['ipaddress'],event.value['portnumber'],event.value['parentarea'],"GMT"+event.value['timezone'],null,null,null,null)
    console.log("add deviceform");
    //console.log(event);
    //console.log(event.value['areacode'])
    console.log(obj);
    //let JsonData=JSON.stringify(obj)
    //console.log("JsonData");
    //console.log(JsonData);
    this.service.postAddDeviceDetails(obj).subscribe(response=>this.success1(response),error=>this.error1(error));
    }*/
    /*editPosition_success(response)
     {
       console.log("position   :  editPosition_success ")
       console.log(response.responce_data)
     // responce_data
      this.errorDta=response.responce_data;
      if(this.errorDta==="Sucsses")
      {
        console.log("if sucsess")
       
        this.personnel_service. getAllPositionDetailsBegining().subscribe(
          response=>this.getAll_GlobalRule_Details_Begining_Success(response),
          error=>this.getAll_Position_Details_Begining_Error(error)
        )
        this.router.navigate(['position']);
      }
      else
      {
       this.errordisplayflag=true;
      }
     }
     editPosition_error(error)
    {
      console.log("position   :  editPosition_Error ")
     console.log(error);
     this.errorDta="Server Not Responding,Please try Again"
     this.errordisplayflag=true;
    
    }*/
    RuleComponent.prototype.displayfalse = function () {
        console.log("display false" + this.parentPosition);
        this.parentPosition = null;
        this.display = false;
    };
    //constructor(private router: Router,private deviceService:DeviceserviceService,private messageService: MessageService,private confirmationService: ConfirmationService) { }
    RuleComponent.prototype.ngOnInit = function () {
        this.initialmethod();
        // console.log("ng init")
        this.cols = [
            { field: 'position_No', header: 'Position No', width: '25%' },
            { field: 'position_name', header: 'Position Name', width: '30%' },
            { field: 'parent_position', header: 'Parent Position', width: '28%' },
            { field: 'Employee Count', header: 'Employee Ccount', width: '17%' },
            { field: ' ', header: 'Action', width: '35%' }
        ];
        console.log("ngOnInit");
        //this.getAllRule_data_to_AllVaraiables()
        this.get_all_Rule_List();
    };
    RuleComponent.prototype.initialmethod = function () {
        /* this.attendanceService. getGlobalRule().subscribe(
           response=>this.getAll_GlobalRule_Details_Begining_Success(response),
           error=>this.getAll_Position_Details_Begining_Error(error)
         )*/
    };
    RuleComponent.prototype.getAll_Position_Details_Begining_Error = function (error) {
        console.log("handle  Error getAllDepartmentDetailsBegining");
        console.log(error);
    };
    RuleComponent.prototype.positionDelete_success = function (response) {
        console.log("positionDelete_success : success");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Sucsses") {
            console.log("if sucsess");
            //this.router.navigate(['position']);
        }
        else {
            this.initialmethod();
        }
    };
    RuleComponent.prototype.positionDelete_error = function (error) {
        console.log("positionDelete  Error");
        console.log(error);
        this.errorDta = "Server Not Responding,Please try Again";
        this.errordisplayflag = true;
    };
    /*onRowEditInit(position: addPositionModel) {
      console.log("onRowEditInit position")
     console.log(position)
     this.oldPositionNumber=(position['position_No'])
     console.log("Old Position Number is New "+this.oldPositionNumber)
     this.parentPosition=(position['parent_position'])
     console.log("Parent Position : "+this.parentPosition)
    }*/
    RuleComponent.prototype.onRowEditSave = function (globalRule) {
        console.log("Save");
        // console.log(this.parentPosition)
        console.log(globalRule);
        console.log("test 1 : " + this.check_In_Rule_data);
        /*let obj:editPositionModel=new editPositionModel(this.oldPositionNumber,position['position_No'],position['position_name'],this.parentPosition)
        console.log("Edit position JSON DTA")
        console.log(obj)
        
        
        
        this.personnel_service.editPosition(obj).subscribe(
          response=>this.editPosition_success(response),
          error=>this.editPosition_error(error))*/
    };
    RuleComponent.prototype.onclick = function () {
        console.log("onclick");
        //console.log(data)
    };
    /*onRowEditCancel(position: addPositionModel, index: number) {
      console.log("onRowEditCancel")
    }*/
    /*onRowRemove(position : addPositionModel, index: number)
    {
    console.log("Position : onRowRemove")
    //console.log(device.Serial_Number)
    let obj:positionNumberModel=new positionNumberModel(this.oldPositionNumber)
    console.log(obj)
    
    this.confirmationService.confirm({
      message: 'Are you sure that you want to proceed?',
      header: 'Confirmation',
      icon: 'pi pi-exclamation-triangle',
      accept: () => {
          this.msgs = [{severity:'info', summary:'Confirmed', detail:'You have accepted'}];
          console.log("YES")
          this.personnel_service.DeletePosition(obj).subscribe(
            response=>this.positionDelete_success(response),
            error=>this.positionDelete_error(error))
    
      },
      reject: () => {
          this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];
          console.log("NOS")
      }
    });
    
    }*/
    RuleComponent.prototype.showSuccess = function () {
        this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
    };
    RuleComponent.prototype.showDialog1 = function () {
        this.display = true;
    };
    RuleComponent.prototype.assignValu = function () {
        console.log("assiagn value");
        this.display = false;
    };
    RuleComponent.prototype.myFunction = function () {
        console.log("click ME");
    };
    RuleComponent.prototype.submitFormData = function (event) {
        console.log("click ME");
        console.log(event);
    };
    RuleComponent.prototype.submitFormData1 = function (event) {
        var _this = this;
        console.log("click ME 1");
        // console.log(event)
        // console.log(this.fullName)
        console.log(this.mon);
        var weekOff = "";
        if (this.mon)
            weekOff = weekOff + "mon";
        if (this.tue)
            weekOff = weekOff + " " + "tue";
        if (this.wed)
            weekOff = weekOff + " " + "wen";
        if (this.thu)
            weekOff = weekOff + " " + "thu";
        if (this.fri)
            weekOff = weekOff + " " + "fri";
        if (this.sat)
            weekOff = weekOff + " " + "sat";
        if (this.sun)
            weekOff = weekOff + " " + "sun";
        console.log(weekOff);
        console.log(this.lateExceed + "" + this.earlyLeaveExceed);
        if (this.edit_Flag === false) {
            var obj = new src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__["AddNewRuleModel"](this.check_In_Rule_data, this.check_Out_Rule_data, this.Overtime_Rule_data, this.rule_Name, this.punchPeriod, weekOff, this.lateExceed, this.earlyLeaveExceed, this.there_is_No_check_in_data, this.there_is_No_check_in_Minutes, this.there_is_No_check_out_data, this.there_is_No_check_out_Minutes, this.check_in, this.Check_Out, this.Break_In, this.OT_In, this.OT_Out, this.Break_Out, false, this.parentDepartment);
            console.log("ALL DATA ");
            console.log(obj);
            this.attendanceService.addRule(obj).subscribe(function (response) { return _this.success_addRule(response); }, function (error) { return _this.error_addRule(error); });
        }
        if (this.edit_Flag === true) {
            this.edit_Flag = false;
            var obj = new src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__["GlobalRuleModel"](this.check_In_Rule_data, this.check_Out_Rule_data, this.Overtime_Rule_data, this.rule_Name, this.old_Rule_name, this.punchPeriod, weekOff, this.lateExceed, this.earlyLeaveExceed, this.there_is_No_check_in_data, this.there_is_No_check_in_Minutes, this.there_is_No_check_out_data, this.there_is_No_check_out_Minutes, this.check_in, this.Check_Out, this.Break_In, this.OT_In, this.OT_Out, this.Break_Out, false, this.parentDepartment);
            console.log("ALL DATA ");
            console.log(obj);
            this.attendanceService.addRule_and_GlobalRule(obj).subscribe(function (response) { return _this.success_addRule(response); }, function (error) { return _this.error_addRule(error); });
        }
    };
    RuleComponent.prototype.success_addRule = function (response) {
        console.log("success_addRule : Global Rule Componet");
        console.log(response.responce_data);
        this.router.navigate(['rules']);
    };
    RuleComponent.prototype.error_addRule = function (error) {
        console.log("error_addRule : Global Rule Componet");
        console.log(error);
    };
    RuleComponent.prototype.onClickSubmit = function (data) {
        console.log(data);
    };
    RuleComponent.prototype.checkInRuleMethod = function (data) {
        this.check_In_Rule_data = data;
        console.log("checkInRuleMethod   " + this.check_In_Rule_data);
    };
    RuleComponent.prototype.checkOutRuleMethod = function (data) {
        this.check_Out_Rule_data = data;
        console.log("checkOutRuleMethod   " + this.check_Out_Rule_data);
    };
    RuleComponent.prototype.overTimeRuleMethod = function (data) {
        this.Overtime_Rule_data = data;
        console.log("overTimeRuleMethod   " + this.Overtime_Rule_data);
        console.log(this.punchPeriod);
    };
    RuleComponent.prototype.there_is_No_check_in_method = function (data) {
        this.there_is_No_check_in_data = data;
        console.log("there_is_No_check_in_method   " + this.there_is_No_check_in_data);
        console.log(this.there_is_No_check_in_data);
    };
    RuleComponent.prototype.there_is_No_check_out_method = function (data) {
        this.there_is_No_check_out_data = data;
        console.log("there_is_No_check_out_method   " + this.there_is_No_check_out_data);
        console.log(this.there_is_No_check_out_data);
    };
    RuleComponent.prototype.Require_Check_In_on_leave_period_method = function (data) {
        this.Require_Check_In_on_leave_period_data = data;
        console.log("Require_Check_In_on_leave_period_method   " + this.Require_Check_In_on_leave_period_data);
        console.log(this.Require_Check_In_on_leave_period_data);
    };
    RuleComponent.prototype.Require_Check_Out_on_leave_period_method = function (data) {
        this.Require_Check_Out_on_leave_period_data = data;
        console.log("Require_Check_Out_on_leave_period_method   " + this.Require_Check_Out_on_leave_period_data);
        console.log(this.Require_Check_Out_on_leave_period_data);
    };
    RuleComponent.prototype.Require_Check_In_on_training_period_method = function (data) {
        this.Require_Check_In_on_training_period_data = data;
        console.log("Require_Check_In_on_training_period_method   " + this.Require_Check_In_on_training_period_data);
        console.log(this.Require_Check_In_on_training_period_data);
    };
    RuleComponent.prototype.Require_Check_Out_on_training_period_method = function (data) {
        this.Require_Check_Out_on_training_period_data = data;
        console.log("Require_Check_Out_on_training_period_method   " + this.Require_Check_Out_on_training_period_data);
        console.log(this.Require_Check_Out_on_training_period_data);
    };
    RuleComponent.prototype.weekendSelection = function (truFalse, data2) {
        //check the defulat selected values of weekend selection
        for (var _i = 0; _i < this.weekend.length; _i++) {
            var data = this.weekend[_i];
            if (data) {
                this.weekendString.set(this.weekendTest[_i].name, this.count1);
                this.count1++;
            }
        }
        console.log(this.weekendString);
        if (truFalse) {
            var size = this.weekendString.size;
            console.log("size is : " + size);
            this.weekendString.set(data2, size++);
        }
        else {
            this.weekendString.delete(data2);
        }
        console.log(this.weekendString);
        console.log("weekendSelection");
        console.log(truFalse);
        console.log(data2);
        console.log(this.weekend);
    };
    RuleComponent.prototype.showDepartment = function () {
        this.database.getallParentDeparmentDetails();
        this.display_Department = true;
    };
    RuleComponent.prototype.get_all_Rule_List = function () {
        var _this = this;
        console.log("get_all_Rule_List :Global Rule Component");
        this.attendanceService.get_Rule_and_GlobalRule_List().subscribe(function (response) { return _this.succsess_getALL_Rules_List(response); }, function (error) { return _this.error_getALL_Rules_List(error); });
    };
    RuleComponent.prototype.succsess_getALL_Rules_List = function (response) {
        var e_1, _a, e_2, _b;
        var valid_data;
        console.log("succsess_getALL_Rules_List  :  Global Rule Component");
        console.log(response);
        this.rule_Name = this.attendanceService.get_rule_Name();
        this.attendanceService.set_rule_Name("");
        console.log(" rule name " + this.rule_Name);
        if (this.rule_Name.length > 1) {
            this.edit_Flag = true;
            try {
                for (var response_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](response), response_1_1 = response_1.next(); !response_1_1.done; response_1_1 = response_1.next()) {
                    var entry = response_1_1.value;
                    console.log("Data : " + entry.name);
                    if (entry.name === this.rule_Name)
                        valid_data = entry;
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (response_1_1 && !response_1_1.done && (_a = response_1.return)) _a.call(response_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
            console.log(valid_data);
            // this.attendanceService.set_globalRule_Passed_Data(valid_data);
            this.check_In_Rule_init = valid_data.check_In_Rule;
            this.check_Out_Rule_init = valid_data.check_Out_Rule;
            this.Overtime_Rule_init = valid_data.Overtime_Rule;
            this.old_Rule_name = valid_data.name;
            this.rule_Name = this.old_Rule_name;
            this.punchPeriod = valid_data.duplicate_Punch_Period;
            this.lateExceed = valid_data.when_Late_Exceeds;
            this.earlyLeaveExceed = valid_data.when_Early_Leave_Exceeds;
            this.there_is_No_check_in_init = +valid_data.when_there_is_no_Check_In_count_as;
            this.there_is_No_check_in_Minutes = valid_data.when_there_is_no_Check_In_Minute;
            this.there_is_No_check_out_init = +valid_data.when_there_is_no_Check_Out_count_as;
            this.there_is_No_check_out_Minutes = valid_data.when_there_is_no_Check_Out_Minute;
            this.check_in = valid_data.check_In;
            this.Check_Out = valid_data.Check_Out;
            this.Break_In = valid_data.Break_In;
            this.OT_In = valid_data.OT_In;
            this.OT_Out = valid_data.OT_Out;
            this.Break_Out = valid_data.Break_Out;
            this.parentDepartment = valid_data.department;
            //weekOff=valid_data.weekend
            var array = valid_data.weekend;
            console.log("Arry : " + array);
            var array1 = array.split(' ');
            console.log("Arry1 : " + array1);
            console.log("Arry1 : " + array1.length);
            console.log("Arry1 : " + array1[1]);
            try {
                /*public mon:boolean=true;
                public tue:boolean=false;
                public wed:boolean=false;
                public thu:boolean=false;
                public fri:boolean=false;
                public sat:boolean=false;
                public sun:boolean=true;*/
                for (var array1_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](array1), array1_1_1 = array1_1.next(); !array1_1_1.done; array1_1_1 = array1_1.next()) {
                    var entry = array1_1_1.value;
                    console.log(entry);
                    if (entry == "mon")
                        this.mon = true;
                    if (entry == "tue")
                        this.tue = true;
                    if (entry == "wen")
                        this.wed = true;
                    if (entry == "thu")
                        this.thu = true;
                    if (entry == "fri")
                        this.fri = true;
                    if (entry == "sat")
                        this.sat = true;
                    if (entry == "sun")
                        this.sun = true;
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (array1_1_1 && !array1_1_1.done && (_b = array1_1.return)) _b.call(array1_1);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        else {
            this.check_In_Rule_init = 0;
            this.check_Out_Rule_init = 0;
            this.Overtime_Rule_init = 0;
            this.rule_Name = "";
            this.punchPeriod = 0;
            this.lateExceed = 0;
            this.earlyLeaveExceed = 0;
            this.there_is_No_check_in_init = 0;
            this.there_is_No_check_in_Minutes = 0;
            this.there_is_No_check_out_init = 0;
            this.there_is_No_check_out_Minutes = 0;
            this.check_in = 0;
            this.Check_Out = 0;
            this.Break_In = 0;
            this.OT_In = 0;
            this.OT_Out = 0;
            this.Break_Out = 0;
            this.parentDepartment = null;
            this.mon = false;
            this.tue = false;
            this.wed = false;
            this.thu = false;
            this.fri = false;
            this.sat = false;
            this.sun = false;
        }
    };
    RuleComponent.prototype.error_getALL_Rules_List = function (error) {
        console.log("error_getALL_Rules_List  :  Global Rule Component");
        console.log(error);
    };
    RuleComponent.ctorParameters = function () { return [
        { type: src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__["AttendanceServiceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"] },
        { type: primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"] },
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] }
    ]; };
    RuleComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-rule',
            template: __webpack_require__(/*! raw-loader!./rule.component.html */ "./node_modules/raw-loader/index.js!./src/app/attendance/rule/rule.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"], ChecklistDatabase],
            styles: [__webpack_require__(/*! ./rule.component.css */ "./src/app/attendance/rule/rule.component.css")]
        })
    ], RuleComponent);
    return RuleComponent;
}());



/***/ }),

/***/ "./src/app/attendance/shedule-list/shedule-list.component.css":
/*!********************************************************************!*\
  !*** ./src/app/attendance/shedule-list/shedule-list.component.css ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0dGVuZGFuY2Uvc2hlZHVsZS1saXN0L3NoZWR1bGUtbGlzdC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/attendance/shedule-list/shedule-list.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/attendance/shedule-list/shedule-list.component.ts ***!
  \*******************************************************************/
/*! exports provided: SheduleListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SheduleListComponent", function() { return SheduleListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var SheduleListComponent = /** @class */ (function () {
    function SheduleListComponent() {
    }
    SheduleListComponent.prototype.ngOnInit = function () {
    };
    SheduleListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-shedule-list',
            template: __webpack_require__(/*! raw-loader!./shedule-list.component.html */ "./node_modules/raw-loader/index.js!./src/app/attendance/shedule-list/shedule-list.component.html"),
            styles: [__webpack_require__(/*! ./shedule-list.component.css */ "./src/app/attendance/shedule-list/shedule-list.component.css")]
        })
    ], SheduleListComponent);
    return SheduleListComponent;
}());



/***/ }),

/***/ "./src/app/attendance/shift-list/shift-list.component.css":
/*!****************************************************************!*\
  !*** ./src/app/attendance/shift-list/shift-list.component.css ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0dGVuZGFuY2Uvc2hpZnQtbGlzdC9zaGlmdC1saXN0LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/attendance/shift-list/shift-list.component.ts":
/*!***************************************************************!*\
  !*** ./src/app/attendance/shift-list/shift-list.component.ts ***!
  \***************************************************************/
/*! exports provided: TodoItemNode, TodoItemFlatNode, ChecklistDatabase, ShiftListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ShiftListComponent", function() { return ShiftListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/service/personnel/personnel.service */ "./src/app/service/personnel/personnel.service.ts");
/* harmony import */ var src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/service/attendance/attendance-service.service */ "./src/app/service/attendance/attendance-service.service.ts");
/* harmony import */ var _Model_ShiftModel__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../Model/ShiftModel */ "./src/app/attendance/Model/ShiftModel.ts");











;




var jsPDF = __webpack_require__(/*! jspdf */ "./node_modules/jspdf/dist/jspdf.min.js");
__webpack_require__(/*! jspdf-autotable */ "./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js");
var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service, PersonnelService) {
        this.service = service;
        this.PersonnelService = PersonnelService;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_9__["BehaviorSubject"]([]);
        // this.getallParentDepartmentServer();
        /* console.log("before Initializing")
         console.log(TREE_DATA)
         console.log("After Initializing")
          console.log("First Constructor Finished"+TREE_DATA)*/
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    /*  getallParentDepartmentServer(){
        console.log("getallParentDepartmentServer")
        this.PersonnelService.getAllParentDepartmentDetailsBegining().subscribe(response=>this.succsess(response),error=>this.errorHandlin(error))
      }*/
    /*succsess(response)
    {
      console.log("Succes");
      console.log("TREE DATA-------------");
      console.log(TREE_DATA);
      console.log("response--------------");
      console.log(response);
      TREE_DATA=response;
      console.log("responses----------------Changed to TREE_DATA");
      console.log(TREE_DATA);
      this.initialize();
    }*/
    /* errorHandlin(error)
       {
         console.log("Eroor");
       }*/
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var ShiftListComponent = /** @class */ (function () {
    function ShiftListComponent(attendanceService, personnel_service, deviceService, messageService, confirmationService, database, service, dialog, router) {
        var _this = this;
        this.attendanceService = attendanceService;
        this.personnel_service = personnel_service;
        this.deviceService = deviceService;
        this.messageService = messageService;
        this.confirmationService = confirmationService;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.timeZoneForm = _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"];
        this.errordisplayflag = false;
        this.pagenum = 15;
        this.sum = 0;
        this.sumOriginal = 10;
        this.totalRecords = 0;
        this.count = 1;
        this.msgs = [];
        this.MySum = [];
        this.display = false;
        this.parentArea = "";
        this.parentDepartment = "";
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
    }
    ShiftListComponent.prototype.showDialog = function () {
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    ShiftListComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    ShiftListComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    ShiftListComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    ShiftListComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    ShiftListComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    ShiftListComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    ShiftListComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    ShiftListComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    ShiftListComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    ShiftListComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.parentDepartment = event.value;
    };
    ShiftListComponent.prototype.Edit_Department_success = function (response) {
        console.log("Edit_Department_success");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Sucsses") {
            console.log("if sucsess  Edit_Department_success");
            this.initialmethod();
            this.router.navigate(['department']);
        }
        else {
            console.log("if else sucsess  Edit_Department_success");
            this.errordisplayflag = true;
        }
    };
    ShiftListComponent.prototype.Department_edit_error = function (error) {
        console.log("error1");
        console.log(error);
        this.errorDta = "Server Not Responding,Please try Again";
        this.errordisplayflag = true;
    };
    ShiftListComponent.prototype.displayfalse = function () {
        console.log("display false" + this.parentArea);
        this.parentArea = null;
        this.display = false;
    };
    //constructor(private router: Router,private deviceService:DeviceserviceService,private messageService: MessageService,private confirmationService: ConfirmationService) { }
    ShiftListComponent.prototype.ngOnInit = function () {
        this.initialmethod();
        // console.log("ng init")
        this.cols = [
            { field: 'shift_name', header: 'Shift Name', width: '30%' },
            { field: 'no_Of_Cycle', header: 'No of Cycle', width: '30%' },
            { field: 'unit_Of_Cycle', header: 'Unit of Cycle', width: '30%' },
            { field: 'auto_Shift', header: 'Auto Sift', width: '30%' },
            { field: 'count_Day_Off_As', header: 'Cont Day of As', width: '30%' },
            { field: 'count_Weekend_As', header: 'Count Weekend As', width: '30%' },
            { field: 'shift_Day_Selection', header: 'Shift Day Selection', width: '30%' },
            { field: 'shift_Timetable_Selection', header: 'Shift Time Table Selection', width: '30%' },
            { field: ' ', header: 'Action', width: '35%' }
        ];
    };
    ShiftListComponent.prototype.initialmethod = function () {
        var _this = this;
        this.attendanceService.Get_Shift_List().subscribe(function (response) { return _this.handleSuccess_Get_Shift_List_Begininig(response); }, function (error) { return _this.handleError_Get_Shift_List_Begininig(error); });
    };
    ShiftListComponent.prototype.handleSuccess_Get_Shift_List_Begininig = function (response) {
        var e_1, _a;
        console.log("Success handleSuccess_Get_Shift_List_Begininig");
        console.log(response);
        var jsonArray;
        var count = 0;
        try {
            for (var response_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](response), response_1_1 = response_1.next(); !response_1_1.done; response_1_1 = response_1.next()) {
                var entry = response_1_1.value;
                entry.primary_id = count++;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (response_1_1 && !response_1_1.done && (_a = response_1.return)) _a.call(response_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        this.allRules = response;
    };
    ShiftListComponent.prototype.handleError_Get_Shift_List_Begininig = function (error) {
        console.log("handle  Error handleError_Get_Shift_List_Begininig");
        console.log(error);
    };
    ShiftListComponent.prototype.Delete_success = function (response) {
        console.log("success shift delete ");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Sucsses") {
            console.log("if sucsess");
            this.initialmethod();
            this.router.navigate(['shiftlist']);
        }
        else {
            this.errordisplayflag = true;
            this.initialmethod();
        }
    };
    ShiftListComponent.prototype.Delete_error = function (error) {
        console.log("Shift_Delete_error");
        console.log(error);
        this.errorDta = "Server Not Responding,Please try Again";
        this.errordisplayflag = true;
    };
    ShiftListComponent.prototype.onRowEditInit = function (data) {
        console.log("onRowEditInit");
        console.log(data);
        this.shift_Name = data.shift_name;
        console.log(this.shift_Name);
    };
    ShiftListComponent.prototype.onRowEditSave = function (data) {
        console.log("onRowEditSave" + data);
        this.attendanceService.setShift(data);
        this.router.navigate(['addshif']);
    };
    ShiftListComponent.prototype.onRowEditCancel = function (index) {
        console.log("onRowEditCancel");
    };
    ShiftListComponent.prototype.onRowRemove = function (department, index) {
        var _this = this;
        console.log("onRowRemove");
        //console.log(device.Serial_Number)
        //console.log(obj)
        this.confirmationService.confirm({
            message: 'Are you sure that you want to proceed?',
            header: 'Confirmation',
            icon: 'pi pi-exclamation-triangle',
            accept: function () {
                _this.msgs = [{ severity: 'info', summary: 'Confirmed', detail: 'You have accepted' }];
                console.log("YES");
                var obj = new _Model_ShiftModel__WEBPACK_IMPORTED_MODULE_14__["DeleteShiftModel"](_this.shift_Name);
                console.log("delete" + obj);
                _this.attendanceService.Delete_Shift(obj).subscribe(function (response) { return _this.Delete_success(response); }, function (error) { return _this.Delete_error(error); });
            },
            reject: function () {
                _this.msgs = [{ severity: 'info', summary: 'Rejected', detail: 'You have rejected' }];
                console.log("NOS");
            }
        });
    };
    ShiftListComponent.prototype.showSuccess = function () {
        this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
    };
    ShiftListComponent.prototype.showDialog1 = function () {
        this.display = true;
    };
    ShiftListComponent.prototype.assignValu = function () {
        console.log("assiagn value");
        this.display = false;
    };
    ShiftListComponent.ctorParameters = function () { return [
        { type: src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__["AttendanceServiceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"] },
        { type: primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"] },
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] }
    ]; };
    ShiftListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-shift-list',
            template: __webpack_require__(/*! raw-loader!./shift-list.component.html */ "./node_modules/raw-loader/index.js!./src/app/attendance/shift-list/shift-list.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"], ChecklistDatabase],
            styles: [__webpack_require__(/*! ./shift-list.component.css */ "./src/app/attendance/shift-list/shift-list.component.css")]
        })
    ], ShiftListComponent);
    return ShiftListComponent;
}());



/***/ }),

/***/ "./src/app/attendance/timetable-list/timetable-list.component.css":
/*!************************************************************************!*\
  !*** ./src/app/attendance/timetable-list/timetable-list.component.css ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0dGVuZGFuY2UvdGltZXRhYmxlLWxpc3QvdGltZXRhYmxlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/attendance/timetable-list/timetable-list.component.ts":
/*!***********************************************************************!*\
  !*** ./src/app/attendance/timetable-list/timetable-list.component.ts ***!
  \***********************************************************************/
/*! exports provided: TodoItemNode, TodoItemFlatNode, ChecklistDatabase, TimetableListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimetableListComponent", function() { return TimetableListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/service/personnel/personnel.service */ "./src/app/service/personnel/personnel.service.ts");
/* harmony import */ var src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/service/attendance/attendance-service.service */ "./src/app/service/attendance/attendance-service.service.ts");
/* harmony import */ var _Model_TimeTableModels__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../Model/TimeTableModels */ "./src/app/attendance/Model/TimeTableModels.ts");











;




var jsPDF = __webpack_require__(/*! jspdf */ "./node_modules/jspdf/dist/jspdf.min.js");
__webpack_require__(/*! jspdf-autotable */ "./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js");
var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service, PersonnelService) {
        this.service = service;
        this.PersonnelService = PersonnelService;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_9__["BehaviorSubject"]([]);
        // this.getallParentDepartmentServer();
        /* console.log("before Initializing")
         console.log(TREE_DATA)
         console.log("After Initializing")
          console.log("First Constructor Finished"+TREE_DATA)*/
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    /*  getallParentDepartmentServer(){
        console.log("getallParentDepartmentServer")
        this.PersonnelService.getAllParentDepartmentDetailsBegining().subscribe(response=>this.succsess(response),error=>this.errorHandlin(error))
      }*/
    /*succsess(response)
    {
      console.log("Succes");
      console.log("TREE DATA-------------");
      console.log(TREE_DATA);
      console.log("response--------------");
      console.log(response);
      TREE_DATA=response;
      console.log("responses----------------Changed to TREE_DATA");
      console.log(TREE_DATA);
      this.initialize();
    }*/
    /* errorHandlin(error)
       {
         console.log("Eroor");
       }*/
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var TimetableListComponent = /** @class */ (function () {
    function TimetableListComponent(attendanceService, personnel_service, deviceService, messageService, confirmationService, database, service, dialog, router) {
        var _this = this;
        this.attendanceService = attendanceService;
        this.personnel_service = personnel_service;
        this.deviceService = deviceService;
        this.messageService = messageService;
        this.confirmationService = confirmationService;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.Time_Table_Name = "";
        this.timeZoneForm = _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"];
        this.errordisplayflag = false;
        this.pagenum = 15;
        this.sum = 0;
        this.sumOriginal = 10;
        this.totalRecords = 0;
        this.count = 1;
        this.msgs = [];
        this.MySum = [];
        this.display = false;
        this.parentArea = "";
        this.parentDepartment = "";
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
    }
    TimetableListComponent.prototype.showDialog = function () {
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    TimetableListComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    TimetableListComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    TimetableListComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    TimetableListComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    TimetableListComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    TimetableListComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    TimetableListComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    TimetableListComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    TimetableListComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    TimetableListComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.parentDepartment = event.value;
    };
    TimetableListComponent.prototype.Edit_Department_success = function (response) {
        console.log("Edit_Department_success");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Sucsses") {
            console.log("if sucsess  Edit_Department_success");
            this.initialmethod();
            this.router.navigate(['department']);
        }
        else {
            console.log("if else sucsess  Edit_Department_success");
            this.errordisplayflag = true;
        }
    };
    TimetableListComponent.prototype.Department_edit_error = function (error) {
        console.log("error1");
        console.log(error);
        this.errorDta = "Server Not Responding,Please try Again";
        this.errordisplayflag = true;
    };
    TimetableListComponent.prototype.displayfalse = function () {
        console.log("display false" + this.parentArea);
        this.parentArea = null;
        this.display = false;
    };
    //constructor(private router: Router,private deviceService:DeviceserviceService,private messageService: MessageService,private confirmationService: ConfirmationService) { }
    TimetableListComponent.prototype.ngOnInit = function () {
        this.initialmethod();
        // console.log("ng init")
        this.cols = [
            { field: 'timetable_Name', header: 'Name', width: '25%' },
            { field: 'check_In', header: 'Check In', width: '30%' },
            { field: 'check_Out', header: 'Check Out', width: '30%' },
            { field: 'workday', header: 'Work Day', width: '30%' },
            { field: 'multiple_In_Out', header: 'Multiple I/O', width: '20%' },
            { field: 'base_On_Punch_Type', header: 'Based On Punch Type', width: '20%' },
            { field: 'necessary_Check_In', header: 'Necessary Check In', width: '20%' },
            { field: 'necessary_Check_OUT', header: 'Necessary Check Out', width: '20%' },
            { field: 'auto_OT_Check_In_Early', header: 'Auto Ot Check In', width: '20%' },
            { field: 'auto_OT_Check_Out_Delay', header: 'Auto Ot Check Out', width: '20%' },
            { field: ' ', header: 'Action', width: '35%' }
        ];
    };
    TimetableListComponent.prototype.initialmethod = function () {
        var _this = this;
        this.attendanceService.Get_Time_Table_List().subscribe(function (response) { return _this.Successs1(response); }, function (error) { return _this.Error1(error); });
    };
    TimetableListComponent.prototype.Successs1 = function (response) {
        var e_1, _a;
        console.log("Success Time TAble List");
        console.log(response);
        var jsonArray;
        var count = 0;
        try {
            for (var response_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](response), response_1_1 = response_1.next(); !response_1_1.done; response_1_1 = response_1.next()) {
                var entry = response_1_1.value;
                console.log("Before");
                console.log(entry);
                entry.primary_id = count++;
                console.log("After");
                console.log(entry);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (response_1_1 && !response_1_1.done && (_a = response_1.return)) _a.call(response_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        console.log(response);
        this.allRules = response;
    };
    TimetableListComponent.prototype.Error1 = function (error) {
        console.log("handle  Error Time Table List");
        console.log(error);
    };
    TimetableListComponent.prototype.Delete_success = function (response) {
        console.log("success department delete ");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Sucsses") {
            console.log("if sucsess");
            this.initialmethod();
            this.router.navigate(['timeTableList']);
        }
        else {
            this.errordisplayflag = true;
            this.initialmethod();
        }
    };
    TimetableListComponent.prototype.Delete_error = function (error) {
        console.log("Department_Delete_error");
        console.log(error);
        this.errorDta = "Server Not Responding,Please try Again";
        this.errordisplayflag = true;
    };
    TimetableListComponent.prototype.onRowEditInit = function (data) {
        console.log("onRowEditInit");
        console.log(data);
        this.Time_Table_Name = data.timetable_Name;
        console.log(this.Time_Table_Name);
    };
    TimetableListComponent.prototype.onRowEditSave = function (rowData) {
        console.log("on Row Edit Save" + rowData);
        this.attendanceService.setTimeTable(rowData);
        this.router.navigate(['addtimeTable']);
    };
    TimetableListComponent.prototype.onRowEditCancel = function (index) {
        console.log("onRowEditCancel");
    };
    TimetableListComponent.prototype.onRowRemove = function (department, index) {
        var _this = this;
        console.log("onRowRemove");
        //console.log(device.Serial_Number)
        //console.log(obj)
        this.confirmationService.confirm({
            message: 'Are you sure that you want to proceed?',
            header: 'Confirmation',
            icon: 'pi pi-exclamation-triangle',
            accept: function () {
                _this.msgs = [{ severity: 'info', summary: 'Confirmed', detail: 'You have accepted' }];
                console.log("YES");
                var obj = new _Model_TimeTableModels__WEBPACK_IMPORTED_MODULE_14__["DeleteTimeTable"](_this.Time_Table_Name);
                _this.attendanceService.Delete_TimeTable(obj).subscribe(function (response) { return _this.Delete_success(response); }, function (error) { return _this.Delete_error(error); });
            },
            reject: function () {
                _this.msgs = [{ severity: 'info', summary: 'Rejected', detail: 'You have rejected' }];
                console.log("NOS");
            }
        });
    };
    TimetableListComponent.prototype.showSuccess = function () {
        this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
    };
    TimetableListComponent.prototype.showDialog1 = function () {
        this.display = true;
    };
    TimetableListComponent.prototype.assignValu = function () {
        console.log("assiagn value");
        this.display = false;
    };
    TimetableListComponent.ctorParameters = function () { return [
        { type: src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_13__["AttendanceServiceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"] },
        { type: primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"] },
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] }
    ]; };
    TimetableListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-timetable-list',
            template: __webpack_require__(/*! raw-loader!./timetable-list.component.html */ "./node_modules/raw-loader/index.js!./src/app/attendance/timetable-list/timetable-list.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"], ChecklistDatabase],
            styles: [__webpack_require__(/*! ./timetable-list.component.css */ "./src/app/attendance/timetable-list/timetable-list.component.css")]
        })
    ], TimetableListComponent);
    return TimetableListComponent;
}());



/***/ }),

/***/ "./src/app/attendance/transaction-list/transaction-list.component.css":
/*!****************************************************************************!*\
  !*** ./src/app/attendance/transaction-list/transaction-list.component.css ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F0dGVuZGFuY2UvdHJhbnNhY3Rpb24tbGlzdC90cmFuc2FjdGlvbi1saXN0LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/attendance/transaction-list/transaction-list.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/attendance/transaction-list/transaction-list.component.ts ***!
  \***************************************************************************/
/*! exports provided: addDeciceModel, SerialNumberModel, TodoItemNode, TodoItemFlatNode, ChecklistDatabase, TransactionListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addDeciceModel", function() { return addDeciceModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SerialNumberModel", function() { return SerialNumberModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TransactionListComponent", function() { return TransactionListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/service/attendance/attendance-service.service */ "./src/app/service/attendance/attendance-service.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");











;



var jsPDF = __webpack_require__(/*! jspdf */ "./node_modules/jspdf/dist/jspdf.min.js");
__webpack_require__(/*! jspdf-autotable */ "./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js");
var addDeciceModel = /** @class */ (function () {
    function addDeciceModel(device_Name, Serial_Number, ip_address, port_no, area_code, time_zone, manage_door, real_time_data_upload, request_interval, device_enable) {
        this.device_Name = device_Name;
        this.Serial_Number = Serial_Number;
        this.ip_address = ip_address;
        this.port_no = port_no;
        this.area_code = area_code;
        this.time_zone = time_zone;
        this.manage_door = manage_door;
        this.real_time_data_upload = real_time_data_upload;
        this.request_interval = request_interval;
        this.device_enable = device_enable;
    }
    addDeciceModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return addDeciceModel;
}());

var SerialNumberModel = /** @class */ (function () {
    function SerialNumberModel(Serial_Number) {
        this.Serial_Number = Serial_Number;
    }
    SerialNumberModel.ctorParameters = function () { return [
        { type: String }
    ]; };
    return SerialNumberModel;
}());

var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service) {
        this.service = service;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_9__["BehaviorSubject"]([]);
        // this.getallAreasFromServer();
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallAreasFromServer = function () {
        console.log("ChecklistDatabase  :  getallAreasFromServer()");
        //  this.service.getAllParentDetailsBegining().subscribe(response=>this.succsessGetallAreasFromServer(response),error=>this.errorHandleGetallAreasFromServer(error))
    };
    ChecklistDatabase.prototype.succsessGetallAreasFromServer = function (response) {
        console.log("ChecklistDatabase :  succsessGetallAreasFromServer()");
        TREE_DATA = response;
        this.initialize();
    };
    ChecklistDatabase.prototype.errorHandleGetallAreasFromServer = function (error) {
        console.log("ChecklistDatabase :  errorHandleGetallAreasFromServer()");
    };
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var TransactionListComponent = /** @class */ (function () {
    function TransactionListComponent(datepipe, deviceService, messageService, confirmationService, database, service, dialog, router, attendanceService) {
        var _this = this;
        this.datepipe = datepipe;
        this.deviceService = deviceService;
        this.messageService = messageService;
        this.confirmationService = confirmationService;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.attendanceService = attendanceService;
        this.value = 0;
        this.fromDate = "";
        this.toDate = "";
        this.timeZoneForm = _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"];
        this.errordisplayflag = false;
        this.pagenum = 15;
        this.sum = 0;
        this.sumOriginal = 10;
        this.totalRecords = 0;
        this.count = 1;
        this.msgs = [];
        this.MySum = [];
        this.display = false;
        this.addNewDeviceFlag = false;
        this.parentArea = "";
        this.editing = true;
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.progressBar = false;
        this.succesFlag = 0;
        this.count1 = 1;
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
    }
    TransactionListComponent.prototype.ngOnInit = function () {
        this.initialmethod();
        this.cols = [
            { field: 'SL_NO', header: 'Serial No' },
            { field: 'employ_SN', header: 'Employee SN' },
            { field: 'Date', header: 'Date' },
            { field: 'Day', header: 'day' },
            { field: 'Time', header: 'Time' },
            { field: 'First_name', header: 'First Name' },
            { field: 'last_name', header: 'Last Name' },
            { field: 'department', header: 'Department' },
            { field: 'area_code', header: 'Area Code' },
            { field: 'area_name', header: 'Area Name' },
            { field: 'posistion', header: 'Position' },
            { field: 'check_type', header: 'Check Type' },
        ];
    };
    TransactionListComponent.prototype.showDialog = function () {
        this.display = true;
    };
    TransactionListComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.parentArea = event.value;
    };
    TransactionListComponent.prototype.displayfalse = function () {
        console.log("display false" + this.parentArea);
        this.parentArea = null;
        this.display = false;
    };
    TransactionListComponent.prototype.initialmethod = function () {
        var _this = this;
        this.attendanceService.generatereport().subscribe(function (response) { return _this.handleSuccessInitialMethod(response); }, function (error) { return _this.handleErrorinitialMethod(error); });
        var interval = setInterval(function () {
            // console.log("valu : "+this.value)
            _this.progressBar = true;
            _this.value = _this.value + Math.floor(Math.random() * 10) + 1;
            if (_this.value >= 100) {
                _this.value = 100;
                _this.progressBar = false;
                // this.messageService.add({severity: 'info', summary: 'Success', detail: 'Process Completed'});
                // clearInterval(interval);
                // this.value=0;
                if (_this.succesFlag == 1) {
                    clearInterval(interval);
                }
                else {
                    _this.value = 0;
                }
            }
        }, 1000);
    };
    TransactionListComponent.prototype.handleSuccessInitialMethod = function (response) {
        var _this = this;
        this.value = 100;
        this.progressBar = false;
        this.succesFlag = 1;
        console.log("handleSuccess");
        //this.allDevice=response;
        //console.log(this.allDevice);
        console.log(response.responce_data);
        this.attendanceService.getTransaction().subscribe(function (response) { return _this.handleSuccessGenerateReportMethod(response); }, function (error) { return _this.handleErrorinitialMethod(error); });
    };
    TransactionListComponent.prototype.handleSuccessGenerateReportMethod = function (response) {
        this.value = 100;
        this.progressBar = false;
        this.succesFlag = 1;
        console.log("report generated");
        this.allDevice = response;
        console.log(this.allDevice);
        /* let data=this.allDevice.filter(
           m => new Date(m.Date) >= new Date("2019-05-19") && new Date(m.Date) <= new Date("2019-05-19")
           );*/
        //  console.log(data);
        //  this.allDevice=data;
    };
    TransactionListComponent.prototype.handleErrorinitialMethod = function (error) {
        this.value = 100;
        this.progressBar = false;
        this.succesFlag = 1;
        console.log("handle  Error");
        console.log(error);
        this.showError();
    };
    TransactionListComponent.prototype.success1D = function (response) {
        var _this = this;
        console.log("success1");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (response.responce_data === "Success") {
            console.log("if sucsess");
            this.router.navigate(['device']);
            this.deviceService.getDeviceDetailsAtBeginning().subscribe(function (response) { return _this.handleSuccessInitialMethod(response); }, function (error) { return _this.handleErrorinitialMethod(error); });
        }
        else {
            this.showError1(response.responce_data);
        }
    };
    TransactionListComponent.prototype.error1D = function (error) {
        console.log("error1");
        console.log(error);
        this.errorDta = "Server Not Responding,Please try Again";
        //this.errordisplayflag=true;
        this.showError1(error.responce_data);
    };
    TransactionListComponent.prototype.onRowEditInit = function (car) {
        console.log("onRowEditInit");
        // this.clonedCars[car.vin] = {...car};
    };
    TransactionListComponent.prototype.onRowEditSave = function (device) {
        var e_1, _a;
        console.log("onRowEditSave");
        var SerialNuber = device['Serial_Number'];
        try {
            for (var _b = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](this.allDevice), _c = _b.next(); !_c.done; _c = _b.next()) {
                var entry = _c.value;
                if (entry['Serial_Number'] == SerialNuber) {
                    console.log("Matches");
                    console.log(entry);
                    this.deviceService.setDeviceEdit(entry);
                    this.router.navigate(['addevice']);
                }
                else {
                    console.log("No matches");
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        console.log("For loop Finished");
        var data = this.deviceService.getDeviceEdit();
        console.log(data);
    };
    TransactionListComponent.prototype.onRowEditCancel = function (car, index) {
        console.log("onRowEditCancel");
    };
    TransactionListComponent.prototype.onRowRemove = function (device, index) {
        var _this = this;
        var obj = new SerialNumberModel(device.Serial_Number);
        this.confirmationService.confirm({
            message: 'Are you sure that you want to proceed?',
            header: 'Confirmation',
            icon: 'pi pi-exclamation-triangle',
            accept: function () {
                _this.msgs = [{ severity: 'info', summary: 'Confirmed', detail: 'You have accepted' }];
                console.log("YES");
                _this.deviceService.DeleteDevice(obj).subscribe(function (response) { return _this.success1D(response); }, function (error) { return _this.error1D(error); });
            },
            reject: function () {
                _this.msgs = [{ severity: 'info', summary: 'Rejected', detail: 'You have rejected' }];
                console.log("NOS");
                // this.showSuccess();
            }
        });
    };
    TransactionListComponent.prototype.showSuccess = function () {
        this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
    };
    TransactionListComponent.prototype.addNewDeviceFlagConfig = function () {
        console.log("addNewDeviceFlagConfig");
        this.addNewDeviceFlag = true;
    };
    TransactionListComponent.prototype.searchByDate = function () {
        this.allDeviceTemp = this.allDevice;
        console.log(this.fromDate);
        console.log(this.toDate);
        var fromDate1 = this.datepipe.transform(this.fromDate, 'dd-MM-yyyy');
        console.log("from date:" + fromDate1);
        var toDate1 = this.datepipe.transform(this.toDate, 'dd-MM-yyyy');
        console.log("to date  :" + toDate1);
        var data = this.allDeviceTemp.filter(function (m) { return new Date(m.Date) >= new Date(fromDate1) && new Date(m.Date) <= new Date(toDate1); });
        console.log(data);
        this.allDevice = data;
        console.log(data.length);
        if (data.length == 0) {
            this.showError1("   No Records Found");
            this.allDevice = this.allDeviceTemp;
        }
    };
    TransactionListComponent.prototype.showError1 = function (data) {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: data });
    };
    TransactionListComponent.prototype.showError = function () {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: "Server is Not Responding,Please Try Again later" });
    };
    TransactionListComponent.prototype.mytabledetails = function (table) {
        this.totalRecords = table._totalRecords;
        // console.log(this.count1++)
        //  console.log(table)
        this.filterValue = table.filteredValue;
        //  console.log("total Records : "+this.totalRecords)
        try {
            //  console.log("length of Record : "+filterValue.length)
            // console.log(this.filterValue)
        }
        catch (error) {
            //  console.log("undefine length of record")
        }
    };
    TransactionListComponent.prototype.exportExcel = function () {
        var _this = this;
        var data = this.allDevice;
        try {
            if (this.filterValue.length > 1) {
                console.log("filter  len excel " + this.filterValue.length);
                data = this.filterValue;
            }
        }
        catch (error) {
            console.log("exception in filter excel ");
        }
        __webpack_require__.e(/*! import() | xlsx */ "xlsx").then(__webpack_require__.t.bind(null, /*! xlsx */ "./node_modules/xlsx/xlsx.js", 7)).then(function (xlsx) {
            var worksheet = xlsx.utils.json_to_sheet(data);
            var workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };
            var excelBuffer = xlsx.write(workbook, { bookType: 'xlsx', type: 'array' });
            _this.saveAsExcelFile(excelBuffer, "primengTable");
        });
    };
    TransactionListComponent.prototype.saveAsExcelFile = function (buffer, fileName) {
        __webpack_require__.e(/*! import() | file-saver */ "file-saver").then(__webpack_require__.t.bind(null, /*! file-saver */ "./node_modules/file-saver/dist/FileSaver.min.js", 7)).then(function (FileSaver) {
            var EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';
            var EXCEL_EXTENSION = '.xlsx';
            var data = new Blob([buffer], {
                type: EXCEL_TYPE
            });
            FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);
        });
    };
    TransactionListComponent.prototype.exportPdf = function () {
        var e_2, _a;
        var doc = new jsPDF('p', 'pt');
        var col = ["Sl:No", "Date", "Day", "Time", "First Name", "Last Name", "Department", "Area Code", "Area Name", "Position", "In Out"];
        var rows = [];
        var data = this.allDevice;
        try {
            if (this.filterValue.length > 1) {
                console.log("filter calue len" + this.filterValue.length);
                data = this.filterValue;
            }
        }
        catch (error) {
            console.log("exception in filter");
        }
        var count = 1;
        try {
            for (var data_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {
                var entry = data_1_1.value;
                var temp = [];
                temp.push(count);
                temp.push(entry.Date);
                temp.push(entry.Day);
                temp.push(entry.Time);
                temp.push(entry.First_name);
                temp.push(entry.last_name);
                temp.push(entry.department);
                temp.push(entry.area_code);
                temp.push(entry.area_name);
                temp.push(entry.posistion);
                temp.push(entry.check_type);
                temp.push(entry.device_slno);
                rows.push(temp);
                count++;
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
        var totalPagesExp = "{total_pages_count_string}";
        var leftMargin = 100;
        doc.setFontSize(10);
        console.log(rows);
        doc.autoTable(col, rows, {
            columnStyles: {
                0: { cellWidth: 40 },
                1: { cellWidth: 70 },
                2: { cellWidth: 40 },
                3: { cellWidth: 40 },
                4: { cellWidth: 60 },
                5: { cellWidth: 70 },
                6: { cellWidth: 50 },
                7: { cellWidth: 50 },
                8: { cellWidth: 50 },
                9: { cellWidth: 50 },
                10: { cellWidth: 50 },
            },
            theme: "grid",
            margin: { horizontal: 5 },
            bodyStyles: { valign: 'top' },
            styles: { fontSize: 8 },
            //https://github.com/simonbengtsson/jsPDF-AutoTable/issues/306
            didDrawPage: function (data) {
                doc.text("TRANSACTION REPORT", 250, 30);
                var str = "Page " + data.pageCount;
                // Total page number plugin only available in jspdf v1.0+
                if (typeof doc.putTotalPages === 'function') {
                    str = str + " of " + totalPagesExp;
                }
                str = str + ". Generated on " + Date();
                doc.text(str, leftMargin, doc.internal.pageSize.height - 10);
            }
        });
        // Total page number plugin only available in jspdf v1.0+
        if (typeof doc.putTotalPages === 'function') {
            doc.putTotalPages(totalPagesExp);
        }
        doc.save("Transaction Report");
        /* var doc = new jsPDF({
           orientation: 'port',
           unit: 'in',
       
         })
       
       doc.text('Hello world!', 1, 1)
        doc.save('Test.pdf');*/
    };
    TransactionListComponent.ctorParameters = function () { return [
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_13__["DatePipe"] },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"] },
        { type: primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"] },
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
        { type: src_app_service_attendance_attendance_service_service__WEBPACK_IMPORTED_MODULE_12__["AttendanceServiceService"] }
    ]; };
    TransactionListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-transaction-list',
            template: __webpack_require__(/*! raw-loader!./transaction-list.component.html */ "./node_modules/raw-loader/index.js!./src/app/attendance/transaction-list/transaction-list.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"], ChecklistDatabase, _angular_common__WEBPACK_IMPORTED_MODULE_13__["DatePipe"]],
            styles: [__webpack_require__(/*! ./transaction-list.component.css */ "./src/app/attendance/transaction-list/transaction-list.component.css")]
        })
    ], TransactionListComponent);
    return TransactionListComponent;
}());



/***/ }),

/***/ "./src/app/car-service.service.ts":
/*!****************************************!*\
  !*** ./src/app/car-service.service.ts ***!
  \****************************************/
/*! exports provided: CarServiceService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CarServiceService", function() { return CarServiceService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");




var CarServiceService = /** @class */ (function () {
    function CarServiceService(router, http) {
        this.router = router;
        this.http = http;
    }
    CarServiceService.prototype.getCarsSmall = function () {
        return this.http.get("./assets/test/test2.json");
    };
    CarServiceService.ctorParameters = function () { return [
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"] }
    ]; };
    CarServiceService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        })
    ], CarServiceService);
    return CarServiceService;
}());



/***/ }),

/***/ "./src/app/contact-form/contact-form.component.css":
/*!*********************************************************!*\
  !*** ./src/app/contact-form/contact-form.component.css ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhY3QtZm9ybS9jb250YWN0LWZvcm0uY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/contact-form/contact-form.component.ts":
/*!********************************************************!*\
  !*** ./src/app/contact-form/contact-form.component.ts ***!
  \********************************************************/
/*! exports provided: ContactFormComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ContactFormComponent", function() { return ContactFormComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var ContactFormComponent = /** @class */ (function () {
    function ContactFormComponent() {
    }
    ContactFormComponent.prototype.ngOnInit = function () {
    };
    ContactFormComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-contact-form',
            template: __webpack_require__(/*! raw-loader!./contact-form.component.html */ "./node_modules/raw-loader/index.js!./src/app/contact-form/contact-form.component.html"),
            styles: [__webpack_require__(/*! ./contact-form.component.css */ "./src/app/contact-form/contact-form.component.css")]
        })
    ], ContactFormComponent);
    return ContactFormComponent;
}());



/***/ }),

/***/ "./src/app/device/device.component.css":
/*!*********************************************!*\
  !*** ./src/app/device/device.component.css ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host ::ng-deep .mat-radio-container{\r\n    height: 10px;\r\n    width: 10px;\r\n  }\r\n  :host ::ng-deep .mat-radio-outer-circle{\r\n    height: 10px;\r\n    width: 10px;\r\n  }\r\n  :host ::ng-deep .mat-radio-inner-circle{\r\n    height: 10px;\r\n    width: 10px;\r\n  }\r\n  :host ::ng-deep .mat-radio-button .mat-radio-ripple{\r\n    height: 20px; /*double of your required circle radius*/\r\n    width: 20px;  /*double of your required circle radius*/\r\n    left: calc(50% - 10px); /*'10px'-same as your required circle radius*/\r\n    top: calc(50% - 10px); /*'10px'-same as your required circle radius*/\r\n  }\r\n  .mat-tree-node { min-height: 0px }\r\n  .ui-table table {\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n    table-layout: fixed;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGV2aWNlL2RldmljZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7RUFDYjtFQUNBO0lBQ0UsWUFBWTtJQUNaLFdBQVc7RUFDYjtFQUNBO0lBQ0UsWUFBWTtJQUNaLFdBQVc7RUFDYjtFQUNBO0lBQ0UsWUFBWSxFQUFFLHdDQUF3QztJQUN0RCxXQUFXLEdBQUcsd0NBQXdDO0lBQ3RELHNCQUFzQixFQUFFLDZDQUE2QztJQUNyRSxxQkFBcUIsRUFBRSw2Q0FBNkM7RUFDdEU7RUFDQSxpQkFBaUIsZ0JBQWdCO0VBRWpDO0lBQ0UseUJBQXlCO0lBQ3pCLFdBQVc7SUFDWCxtQkFBbUI7QUFDdkIiLCJmaWxlIjoic3JjL2FwcC9kZXZpY2UvZGV2aWNlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCA6Om5nLWRlZXAgLm1hdC1yYWRpby1jb250YWluZXJ7XHJcbiAgICBoZWlnaHQ6IDEwcHg7XHJcbiAgICB3aWR0aDogMTBweDtcclxuICB9XHJcbiAgOmhvc3QgOjpuZy1kZWVwIC5tYXQtcmFkaW8tb3V0ZXItY2lyY2xle1xyXG4gICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgd2lkdGg6IDEwcHg7XHJcbiAgfVxyXG4gIDpob3N0IDo6bmctZGVlcCAubWF0LXJhZGlvLWlubmVyLWNpcmNsZXtcclxuICAgIGhlaWdodDogMTBweDtcclxuICAgIHdpZHRoOiAxMHB4O1xyXG4gIH1cclxuICA6aG9zdCA6Om5nLWRlZXAgLm1hdC1yYWRpby1idXR0b24gLm1hdC1yYWRpby1yaXBwbGV7XHJcbiAgICBoZWlnaHQ6IDIwcHg7IC8qZG91YmxlIG9mIHlvdXIgcmVxdWlyZWQgY2lyY2xlIHJhZGl1cyovXHJcbiAgICB3aWR0aDogMjBweDsgIC8qZG91YmxlIG9mIHlvdXIgcmVxdWlyZWQgY2lyY2xlIHJhZGl1cyovXHJcbiAgICBsZWZ0OiBjYWxjKDUwJSAtIDEwcHgpOyAvKicxMHB4Jy1zYW1lIGFzIHlvdXIgcmVxdWlyZWQgY2lyY2xlIHJhZGl1cyovXHJcbiAgICB0b3A6IGNhbGMoNTAlIC0gMTBweCk7IC8qJzEwcHgnLXNhbWUgYXMgeW91ciByZXF1aXJlZCBjaXJjbGUgcmFkaXVzKi9cclxuICB9XHJcbiAgLm1hdC10cmVlLW5vZGUgeyBtaW4taGVpZ2h0OiAwcHggfVxyXG5cclxuICAudWktdGFibGUgdGFibGUge1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgdGFibGUtbGF5b3V0OiBmaXhlZDtcclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/device/device.component.ts":
/*!********************************************!*\
  !*** ./src/app/device/device.component.ts ***!
  \********************************************/
/*! exports provided: addDeciceModel, SerialNumberModel, TodoItemNode, TodoItemFlatNode, ChecklistDatabase, DeviceComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addDeciceModel", function() { return addDeciceModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SerialNumberModel", function() { return SerialNumberModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceComponent", function() { return DeviceComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");












;
var addDeciceModel = /** @class */ (function () {
    function addDeciceModel(device_Name, Serial_Number, ip_address, port_no, area_code, time_zone, manage_door, real_time_data_upload, request_interval, device_enable) {
        this.device_Name = device_Name;
        this.Serial_Number = Serial_Number;
        this.ip_address = ip_address;
        this.port_no = port_no;
        this.area_code = area_code;
        this.time_zone = time_zone;
        this.manage_door = manage_door;
        this.real_time_data_upload = real_time_data_upload;
        this.request_interval = request_interval;
        this.device_enable = device_enable;
    }
    addDeciceModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return addDeciceModel;
}());

var SerialNumberModel = /** @class */ (function () {
    function SerialNumberModel(Serial_Number) {
        this.Serial_Number = Serial_Number;
    }
    SerialNumberModel.ctorParameters = function () { return [
        { type: String }
    ]; };
    return SerialNumberModel;
}());

var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service) {
        this.service = service;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_10__["BehaviorSubject"]([]);
        // this.getallAreasFromServer();
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallAreasFromServer = function () {
        var _this = this;
        console.log("ChecklistDatabase  :  getallAreasFromServer()");
        this.service.getAllParentDetailsBegining().subscribe(function (response) { return _this.succsessGetallAreasFromServer(response); }, function (error) { return _this.errorHandleGetallAreasFromServer(error); });
    };
    ChecklistDatabase.prototype.succsessGetallAreasFromServer = function (response) {
        console.log("ChecklistDatabase :  succsessGetallAreasFromServer()");
        TREE_DATA = response;
        this.initialize();
    };
    ChecklistDatabase.prototype.errorHandleGetallAreasFromServer = function (error) {
        console.log("ChecklistDatabase :  errorHandleGetallAreasFromServer()");
    };
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: _service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_2__["DeviceserviceService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var DeviceComponent = /** @class */ (function () {
    function DeviceComponent(deviceService, messageService, confirmationService, database, service, dialog, router) {
        var _this = this;
        this.deviceService = deviceService;
        this.messageService = messageService;
        this.confirmationService = confirmationService;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.timeZoneForm = _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormGroup"];
        this.errordisplayflag = false;
        this.pagenum = 15;
        this.sum = 0;
        this.sumOriginal = 10;
        this.totalRecords = 0;
        this.count = 1;
        this.msgs = [];
        this.MySum = [];
        this.display = false;
        this.addNewDeviceFlag = false;
        this.parentArea = "";
        this.editing = true;
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_7__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_9__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_8__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_9__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
    }
    DeviceComponent.prototype.ngOnInit = function () {
        this.initialmethod();
        this.cols = [
            { field: 'device_Name', header: 'Device Name' },
            { field: 'Serial_Number', header: 'Serial Number' },
            { field: 'ip_address', header: 'Ip Address' },
            { field: 'area_id', header: 'Area Name' },
            { field: 'status', header: 'Stats' },
            { field: 'last_activity', header: 'Last Activity' },
            { field: 'device_type', header: 'Device Model' },
            { field: 'firmware_Version', header: 'Firmware Version' },
            { field: 'user_count', header: 'User Count' },
            { field: 'fp_count', header: 'FP Count' },
            { field: 'face_count', header: 'Fcae Count' },
            { field: 'fv_Count', header: 'FV Count' },
            { field: 'palm_Count', header: 'Palm Count' },
            { field: ' ', header: 'Action' }
        ];
    };
    DeviceComponent.prototype.showDialog = function () {
        this.display = true;
    };
    DeviceComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.parentArea = event.value;
    };
    DeviceComponent.prototype.displayfalse = function () {
        console.log("display false" + this.parentArea);
        this.parentArea = null;
        this.display = false;
    };
    DeviceComponent.prototype.initialmethod = function () {
        var _this = this;
        this.deviceService.getDeviceDetailsAtBeginning().subscribe(function (response) { return _this.handleSuccessInitialMethod(response); }, function (error) { return _this.handleErrorinitialMethod(error); });
    };
    DeviceComponent.prototype.handleSuccessInitialMethod = function (response) {
        console.log("handleSuccess");
        this.allDevice = response;
        console.log(this.allDevice);
    };
    DeviceComponent.prototype.handleErrorinitialMethod = function (error) {
        console.log("handle  Error");
        console.log(error);
        this.showError();
    };
    DeviceComponent.prototype.success1D = function (response) {
        var _this = this;
        console.log("success1");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (response.responce_data === "Success") {
            console.log("if sucsess");
            this.router.navigate(['device']);
            this.deviceService.getDeviceDetailsAtBeginning().subscribe(function (response) { return _this.handleSuccessInitialMethod(response); }, function (error) { return _this.handleErrorinitialMethod(error); });
        }
        else {
            this.showError1(response.responce_data);
        }
    };
    DeviceComponent.prototype.error1D = function (error) {
        console.log("error1");
        console.log(error);
        this.errorDta = "Server Not Responding,Please try Again";
        //this.errordisplayflag=true;
        this.showError1(error.responce_data);
    };
    DeviceComponent.prototype.onRowEditInit = function (car) {
        console.log("onRowEditInit");
        // this.clonedCars[car.vin] = {...car};
    };
    DeviceComponent.prototype.onRowEditSave = function (device) {
        var e_1, _a;
        console.log("onRowEditSave");
        var SerialNuber = device['Serial_Number'];
        try {
            for (var _b = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](this.allDevice), _c = _b.next(); !_c.done; _c = _b.next()) {
                var entry = _c.value;
                if (entry['Serial_Number'] == SerialNuber) {
                    console.log("Matches");
                    console.log(entry);
                    this.deviceService.setDeviceEdit(entry);
                    this.router.navigate(['addevice']);
                }
                else {
                    console.log("No matches");
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        console.log("For loop Finished");
        var data = this.deviceService.getDeviceEdit();
        console.log(data);
    };
    DeviceComponent.prototype.onRowEditCancel = function (car, index) {
        console.log("onRowEditCancel");
    };
    DeviceComponent.prototype.onRowRemove = function (device, index) {
        var _this = this;
        var obj = new SerialNumberModel(device.Serial_Number);
        this.confirmationService.confirm({
            message: 'Are you sure that you want to proceed?',
            header: 'Confirmation',
            icon: 'pi pi-exclamation-triangle',
            accept: function () {
                // this.msgs = [{severity:'info', summary:'Confirmed', detail:'You have accepted'}];
                console.log("YES");
                _this.deviceService.DeleteDevice(obj).subscribe(function (response) { return _this.success1D(response); }, function (error) { return _this.error1D(error); });
            },
            reject: function () {
                _this.msgs = [{ severity: 'info', summary: 'Rejected', detail: 'You have rejected' }];
                console.log("NOS");
                // this.showSuccess();
            }
        });
    };
    DeviceComponent.prototype.showSuccess = function () {
        this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
    };
    DeviceComponent.prototype.addNewDeviceFlagConfig = function () {
        console.log("addNewDeviceFlagConfig");
        this.addNewDeviceFlag = true;
    };
    DeviceComponent.prototype.showError1 = function (data) {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: data });
    };
    DeviceComponent.prototype.showError = function () {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: "Server is Not Responding,Please Try Again later" });
    };
    DeviceComponent.ctorParameters = function () { return [
        { type: _service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_2__["DeviceserviceService"] },
        { type: primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_4__["MessageService"] },
        { type: primeng_components_common_api__WEBPACK_IMPORTED_MODULE_3__["ConfirmationService"] },
        { type: ChecklistDatabase },
        { type: _service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_2__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_11__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"] }
    ]; };
    DeviceComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-device',
            template: __webpack_require__(/*! raw-loader!./device.component.html */ "./node_modules/raw-loader/index.js!./src/app/device/device.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_3__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_4__["MessageService"], ChecklistDatabase],
            styles: [__webpack_require__(/*! ./device.component.css */ "./src/app/device/device.component.css")]
        })
    ], DeviceComponent);
    return DeviceComponent;
}());



/***/ }),

/***/ "./src/app/error/error.component.css":
/*!*******************************************!*\
  !*** ./src/app/error/error.component.css ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "*{\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n\r\n  #notfound {\r\n    position: relative;\r\n    height: 100vh;\r\n    background: #f6f6f6;\r\n  }\r\n\r\n  #notfound .notfound {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n            transform: translate(-50%, -50%);\r\n  }\r\n\r\n  .notfound {\r\n    max-width: 767px;\r\n    width: 100%;\r\n    line-height: 1.4;\r\n    padding: 110px 40px;\r\n    text-align: center;\r\n    background: #fff;\r\n    box-shadow: 0 15px 15px -10px rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  .notfound .notfound-404 {\r\n    position: relative;\r\n    height: 180px;\r\n  }\r\n\r\n  .notfound .notfound-404 h1 {\r\n    font-family: 'Roboto', sans-serif;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    -webkit-transform: translate(-50%, -50%);\r\n            transform: translate(-50%, -50%);\r\n    font-size: 165px;\r\n    font-weight: 700;\r\n    margin: 0px;\r\n    color: #262626;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .notfound .notfound-404 h1>span {\r\n    color: #00b7ff;\r\n  }\r\n\r\n  .notfound h2 {\r\n    font-family: 'Roboto', sans-serif;\r\n    font-size: 22px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    color: #151515;\r\n    margin-top: 0px;\r\n    margin-bottom: 25px;\r\n  }\r\n\r\n  .notfound .notfound-search {\r\n    position: relative;\r\n    max-width: 320px;\r\n    width: 100%;\r\n    margin: auto;\r\n  }\r\n\r\n  .notfound .notfound-search>input {\r\n    font-family: 'Roboto', sans-serif;\r\n    width: 100%;\r\n    height: 50px;\r\n    padding: 3px 65px 3px 30px;\r\n    color: #151515;\r\n    font-size: 16px;\r\n    background: transparent;\r\n    border: 2px solid #c5c5c5;\r\n    border-radius: 40px;\r\n    transition: 0.2s all;\r\n  }\r\n\r\n  .notfound .notfound-search>input:focus {\r\n    border-color: #00b7ff;\r\n  }\r\n\r\n  .notfound .notfound-search>button {\r\n    position: absolute;\r\n    right: 15px;\r\n    top: 5px;\r\n    width: 40px;\r\n    height: 40px;\r\n    text-align: center;\r\n    border: none;\r\n    background: transparent;\r\n    padding: 0;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .notfound .notfound-search>button>span {\r\n    width: 15px;\r\n    height: 15px;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    -webkit-transform: translate(-50%, -50%) rotate(-45deg);\r\n            transform: translate(-50%, -50%) rotate(-45deg);\r\n    margin-left: -3px;\r\n  }\r\n\r\n  .notfound .notfound-search>button>span:after {\r\n    position: absolute;\r\n    content: '';\r\n    width: 10px;\r\n    height: 10px;\r\n    left: 0px;\r\n    top: 0px;\r\n    border-radius: 50%;\r\n    border: 4px solid #c5c5c5;\r\n    transition: 0.2s all;\r\n  }\r\n\r\n  .notfound-search>button>span:before {\r\n    position: absolute;\r\n    content: '';\r\n    width: 4px;\r\n    height: 10px;\r\n    left: 7px;\r\n    top: 17px;\r\n    border-radius: 2px;\r\n    background: #c5c5c5;\r\n    transition: 0.2s all;\r\n  }\r\n\r\n  .notfound .notfound-search>button:hover>span:after {\r\n    border-color: #00b7ff;\r\n  }\r\n\r\n  .notfound .notfound-search>button:hover>span:before {\r\n    background-color: #00b7ff;\r\n  }\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    .notfound h2 {\r\n      font-size: 18px;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    .notfound .notfound-404 h1 {\r\n      font-size: 141px;\r\n    }\r\n  }\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXJyb3IvZXJyb3IuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUVZLHNCQUFzQjtFQUNoQzs7RUFFQTtJQUNFLFVBQVU7SUFDVixTQUFTO0VBQ1g7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsUUFBUTtJQUNSLHdDQUF3QztZQUVoQyxnQ0FBZ0M7RUFDMUM7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUVSLGdEQUFnRDtFQUMxRDs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxpQ0FBaUM7SUFDakMsa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxRQUFRO0lBQ1Isd0NBQXdDO1lBRWhDLGdDQUFnQztJQUN4QyxnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLFdBQVc7SUFDWCxjQUFjO0lBQ2QseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0UsY0FBYztFQUNoQjs7RUFFQTtJQUNFLGlDQUFpQztJQUNqQyxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsZUFBZTtJQUNmLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLFlBQVk7RUFDZDs7RUFFQTtJQUNFLGlDQUFpQztJQUNqQyxXQUFXO0lBQ1gsWUFBWTtJQUNaLDBCQUEwQjtJQUMxQixjQUFjO0lBQ2QsZUFBZTtJQUNmLHVCQUF1QjtJQUN2Qix5QkFBeUI7SUFDekIsbUJBQW1CO0lBRW5CLG9CQUFvQjtFQUN0Qjs7RUFFQTtJQUNFLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsUUFBUTtJQUNSLFdBQVc7SUFDWCxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWix1QkFBdUI7SUFDdkIsVUFBVTtJQUNWLGVBQWU7RUFDakI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsUUFBUTtJQUNSLHVEQUF1RDtZQUUvQywrQ0FBK0M7SUFDdkQsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxXQUFXO0lBQ1gsWUFBWTtJQUNaLFNBQVM7SUFDVCxRQUFRO0lBQ1Isa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUV6QixvQkFBb0I7RUFDdEI7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFVBQVU7SUFDVixZQUFZO0lBQ1osU0FBUztJQUNULFNBQVM7SUFDVCxrQkFBa0I7SUFDbEIsbUJBQW1CO0lBRW5CLG9CQUFvQjtFQUN0Qjs7RUFFQTtJQUNFLHFCQUFxQjtFQUN2Qjs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQjs7RUFFQTtJQUNFO01BQ0UsZUFBZTtJQUNqQjtFQUNGOztFQUVBO0lBQ0U7TUFDRSxnQkFBZ0I7SUFDbEI7RUFDRiIsImZpbGUiOiJzcmMvYXBwL2Vycm9yL2Vycm9yLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIqe1xyXG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIH1cclxuXHJcbiAgYm9keSB7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gIH1cclxuXHJcbiAgI25vdGZvdW5kIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZjZmNmY2O1xyXG4gIH1cclxuXHJcbiAgI25vdGZvdW5kIC5ub3Rmb3VuZCB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICAgICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICB9XHJcblxyXG4gIC5ub3Rmb3VuZCB7XHJcbiAgICBtYXgtd2lkdGg6IDc2N3B4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBsaW5lLWhlaWdodDogMS40O1xyXG4gICAgcGFkZGluZzogMTEwcHggNDBweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMTVweCAxNXB4IC0xMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogMCAxNXB4IDE1cHggLTEwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIH1cclxuXHJcbiAgLm5vdGZvdW5kIC5ub3Rmb3VuZC00MDQge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgaGVpZ2h0OiAxODBweDtcclxuICB9XHJcblxyXG4gIC5ub3Rmb3VuZCAubm90Zm91bmQtNDA0IGgxIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgICAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgZm9udC1zaXplOiAxNjVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBtYXJnaW46IDBweDtcclxuICAgIGNvbG9yOiAjMjYyNjI2O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICB9XHJcblxyXG4gIC5ub3Rmb3VuZCAubm90Zm91bmQtNDA0IGgxPnNwYW4ge1xyXG4gICAgY29sb3I6ICMwMGI3ZmY7XHJcbiAgfVxyXG5cclxuICAubm90Zm91bmQgaDIge1xyXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC1zaXplOiAyMnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBjb2xvcjogIzE1MTUxNTtcclxuICAgIG1hcmdpbi10b3A6IDBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDI1cHg7XHJcbiAgfVxyXG5cclxuICAubm90Zm91bmQgLm5vdGZvdW5kLXNlYXJjaCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBtYXgtd2lkdGg6IDMyMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgfVxyXG5cclxuICAubm90Zm91bmQgLm5vdGZvdW5kLXNlYXJjaD5pbnB1dCB7XHJcbiAgICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIHBhZGRpbmc6IDNweCA2NXB4IDNweCAzMHB4O1xyXG4gICAgY29sb3I6ICMxNTE1MTU7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICNjNWM1YzU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0MHB4O1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAwLjJzIGFsbDtcclxuICAgIHRyYW5zaXRpb246IDAuMnMgYWxsO1xyXG4gIH1cclxuXHJcbiAgLm5vdGZvdW5kIC5ub3Rmb3VuZC1zZWFyY2g+aW5wdXQ6Zm9jdXMge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjMDBiN2ZmO1xyXG4gIH1cclxuXHJcbiAgLm5vdGZvdW5kIC5ub3Rmb3VuZC1zZWFyY2g+YnV0dG9uIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHJpZ2h0OiAxNXB4O1xyXG4gICAgdG9wOiA1cHg7XHJcbiAgICB3aWR0aDogNDBweDtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcblxyXG4gIC5ub3Rmb3VuZCAubm90Zm91bmQtc2VhcmNoPmJ1dHRvbj5zcGFuIHtcclxuICAgIHdpZHRoOiAxNXB4O1xyXG4gICAgaGVpZ2h0OiAxNXB4O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogNTAlO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSgtNDVkZWcpO1xyXG4gICAgICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSByb3RhdGUoLTQ1ZGVnKTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKC00NWRlZyk7XHJcbiAgICBtYXJnaW4tbGVmdDogLTNweDtcclxuICB9XHJcblxyXG4gIC5ub3Rmb3VuZCAubm90Zm91bmQtc2VhcmNoPmJ1dHRvbj5zcGFuOmFmdGVyIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgd2lkdGg6IDEwcHg7XHJcbiAgICBoZWlnaHQ6IDEwcHg7XHJcbiAgICBsZWZ0OiAwcHg7XHJcbiAgICB0b3A6IDBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJvcmRlcjogNHB4IHNvbGlkICNjNWM1YzU7XHJcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IDAuMnMgYWxsO1xyXG4gICAgdHJhbnNpdGlvbjogMC4ycyBhbGw7XHJcbiAgfVxyXG5cclxuICAubm90Zm91bmQtc2VhcmNoPmJ1dHRvbj5zcGFuOmJlZm9yZSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIHdpZHRoOiA0cHg7XHJcbiAgICBoZWlnaHQ6IDEwcHg7XHJcbiAgICBsZWZ0OiA3cHg7XHJcbiAgICB0b3A6IDE3cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjYzVjNWM1O1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAwLjJzIGFsbDtcclxuICAgIHRyYW5zaXRpb246IDAuMnMgYWxsO1xyXG4gIH1cclxuXHJcbiAgLm5vdGZvdW5kIC5ub3Rmb3VuZC1zZWFyY2g+YnV0dG9uOmhvdmVyPnNwYW46YWZ0ZXIge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjMDBiN2ZmO1xyXG4gIH1cclxuXHJcbiAgLm5vdGZvdW5kIC5ub3Rmb3VuZC1zZWFyY2g+YnV0dG9uOmhvdmVyPnNwYW46YmVmb3JlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGI3ZmY7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XHJcbiAgICAubm90Zm91bmQgaDIge1xyXG4gICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XHJcbiAgICAubm90Zm91bmQgLm5vdGZvdW5kLTQwNCBoMSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTQxcHg7XHJcbiAgICB9XHJcbiAgfVxyXG4iXX0= */"

/***/ }),

/***/ "./src/app/error/error.component.ts":
/*!******************************************!*\
  !*** ./src/app/error/error.component.ts ***!
  \******************************************/
/*! exports provided: ErrorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrorComponent", function() { return ErrorComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var ErrorComponent = /** @class */ (function () {
    function ErrorComponent() {
    }
    ErrorComponent.prototype.ngOnInit = function () {
    };
    ErrorComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-error',
            template: __webpack_require__(/*! raw-loader!./error.component.html */ "./node_modules/raw-loader/index.js!./src/app/error/error.component.html"),
            styles: [__webpack_require__(/*! ./error.component.css */ "./src/app/error/error.component.css")]
        })
    ], ErrorComponent);
    return ErrorComponent;
}());



/***/ }),

/***/ "./src/app/footer/footer.component.css":
/*!*********************************************!*\
  !*** ./src/app/footer/footer.component.css ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/footer/footer.component.ts":
/*!********************************************!*\
  !*** ./src/app/footer/footer.component.ts ***!
  \********************************************/
/*! exports provided: FooterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FooterComponent", function() { return FooterComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var FooterComponent = /** @class */ (function () {
    function FooterComponent() {
    }
    FooterComponent.prototype.ngOnInit = function () {
    };
    FooterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-footer',
            template: __webpack_require__(/*! raw-loader!./footer.component.html */ "./node_modules/raw-loader/index.js!./src/app/footer/footer.component.html"),
            styles: [__webpack_require__(/*! ./footer.component.css */ "./src/app/footer/footer.component.css")]
        })
    ], FooterComponent);
    return FooterComponent;
}());



/***/ }),

/***/ "./src/app/gurds/auth.guard.ts":
/*!*************************************!*\
  !*** ./src/app/gurds/auth.guard.ts ***!
  \*************************************/
/*! exports provided: AuthGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthGuard", function() { return AuthGuard; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _service_login_loginservice_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../service/login/loginservice.service */ "./src/app/service/login/loginservice.service.ts");




var AuthGuard = /** @class */ (function () {
    function AuthGuard(authService, router) {
        this.authService = authService;
        this.router = router;
    }
    AuthGuard.prototype.canActivate = function () {
        if (this.authService.loggedIn()) {
            console.log("retun true");
            return true;
        }
        else {
            console.log("retun false");
            this.router.navigate(['login']);
            return false;
        }
    };
    AuthGuard.ctorParameters = function () { return [
        { type: _service_login_loginservice_service__WEBPACK_IMPORTED_MODULE_3__["LoginserviceService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] }
    ]; };
    AuthGuard = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        })
    ], AuthGuard);
    return AuthGuard;
}());



/***/ }),

/***/ "./src/app/header/header.component.css":
/*!*********************************************!*\
  !*** ./src/app/header/header.component.css ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/header/header.component.ts":
/*!********************************************!*\
  !*** ./src/app/header/header.component.ts ***!
  \********************************************/
/*! exports provided: HeaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderComponent", function() { return HeaderComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var HeaderComponent = /** @class */ (function () {
    function HeaderComponent() {
    }
    HeaderComponent.prototype.ngOnInit = function () {
    };
    HeaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-header',
            template: __webpack_require__(/*! raw-loader!./header.component.html */ "./node_modules/raw-loader/index.js!./src/app/header/header.component.html"),
            styles: [__webpack_require__(/*! ./header.component.css */ "./src/app/header/header.component.css")]
        })
    ], HeaderComponent);
    return HeaderComponent;
}());



/***/ }),

/***/ "./src/app/log-out/log-out.component.css":
/*!***********************************************!*\
  !*** ./src/app/log-out/log-out.component.css ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZy1vdXQvbG9nLW91dC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/log-out/log-out.component.ts":
/*!**********************************************!*\
  !*** ./src/app/log-out/log-out.component.ts ***!
  \**********************************************/
/*! exports provided: LogOutComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LogOutComponent", function() { return LogOutComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");



var LogOutComponent = /** @class */ (function () {
    function LogOutComponent(router) {
        this.router = router;
    }
    LogOutComponent.prototype.ngOnInit = function () {
        localStorage.removeItem("token");
        this.router.navigate(['login']);
    };
    LogOutComponent.ctorParameters = function () { return [
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] }
    ]; };
    LogOutComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-log-out',
            template: __webpack_require__(/*! raw-loader!./log-out.component.html */ "./node_modules/raw-loader/index.js!./src/app/log-out/log-out.component.html"),
            styles: [__webpack_require__(/*! ./log-out.component.css */ "./src/app/log-out/log-out.component.css")]
        })
    ], LogOutComponent);
    return LogOutComponent;
}());



/***/ }),

/***/ "./src/app/login/login.component.css":
/*!*******************************************!*\
  !*** ./src/app/login/login.component.css ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/login/login.component.ts":
/*!******************************************!*\
  !*** ./src/app/login/login.component.ts ***!
  \******************************************/
/*! exports provided: LoginComponent, UserLoginModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginComponent", function() { return LoginComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserLoginModel", function() { return UserLoginModel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _service_login_loginservice_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../service/login/loginservice.service */ "./src/app/service/login/loginservice.service.ts");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_5__);






var LoginComponent = /** @class */ (function () {
    function LoginComponent(router, loginService) {
        this.router = router;
        this.loginService = loginService;
        this.display = false;
        this.error = false;
        this.error1 = false;
        this.ip = null;
        this.port = null;
    }
    LoginComponent.prototype.showDialog = function () {
        this.display = true;
    };
    LoginComponent.prototype.ngOnInit = function () {
        localStorage.setItem("url", localStorage.getItem("url"));
    };
    LoginComponent.prototype.successfulResponse = function (response) {
        console.log(response);
        this.error = false;
        console.log("succ");
        localStorage.setItem("token", response.token);
        this.router.navigate(['device']);
    };
    LoginComponent.prototype.errorResponse = function (error) {
        //  console.log("testerror");
        console.log(error.status);
        // console.log(error.statusText)
        if (error.status == 400)
            this.error = true;
        if (error.status == 0)
            this.error1 = true;
        if (error.status == 404)
            this.error1 = true;
    };
    LoginComponent.prototype.isUserLoggedIn = function () {
        var user = sessionStorage.getItem('authenticateuser');
        return !(user === null);
    };
    LoginComponent.prototype.login = function (form) {
        var _this = this;
        this.error = false;
        this.error1 = false;
        var obj = new UserLoginModel(this.userName, this.password);
        console.log("login");
        console.log(obj);
        this.loginService.loginUser(obj).subscribe(function (res) { return _this.successfulResponse(res); }, function (error) { return _this.errorResponse(error); });
    };
    LoginComponent.prototype.basicSettings = function () {
        localStorage.removeItem("url");
        var url = 'http://';
        url = url + this.ip;
        // url=url+':'
        // url=url+this.port
        localStorage.setItem("url", url);
        console.log(url);
        this.display = false;
    };
    LoginComponent.ctorParameters = function () { return [
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
        { type: _service_login_loginservice_service__WEBPACK_IMPORTED_MODULE_3__["LoginserviceService"] }
    ]; };
    LoginComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-login',
            template: __webpack_require__(/*! raw-loader!./login.component.html */ "./node_modules/raw-loader/index.js!./src/app/login/login.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_4__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_5__["MessageService"]],
            styles: [__webpack_require__(/*! ./login.component.css */ "./src/app/login/login.component.css")]
        })
    ], LoginComponent);
    return LoginComponent;
}());

var UserLoginModel = /** @class */ (function () {
    function UserLoginModel(username, password) {
        this.username = username;
        this.password = password;
    }
    UserLoginModel.ctorParameters = function () { return [
        { type: String },
        { type: String }
    ]; };
    return UserLoginModel;
}());



/***/ }),

/***/ "./src/app/personnel/PersonnelModel/personnelModels.ts":
/*!*************************************************************!*\
  !*** ./src/app/personnel/PersonnelModel/personnelModels.ts ***!
  \*************************************************************/
/*! exports provided: getPersonnel, deletePersonnel, addPersonnel, editPersonnel, addPhoto */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPersonnel", function() { return getPersonnel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deletePersonnel", function() { return deletePersonnel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addPersonnel", function() { return addPersonnel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "editPersonnel", function() { return editPersonnel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addPhoto", function() { return addPhoto; });
var getPersonnel = /** @class */ (function () {
    function getPersonnel(SN, personnel_No, employ_SN, first_name, last_name, Card_No, department, position, Gender, email, Privilege, Area, APPstatus, face, finger_vein, palm, user_name, employment_type, is_active, e_type, employment_date, password, worke_address, home_address, office_no, home_no, birthday, id_number, mob_no, self_password, enable_att_fun, device_privilege) {
        this.SN = SN;
        this.personnel_No = personnel_No;
        this.employ_SN = employ_SN;
        this.first_name = first_name;
        this.last_name = last_name;
        this.Card_No = Card_No;
        this.department = department;
        this.position = position;
        this.Gender = Gender;
        this.email = email;
        this.Privilege = Privilege;
        this.Area = Area;
        this.APPstatus = APPstatus;
        this.face = face;
        this.finger_vein = finger_vein;
        this.palm = palm;
        this.user_name = user_name;
        this.employment_type = employment_type;
        this.is_active = is_active;
        this.e_type = e_type;
        this.employment_date = employment_date;
        this.password = password;
        this.worke_address = worke_address;
        this.home_address = home_address;
        this.office_no = office_no;
        this.home_no = home_no;
        this.birthday = birthday;
        this.id_number = id_number;
        this.mob_no = mob_no;
        this.self_password = self_password;
        this.enable_att_fun = enable_att_fun;
        this.device_privilege = device_privilege;
    }
    getPersonnel.ctorParameters = function () { return [
        { type: Number },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: Boolean },
        { type: Number },
        { type: String },
        { type: Boolean },
        { type: String },
        { type: String },
        { type: Boolean },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: Boolean },
        { type: String }
    ]; };
    return getPersonnel;
}());

var deletePersonnel = /** @class */ (function () {
    function deletePersonnel(employ_SN) {
        this.employ_SN = employ_SN;
    }
    deletePersonnel.ctorParameters = function () { return [
        { type: String }
    ]; };
    return deletePersonnel;
}());

var addPersonnel = /** @class */ (function () {
    function addPersonnel(user_name, personnel_No, first_name, last_name, Card_No, department, position, Gender, email, Area, employment_type, is_active, e_type, employment_date, password, worke_address, home_address, office_no, home_no, birthday, id_number, mob_no, self_password, enable_att_fun, device_privilege) {
        this.user_name = user_name;
        this.personnel_No = personnel_No;
        this.first_name = first_name;
        this.last_name = last_name;
        this.Card_No = Card_No;
        this.department = department;
        this.position = position;
        this.Gender = Gender;
        this.email = email;
        this.Area = Area;
        this.employment_type = employment_type;
        this.is_active = is_active;
        this.e_type = e_type;
        this.employment_date = employment_date;
        this.password = password;
        this.worke_address = worke_address;
        this.home_address = home_address;
        this.office_no = office_no;
        this.home_no = home_no;
        this.birthday = birthday;
        this.id_number = id_number;
        this.mob_no = mob_no;
        this.self_password = self_password;
        this.enable_att_fun = enable_att_fun;
        this.device_privilege = device_privilege;
    }
    addPersonnel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: Boolean },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: Date },
        { type: String },
        { type: String },
        { type: String },
        { type: Boolean },
        { type: String }
    ]; };
    return addPersonnel;
}());

var editPersonnel = /** @class */ (function () {
    function editPersonnel(user_name, employ_SN, personnel_No, first_name, last_name, Card_No, department, position, Gender, email, Area, employment_type, is_active, e_type, employment_date, password, worke_address, home_address, office_no, home_no, birthday, id_number, mob_no, self_password, enable_att_fun, device_privilege) {
        this.user_name = user_name;
        this.employ_SN = employ_SN;
        this.personnel_No = personnel_No;
        this.first_name = first_name;
        this.last_name = last_name;
        this.Card_No = Card_No;
        this.department = department;
        this.position = position;
        this.Gender = Gender;
        this.email = email;
        this.Area = Area;
        this.employment_type = employment_type;
        this.is_active = is_active;
        this.e_type = e_type;
        this.employment_date = employment_date;
        this.password = password;
        this.worke_address = worke_address;
        this.home_address = home_address;
        this.office_no = office_no;
        this.home_no = home_no;
        this.birthday = birthday;
        this.id_number = id_number;
        this.mob_no = mob_no;
        this.self_password = self_password;
        this.enable_att_fun = enable_att_fun;
        this.device_privilege = device_privilege;
    }
    editPersonnel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: Boolean },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: Date },
        { type: String },
        { type: String },
        { type: String },
        { type: Boolean },
        { type: String }
    ]; };
    return editPersonnel;
}());

var addPhoto = /** @class */ (function () {
    function addPhoto(required) {
        this.required = required;
    }
    addPhoto.ctorParameters = function () { return [
        { type: String }
    ]; };
    return addPhoto;
}());



/***/ }),

/***/ "./src/app/personnel/addepartment/addepartment.component.css":
/*!*******************************************************************!*\
  !*** ./src/app/personnel/addepartment/addepartment.component.css ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbm5lbC9hZGRlcGFydG1lbnQvYWRkZXBhcnRtZW50LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/personnel/addepartment/addepartment.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/personnel/addepartment/addepartment.component.ts ***!
  \******************************************************************/
/*! exports provided: addNewDepartmentModel, TodoItemNode, TodoItemFlatNode, ChecklistDatabase, AddepartmentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addNewDepartmentModel", function() { return addNewDepartmentModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddepartmentComponent", function() { return AddepartmentComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/service/personnel/personnel.service */ "./src/app/service/personnel/personnel.service.ts");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_10__);











/**
 * Node for to-do item
 */
var addNewDepartmentModel = /** @class */ (function () {
    function addNewDepartmentModel(department_code, department_name, approver, parent_department) {
        this.department_code = department_code;
        this.department_name = department_name;
        this.approver = approver;
        this.parent_department = parent_department;
    }
    addNewDepartmentModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return addNewDepartmentModel;
}());

var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service, parentDepartment) {
        this.service = service;
        this.parentDepartment = parentDepartment;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_5__["BehaviorSubject"]([]);
        this.getallAreasFromServer();
        //console.log("before Initializing")
        // console.log(TREE_DATA)
        // console.log("After Initializing")
        // console.log("First Constructor Finished"+TREE_DATA)
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallAreasFromServer = function () {
        var _this = this;
        //console.log("getallAreasFromServer")
        this.parentDepartment.getAllParentDepartmentDetailsBegining().subscribe(function (response) { return _this.succsess(response); }, function (error) { return _this.errorHandlin(error); });
    };
    ChecklistDatabase.prototype.succsess = function (response) {
        console.log("Succes");
        console.log("TREE DATA-------------");
        console.log(TREE_DATA);
        console.log("response--------------");
        console.log(response);
        TREE_DATA = response;
        console.log("responses----------------Changed to TREE_DATA");
        console.log(TREE_DATA);
        this.initialize();
    };
    ChecklistDatabase.prototype.errorHandlin = function (error) {
        console.log("Eroor");
    };
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__["DeviceserviceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_9__["PersonnelService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var AddepartmentComponent = /** @class */ (function () {
    function AddepartmentComponent(perssonnelService, database, service, dialog, router) {
        var _this = this;
        this.perssonnelService = perssonnelService;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.msgs = [];
        this.display = false;
        this.parentArea = null;
        this.errordisplayflag = false;
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_1__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_2__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
    }
    AddepartmentComponent.prototype.showDialog = function () {
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    AddepartmentComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    AddepartmentComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    AddepartmentComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    AddepartmentComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    AddepartmentComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    AddepartmentComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    AddepartmentComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    AddepartmentComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    AddepartmentComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    AddepartmentComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        if (event.value) {
            this.parentArea = event.value;
        }
        console.log(this.parentArea);
    };
    AddepartmentComponent.prototype.addNewDepartmentForm = function (event) {
        var _this = this;
        var obj = new addNewDepartmentModel(event.form.value['departmentno'], event.form.value['Department'], null, event.form.value['parentarea']);
        console.log(event);
        console.log(event.form.value['Department']);
        //departmentno
        //parentarea:
        //console.log(event.value['areacode'])
        console.log(obj);
        //let JsonData=JSON.stringify(obj)
        //console.log("JsonData");
        //console.log(JsonData);
        this.perssonnelService.addNewDepartment(obj).subscribe(function (response) { return _this.success1(response); }, function (error) { return _this.error1(error); });
    };
    AddepartmentComponent.prototype.success1 = function (response) {
        console.log("success1");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Sucsses") {
            console.log("if success");
            this.router.navigate(['department']);
        }
        else {
            //this.errordisplayflag=true;
            this.showError1(response.responce_data);
        }
    };
    AddepartmentComponent.prototype.error1 = function (error) {
        console.log("error1");
        console.log(error);
        // this.errorDta="Server Not Responding,Please try Again"
        // this.errordisplayflag=true;
        this.showError1(error.responce_data);
    };
    AddepartmentComponent.prototype.displayfalse = function () {
        console.log("display false");
        this.parentArea = null;
        this.display = false;
    };
    AddepartmentComponent.prototype.showError1 = function (data) {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: data });
    };
    AddepartmentComponent.prototype.showError = function () {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: "Server is Not Responding,Please Try Again later" });
    };
    AddepartmentComponent.ctorParameters = function () { return [
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_9__["PersonnelService"] },
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"] }
    ]; };
    AddepartmentComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
            selector: 'app-addepartment',
            template: __webpack_require__(/*! raw-loader!./addepartment.component.html */ "./node_modules/raw-loader/index.js!./src/app/personnel/addepartment/addepartment.component.html"),
            providers: [ChecklistDatabase, primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_10__["MessageService"]],
            styles: [__webpack_require__(/*! ./addepartment.component.css */ "./src/app/personnel/addepartment/addepartment.component.css")]
        })
    ], AddepartmentComponent);
    return AddepartmentComponent;
}());



/***/ }),

/***/ "./src/app/personnel/addpersonnel/addpersonnel.component.css":
/*!*******************************************************************!*\
  !*** ./src/app/personnel/addpersonnel/addpersonnel.component.css ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbm5lbC9hZGRwZXJzb25uZWwvYWRkcGVyc29ubmVsLmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/personnel/addpersonnel/addpersonnel.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/personnel/addpersonnel/addpersonnel.component.ts ***!
  \******************************************************************/
/*! exports provided: addDeciceModel, TodoItemNode, TodoItemFlatNode, ChecklistDatabase, AddpersonnelComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addDeciceModel", function() { return addDeciceModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddpersonnelComponent", function() { return AddpersonnelComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/service/personnel/personnel.service */ "./src/app/service/personnel/personnel.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _PersonnelModel_personnelModels__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../PersonnelModel/personnelModels */ "./src/app/personnel/PersonnelModel/personnelModels.ts");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_13__);














/**
 * Node for to-do item
 */
var addDeciceModel = /** @class */ (function () {
    function addDeciceModel(device_Name, Serial_Number, ip_address, port_no, area_code, time_zone, manage_door, real_time_data_upload, request_interval, device_enable) {
        this.device_Name = device_Name;
        this.Serial_Number = Serial_Number;
        this.ip_address = ip_address;
        this.port_no = port_no;
        this.area_code = area_code;
        this.time_zone = time_zone;
        this.manage_door = manage_door;
        this.real_time_data_upload = real_time_data_upload;
        this.request_interval = request_interval;
        this.device_enable = device_enable;
    }
    addDeciceModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return addDeciceModel;
}());

var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA_Department = {};
var TREE_DATA_Position = {};
var TREE_DATA_Area = {};
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service, parentDepartment) {
        //this.getallAreasFromServer();
        this.service = service;
        this.parentDepartment = parentDepartment;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_5__["BehaviorSubject"]([]);
        // this.getallParentPositionDetails();
        /* console.log("before Initializing")
         console.log(TREE_DATA)
         console.log("After Initializing")
          console.log("First Constructor Finished"+TREE_DATA)*/
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallParentPositionDetails = function () {
        var _this = this;
        console.log("getallPositionParentDetailsFromServer :addpersonnel");
        this.parentDepartment.getAllParentPositionDetailsBegining().subscribe(function (response) { return _this.succsess_getALLParent_Postion(response); }, function (error) { return _this.error__getALLParent_Position(error); });
    };
    ChecklistDatabase.prototype.getallParentDeparmentDetails = function () {
        var _this = this;
        //console.log("getallAreasFromServer")
        console.log("getall Parent Department :addpersonnel");
        this.parentDepartment.getAllParentDepartmentDetailsBegining().subscribe(function (response) { return _this.succsess_getALLParentDepartment(response); }, function (error) { return _this.error__getALLParentDepartment(error); });
    };
    ChecklistDatabase.prototype.succsess_getALLParentDepartment = function (response) {
        console.log("succsess_getALLParentDepartment addPersonel");
        console.log("TREE DATA-------------");
        console.log(TREE_DATA);
        console.log("response--------------");
        console.log(response);
        TREE_DATA_Department = response;
        console.log("responses----------------Changed to TREE_DATA");
        console.log(TREE_DATA);
        this.initialize_Department();
    };
    ChecklistDatabase.prototype.error__getALLParentDepartment = function (error) {
        console.log("Eroor  getALLParentDepartment  addpersonel");
    };
    ChecklistDatabase.prototype.succsess_getALLParent_Postion = function (response) {
        console.log("succsess_getALLParentDepartment addPersonel");
        console.log("TREE DATA-------------");
        console.log(TREE_DATA);
        console.log("response--------------");
        console.log(response);
        TREE_DATA_Position = response;
        console.log("responses----------------Changed to TREE_DATA");
        console.log(TREE_DATA_Position);
        this.initialize_position();
    };
    ChecklistDatabase.prototype.error__getALLParent_Position = function (error) {
        console.log("Eroor  getALLParentDepartment  addpersonel");
    };
    ChecklistDatabase.prototype.getallAreasFromServer = function () {
        var _this = this;
        console.log("getallAreasFromServer");
        this.service.getAllParentDetailsBegining().subscribe(function (response) { return _this.succsess(response); }, function (error) { return _this.errorHandlin(error); });
    };
    ChecklistDatabase.prototype.succsess = function (response) {
        console.log("Succes");
        console.log("TREE DATA-------------");
        console.log(TREE_DATA);
        console.log("response--------------");
        console.log(response);
        TREE_DATA_Area = response;
        console.log("responses----------------Changed to TREE_DATA");
        console.log(TREE_DATA_Department);
        this.initialize_Area();
    };
    ChecklistDatabase.prototype.errorHandlin = function (error) {
        console.log("Eroor");
    };
    ChecklistDatabase.prototype.initialize_position = function () {
        var data = this.buildFileTree_Position(TREE_DATA_Position, 0);
        this.dataChange.next(data);
    };
    ChecklistDatabase.prototype.initialize_Department = function () {
        var data = this.buildFileTree_Department(TREE_DATA_Department, 0);
        this.dataChange.next(data);
    };
    ChecklistDatabase.prototype.initialize_Area = function () {
        var data = this.buildFileTree_Area(TREE_DATA_Area, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree_Department = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node1 = new TodoItemNode();
            node1.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node1.children = _this.buildFileTree_Department(value, level + 1);
                }
                else {
                    node1.item = value;
                }
            }
            return accumulator.concat(node1);
        }, []);
    };
    ChecklistDatabase.prototype.buildFileTree_Area = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node1 = new TodoItemNode();
            node1.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node1.children = _this.buildFileTree_Area(value, level + 1);
                }
                else {
                    node1.item = value;
                }
            }
            return accumulator.concat(node1);
        }, []);
    };
    ChecklistDatabase.prototype.buildFileTree_Position = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node2 = new TodoItemNode();
            node2.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node2.children = _this.buildFileTree_Position(value, level + 1);
                }
                else {
                    node2.item = value;
                }
            }
            return accumulator.concat(node2);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__["DeviceserviceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_10__["PersonnelService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var AddpersonnelComponent = /** @class */ (function () {
    function AddpersonnelComponent(personnelService, datepipe, http, database, service, dialog, router) {
        var _this = this;
        this.personnelService = personnelService;
        this.datepipe = datepipe;
        this.http = http;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.msgs = [];
        this.user_name = null;
        this.Card_No = null;
        this.parentDepartment = null;
        this.parentPosition = null;
        this.email = null;
        this.parentArea = null;
        this.employment_type = null;
        this.employment_date = null;
        this.password = null;
        this.worke_address = null;
        this.home_address = null;
        this.office_no = null;
        this.home_no = null;
        this.id_number = null;
        this.mob_no = null;
        this.self_password = null;
        this.Gender_Selection = [
            { id: 0, name: "Male" },
            { id: 1, name: "Female" }
        ];
        this.Gender_Selection_init = 1;
        this.Gender_Selection_data = this.Gender_Selection[this.Gender_Selection_init].name;
        this.display_Department = false;
        this.display_Position = false;
        this.display_Area = false;
        this.employment_type_Array = [
            { id: 0, name: "Employee" },
            { id: 1, name: "Contractor" }
        ];
        this.employment_type_init = 1;
        this.employment_type_data = this.employment_type_Array[this.employment_type_init].name;
        this.employment_type_Array1 = [
            { id: 0, name: "Permanent" },
            { id: 1, name: "Temporary" }
        ];
        this.employment_type_init1 = 1;
        this.employment_type_data1 = this.employment_type_Array1[this.employment_type_init1].name;
        this.enableAttendanceFunction = [
            { id: 0, name: false },
            { id: 1, name: true }
        ];
        this.enableAttendanceFunction_init = 0;
        this.enableAttendanceFunction_data = this.enableAttendanceFunction[this.enableAttendanceFunction_init].name;
        this.device_Privillage_Array = [
            { id: 0, name: "Super User" },
            { id: 1, name: "Admin" },
            { id: 2, name: "User" }
        ];
        this.device_Privillage_init = 0;
        this.device_Privillage_data = this.device_Privillage_Array[this.device_Privillage_init].name;
        this.isActive_array = [
            { id: 0, name: false },
            { id: 1, name: true },
        ];
        this.isActive_init = 1;
        this.isActive_data = this.isActive_array[this.isActive_init].name;
        this.myDate = null;
        this.employmentDate = null;
        this.myDate1 = null;
        this.birthDate = null;
        this.errordisplayflag = false;
        this.editFlag = 0;
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_1__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.fileUpload = null;
        //imageUrl:String="assets/img/demoProfilePhot.jpeg";
        this.imageUrl = "assets/img/demoProfilePhot.jpeg";
        this.fd = new FormData();
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_2__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
        this.personnelEditData = this.personnelService.get_personnelEditData();
        this.personnelService.set_personnelEditData(null);
        if (this.personnelEditData != null) {
            this.editFlag = 1;
            console.log("edited");
            this.old_userName = this.personnelEditData.user_name;
            this.user_name = this.old_userName;
            this.employ_SN = this.personnelEditData.employ_SN;
            this.personnel_No = this.personnelEditData.personnel_No;
            this.first_name = this.personnelEditData.first_name;
            this.last_name = this.personnelEditData.last_name;
            this.Card_No = this.personnelEditData.Card_No;
            this.parentDepartment = this.personnelEditData.department;
            this.parentPosition = this.personnelEditData.position;
            this.Gender_Selection_data = this.personnelEditData.Gender;
            if (this.Gender_Selection_data === "Male")
                this.Gender_Selection_init = 0;
            else
                this.Gender_Selection_init = 1;
            this.email == this.personnelEditData.email;
            this.parentArea = this.personnelEditData.Area;
            this.employment_type_data = this.personnelEditData.employment_type;
            if (this.employment_type_data === "Employee")
                this.employment_type_init = 0;
            else
                this.employment_type_init = 1;
            this.isActive_data = this.personnelEditData.is_active;
            if (this.isActive_data === false)
                this.isActive_init = 0;
            else
                this.isActive_init = 1;
            this.employment_type_data1 = this.personnelEditData.e_type;
            if (this.employment_type_data1 === "Permanent")
                this.employment_type_init1 = 0;
            else
                this.employment_type_init1 = 1;
            this.myDate = this.personnelEditData.employment_date;
            this.employmentDate = this.myDate;
            this.password = this.personnelEditData.password;
            this.worke_address = this.personnelEditData.worke_address;
            this.home_address = this.personnelEditData.home_address;
            this.office_no = this.personnelEditData.office_no;
            this.home_no = this.personnelEditData.home_no;
            this.myDate1 = this.personnelEditData.birthday;
            this.birthDate = this.myDate1;
            this.id_number = this.personnelEditData.id_number;
            this.mob_no = this.personnelEditData.mob_no;
            this.self_password = this.personnelEditData.self_password;
            this.enableAttendanceFunction_data = this.personnelEditData.enable_att_fun;
            if (this.enableAttendanceFunction_data === false)
                this.enableAttendanceFunction_init = 0;
            else
                this.enableAttendanceFunction_init = 1;
            this.device_Privillage_data = this.personnelEditData.Privilege;
            console.log("constructor device privillege : " + this.device_Privillage_data);
            if (this.device_Privillage_data === "Super User")
                this.device_Privillage_init = 0;
            if (this.device_Privillage_data === "Admin")
                this.device_Privillage_init = 1;
            if (this.device_Privillage_data === "User")
                this.device_Privillage_init = 2;
            var obj = new _PersonnelModel_personnelModels__WEBPACK_IMPORTED_MODULE_12__["addPhoto"](this.employ_SN);
            this.personnelService.getImage(obj).subscribe(function (res) {
                return _this.suc1(res);
            }, function (err) { return _this.error1(err); });
        }
        else {
            this.editFlag = 0;
            console.log("Not");
        }
    }
    AddpersonnelComponent.prototype.error1 = function (err) {
        console.log("error in get image " + err.responce_data);
    };
    /** Whether all the descendants of the node are selected. */
    AddpersonnelComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    AddpersonnelComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    AddpersonnelComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    AddpersonnelComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    AddpersonnelComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    AddpersonnelComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    AddpersonnelComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    AddpersonnelComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    AddpersonnelComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    AddpersonnelComponent.prototype.getValueFromRadioButton_Department = function (event) {
        console.log("getValueFromRadioButton Department");
        console.log(event.value);
        console.log(event);
        this.parentDepartment = event.value;
        console.log(this.parentDepartment);
    };
    AddpersonnelComponent.prototype.getValueFromRadioButton_Position = function (event) {
        console.log("getValueFromRadioButton Position");
        console.log(event.value);
        console.log(event);
        this.parentPosition = event.value;
        console.log(this.parentPosition);
    };
    AddpersonnelComponent.prototype.getValueFromRadioButton_Arae = function (event) {
        console.log("getValueFromRadioButton Area");
        console.log(event.value);
        console.log(event);
        if (event.value)
            this.parentArea = event.value;
        console.log(this.parentArea);
    };
    AddpersonnelComponent.prototype.get_add_New_Perssonnel_Form_Data = function (form) {
        var _this = this;
        console.log("Gender : " + this.Gender_Selection_data);
        console.log("Device Privillage : " + this.device_Privillage_data);
        if (this.editFlag === 0) {
            var obj = new _PersonnelModel_personnelModels__WEBPACK_IMPORTED_MODULE_12__["addPersonnel"](this.user_name, this.personnel_No, this.first_name, this.last_name, this.Card_No, this.parentDepartment, this.parentPosition, this.Gender_Selection_data, this.email, this.parentArea, this.employment_type_data, this.isActive_data, this.employment_type_data1, this.employmentDate, this.password, this.worke_address, this.home_address, this.office_no, this.home_no, this.birthDate, this.id_number, this.mob_no, this.self_password, this.enableAttendanceFunction_data, this.device_Privillage_data);
            console.log(obj);
            this.personnelService.addNewPersonnel(obj).
                subscribe(function (response) { return _this.succses_AddPersonnel(response); }, function (error) { return _this.error_AddPersonnel(error); });
        }
        if (this.editFlag === 1) {
            console.log("Editing Function");
            var obj = new _PersonnelModel_personnelModels__WEBPACK_IMPORTED_MODULE_12__["editPersonnel"](this.user_name, this.employ_SN, this.personnel_No, this.first_name, this.last_name, this.Card_No, this.parentDepartment, this.parentPosition, this.Gender_Selection_data, this.email, this.parentArea, this.employment_type_data, this.isActive_data, this.employment_type_data1, this.employmentDate, this.password, this.worke_address, this.home_address, this.office_no, this.home_no, this.birthDate, this.id_number, this.mob_no, this.self_password, this.enableAttendanceFunction_data, this.device_Privillage_data);
            console.log(obj);
            this.personnelService.editPersonnel(obj).
                subscribe(function (response) { return _this.succses_EditPersonnel(response); }, function (error) { return _this.error_EditPersonnel(error); });
        }
    };
    AddpersonnelComponent.prototype.succses_EditPersonnel = function (response) {
        var _this = this;
        console.log("success : succses_EditPersonnel");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Success") {
            console.log("if sucsess edit photo request");
            this.editFlag = 0;
            var objPhoto = new _PersonnelModel_personnelModels__WEBPACK_IMPORTED_MODULE_12__["addPhoto"](this.employ_SN);
            this.fd.append("data", JSON.stringify(objPhoto));
            this.personnelService.postImage(this.fd).
                subscribe(function (response) { return _this.succses_AddImage(response); }, function (error) { return _this.error_AddImage(error); });
        }
        else {
            //this.errordisplayflag=true;
            this.showError1(response.responce_data);
        }
    };
    AddpersonnelComponent.prototype.error_EditPersonnel = function (error) {
        console.log("error :   error_EditPersonnel");
        console.log(error);
        // this.errorDta="Server Not Responding,Please try Again"
        // this.errordisplayflag=true;
        this.showError1(error.responce_data);
    };
    AddpersonnelComponent.prototype.succses_AddPersonnel = function (response) {
        var _this = this;
        console.log("success : succses_AddPersonnel");
        console.log(response.responce_data);
        // responce_data
        // this.errorDta=response.responce_data;
        if (response.responce_data == "Success") {
            console.log("sucsess add photo ");
            var objPhoto = new _PersonnelModel_personnelModels__WEBPACK_IMPORTED_MODULE_12__["addPhoto"](this.employ_SN);
            this.fd.append("data", JSON.stringify(objPhoto));
            this.personnelService.postImage(this.fd).
                subscribe(function (response) { return _this.succses_AddImage(response); }, function (error) { return _this.error_AddImage(error); });
        }
        else {
            //this.errordisplayflag=true;
            this.showError1(response.responce_data);
        }
    };
    AddpersonnelComponent.prototype.error_AddPersonnel = function (error) {
        console.log("error :   error_AddPersonnel");
        console.log(error);
        // this.errorDta="Server Not Responding,Please try Again"
        //this.errordisplayflag=true;
        this.showError1(error.responce_data);
    };
    AddpersonnelComponent.prototype.succses_AddImage = function (response) {
        console.log("succses_AddImage" + response.responce_data);
        if (response.responce_data == "Success") {
            this.router.navigate(['personnals']);
        }
        else {
            console.log("Error" + response.responce_data);
            this.showError1(response.responce_data);
            this.router.navigate(['personnals']);
        }
    };
    AddpersonnelComponent.prototype.error_AddImage = function (error) {
        console.log("Error" + error.responce_data);
        this.showError1(error.responce_data);
    };
    AddpersonnelComponent.prototype.displayfalse = function () {
        console.log("display false");
        // this.parentArea=null;
        this.display_Department = false;
        this.display_Position = false;
        this.display_Area = false;
        this.parentArea = null;
    };
    AddpersonnelComponent.prototype.handleFileInput = function (file, data) {
        var _this = this;
        console.log("handleFileInput");
        console.log(data);
        this.fileUpload = file.item(0);
        // let obj:addPhoto=new addPhoto("abcd1")
        // console.log(obj)
        this.fd.append("image", this.fileUpload);
        // this.fd.append("data",JSON.stringify(obj))
        //console.log(JSON.stringify(obj))
        console.log("fd Form Data" + this.fd);
        /* this.http.post<suuceesDaa>("http://16b0e542.ngrok.io/angreq/personnel/img_post",fd).subscribe(res=>{
           console.log("It is worked"+res.responce_data),err=>{console.log("error"+err.rresponce_data)}
         })*/
        /* this.http.post<suuceesDaa>("http://16b0e542.ngrok.io/angreq/personnel/img_get",obj).subscribe(res=>{
          this.suc1(res),err=>{console.log("error"+err.rresponce_data)}
         })*/
        /* this.personnelService.postImage(fd).
         subscribe(response=>this.succses_AddImage(response),
         error=>this.error_AddImage(error))*/
        var reader = new FileReader();
        reader.onload = function (event) {
            _this.imageUrl = event.target.result;
            // console.log("url "+this.imageUrl)
        };
        reader.readAsDataURL(this.fileUpload);
        //console.log("reader : "+reader)
    };
    //gender Selection method
    AddpersonnelComponent.prototype.suc1 = function (res) {
        console.log("image get : " + res.responce_data);
        // let basic:basicSetup=new basicSetup();
        this.imageUrl = localStorage.getItem("url") + res.responce_data;
    };
    AddpersonnelComponent.prototype.Gender_Selection_Method = function (data) {
        this.Gender_Selection_data = this.Gender_Selection[data].name;
        console.log("Gender : " + this.Gender_Selection_data);
    };
    AddpersonnelComponent.prototype.isActive_array_Method = function (data) {
        this.isActive_data = this.isActive_array[data].name;
        console.log("is Active : " + this.isActive_data);
    };
    AddpersonnelComponent.prototype.employment_type_Method = function (data) {
        this.employment_type_data = this.employment_type_Array[data].name;
        console.log("employment_type_data : " + this.employment_type_data);
    };
    AddpersonnelComponent.prototype.employment_type_Method1 = function (data) {
        this.employment_type_data1 = this.employment_type_Array1[data].name;
        console.log("employment_type_data1 : " + this.employment_type_data1);
    };
    AddpersonnelComponent.prototype.device_Privillage_Method = function (data) {
        this.device_Privillage_data = this.device_Privillage_Array[data].name;
        console.log("device_Privillage_Method : " + this.device_Privillage_data);
    };
    AddpersonnelComponent.prototype.enableAttendanceFunction_Method = function (data) {
        this.enableAttendanceFunction_data = this.enableAttendanceFunction[data].name;
        console.log("enableAttendanceFunction_Method : " + this.enableAttendanceFunction_data);
    };
    AddpersonnelComponent.prototype.showDepartment = function () {
        this.database.getallParentDeparmentDetails();
        this.display_Department = true;
    };
    AddpersonnelComponent.prototype.showPosition = function () {
        this.database.getallParentPositionDetails();
        this.display_Position = true;
    };
    AddpersonnelComponent.prototype.showArea = function () {
        console.log("showArea");
        this.database.getallAreasFromServer();
        this.display_Area = true;
    };
    AddpersonnelComponent.prototype.employmentDate_Method = function () {
        this.employmentDate = this.datepipe.transform(this.myDate, 'yyyy-MM-dd');
        console.log("Employment Date :" + this.employmentDate);
    };
    AddpersonnelComponent.prototype.birthDate_Method = function () {
        this.birthDate = this.datepipe.transform(this.myDate1, 'yyyy-MM-dd');
        console.log("Birth Date :" + this.birthDate);
    };
    AddpersonnelComponent.prototype.showError1 = function (data) {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: data });
    };
    AddpersonnelComponent.prototype.showError = function () {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: "Server is Not Responding,Please Try Again later" });
    };
    AddpersonnelComponent.ctorParameters = function () { return [
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_10__["PersonnelService"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_11__["DatePipe"] },
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_9__["HttpClient"] },
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"] }
    ]; };
    AddpersonnelComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
            selector: 'app-addpersonnel',
            template: __webpack_require__(/*! raw-loader!./addpersonnel.component.html */ "./node_modules/raw-loader/index.js!./src/app/personnel/addpersonnel/addpersonnel.component.html"),
            providers: [ChecklistDatabase, _angular_common__WEBPACK_IMPORTED_MODULE_11__["DatePipe"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_13__["MessageService"]],
            styles: [__webpack_require__(/*! ./addpersonnel.component.css */ "./src/app/personnel/addpersonnel/addpersonnel.component.css")]
        })
    ], AddpersonnelComponent);
    return AddpersonnelComponent;
}());



/***/ }),

/***/ "./src/app/personnel/addposition/addposition.component.css":
/*!*****************************************************************!*\
  !*** ./src/app/personnel/addposition/addposition.component.css ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbm5lbC9hZGRwb3NpdGlvbi9hZGRwb3NpdGlvbi5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/personnel/addposition/addposition.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/personnel/addposition/addposition.component.ts ***!
  \****************************************************************/
/*! exports provided: addNewPositionModel, addDeciceModel, TodoItemNode, TodoItemFlatNode, ChecklistDatabase, AddpositionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addNewPositionModel", function() { return addNewPositionModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addDeciceModel", function() { return addDeciceModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddpositionComponent", function() { return AddpositionComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/service/personnel/personnel.service */ "./src/app/service/personnel/personnel.service.ts");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_10__);











/**
 * Node for to-do item
 */
var addNewPositionModel = /** @class */ (function () {
    function addNewPositionModel(position_No, position_name, parent_position) {
        this.position_No = position_No;
        this.position_name = position_name;
        this.parent_position = parent_position;
    }
    addNewPositionModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return addNewPositionModel;
}());

var addDeciceModel = /** @class */ (function () {
    function addDeciceModel(device_Name, Serial_Number, ip_address, port_no, area_code, time_zone, manage_door, real_time_data_upload, request_interval, device_enable) {
        this.device_Name = device_Name;
        this.Serial_Number = Serial_Number;
        this.ip_address = ip_address;
        this.port_no = port_no;
        this.area_code = area_code;
        this.time_zone = time_zone;
        this.manage_door = manage_door;
        this.real_time_data_upload = real_time_data_upload;
        this.request_interval = request_interval;
        this.device_enable = device_enable;
    }
    addDeciceModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return addDeciceModel;
}());

var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service, parentDepartment) {
        this.service = service;
        this.parentDepartment = parentDepartment;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_5__["BehaviorSubject"]([]);
        this.getallAreasFromServer();
        console.log("before Initializing");
        console.log(TREE_DATA);
        console.log("After Initializing");
        console.log("First Constructor Finished" + TREE_DATA);
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallAreasFromServer = function () {
        var _this = this;
        console.log("getallPositionParentDetailsFromServer");
        this.parentDepartment.getAllParentPositionDetailsBegining().subscribe(function (response) { return _this.succsess(response); }, function (error) { return _this.errorHandlin(error); });
    };
    ChecklistDatabase.prototype.succsess = function (response) {
        console.log("Succes");
        console.log("TREE DATA-------------");
        console.log(TREE_DATA);
        console.log("response--------------");
        console.log(response);
        TREE_DATA = response;
        console.log("responses----------------Changed to TREE_DATA");
        console.log(TREE_DATA);
        this.initialize();
    };
    ChecklistDatabase.prototype.errorHandlin = function (error) {
        console.log("Eroor");
    };
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__["DeviceserviceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_9__["PersonnelService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var AddpositionComponent = /** @class */ (function () {
    function AddpositionComponent(personnelService, database, service, dialog, router) {
        var _this = this;
        this.personnelService = personnelService;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.msgs = [];
        this.display = false;
        this.parentArea = null;
        this.errordisplayflag = false;
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_1__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_2__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
        // this.showError()
    }
    AddpositionComponent.prototype.showDialog = function () {
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    AddpositionComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    AddpositionComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    AddpositionComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    AddpositionComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    AddpositionComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    AddpositionComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    AddpositionComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    AddpositionComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    AddpositionComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    AddpositionComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.parentArea = event.value;
    };
    AddpositionComponent.prototype.addNewPosition = function (event) {
        var _this = this;
        console.log("Add new Position Form");
        console.log(event);
        //{Position_no: "1234", Position: "koya", parentarea: "2"}
        var obj = new addNewPositionModel(event.value['Position_no'], event.value['Position'], event.value['parentarea']);
        //console.log("add deviceform");
        //console.log(event);
        //console.log(event.value['areacode'])  
        //let JsonData=JSON.stringify(obj)
        console.log("JsonData");
        console.log(obj);
        this.personnelService.addNewPosition(obj).subscribe(function (response) { return _this.success_AddNewPosition(response); }, function (error) { return _this.error_AddNewPosition(error); });
    };
    AddpositionComponent.prototype.getaddAreaForm = function (event) {
        //console.log("Add new Position Form2");
        //console.log(event);
    };
    AddpositionComponent.prototype.success_AddNewPosition = function (response) {
        console.log("Add Position : success_AddNewDepartment");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Sucsses") {
            console.log("if sucsess");
            this.router.navigate(['position']);
        }
        else {
            //  this.errordisplayflag=true;
            this.showError1(response.responce_data);
        }
    };
    AddpositionComponent.prototype.error_AddNewPosition = function (error) {
        console.log("Error : AddNewPosition");
        console.log(error);
        // this.errorDta="Server Not Responding,Please try Again"
        // this.errordisplayflag=true;
        this.showError1(error.responce_data);
    };
    AddpositionComponent.prototype.displayfalse = function () {
        console.log("display false");
        this.parentArea = null;
        this.display = false;
    };
    AddpositionComponent.prototype.showError1 = function (data) {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: data });
    };
    AddpositionComponent.prototype.showError = function () {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: "Server is Not Responding,Please Try Again later" });
    };
    AddpositionComponent.ctorParameters = function () { return [
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_9__["PersonnelService"] },
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"] }
    ]; };
    AddpositionComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
            selector: 'app-addposition',
            template: __webpack_require__(/*! raw-loader!./addposition.component.html */ "./node_modules/raw-loader/index.js!./src/app/personnel/addposition/addposition.component.html"),
            providers: [ChecklistDatabase, primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_10__["MessageService"]],
            styles: [__webpack_require__(/*! ./addposition.component.css */ "./src/app/personnel/addposition/addposition.component.css")]
        })
    ], AddpositionComponent);
    return AddpositionComponent;
}());



/***/ }),

/***/ "./src/app/personnel/addresignation/addresignation.component.css":
/*!***********************************************************************!*\
  !*** ./src/app/personnel/addresignation/addresignation.component.css ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbm5lbC9hZGRyZXNpZ25hdGlvbi9hZGRyZXNpZ25hdGlvbi5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/personnel/addresignation/addresignation.component.ts":
/*!**********************************************************************!*\
  !*** ./src/app/personnel/addresignation/addresignation.component.ts ***!
  \**********************************************************************/
/*! exports provided: addDeciceModel, TodoItemNode, TodoItemFlatNode, ChecklistDatabase, AddresignationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addDeciceModel", function() { return addDeciceModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddresignationComponent", function() { return AddresignationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");









/**
 * Node for to-do item
 */
var addDeciceModel = /** @class */ (function () {
    function addDeciceModel(device_Name, Serial_Number, ip_address, port_no, area_code, time_zone, manage_door, real_time_data_upload, request_interval, device_enable) {
        this.device_Name = device_Name;
        this.Serial_Number = Serial_Number;
        this.ip_address = ip_address;
        this.port_no = port_no;
        this.area_code = area_code;
        this.time_zone = time_zone;
        this.manage_door = manage_door;
        this.real_time_data_upload = real_time_data_upload;
        this.request_interval = request_interval;
        this.device_enable = device_enable;
    }
    addDeciceModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return addDeciceModel;
}());

var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service) {
        this.service = service;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_5__["BehaviorSubject"]([]);
        this.getallAreasFromServer();
        console.log("before Initializing");
        console.log(TREE_DATA);
        console.log("After Initializing");
        console.log("First Constructor Finished" + TREE_DATA);
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallAreasFromServer = function () {
        var _this = this;
        console.log("getallAreasFromServer");
        this.service.getAllParentDetailsBegining().subscribe(function (response) { return _this.succsess(response); }, function (error) { return _this.errorHandlin(error); });
    };
    ChecklistDatabase.prototype.succsess = function (response) {
        console.log("Succes");
        console.log("TREE DATA-------------");
        console.log(TREE_DATA);
        console.log("response--------------");
        console.log(response);
        TREE_DATA = response;
        console.log("responses----------------Changed to TREE_DATA");
        console.log(TREE_DATA);
        this.initialize();
    };
    ChecklistDatabase.prototype.errorHandlin = function (error) {
        console.log("Eroor");
    };
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__["DeviceserviceService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var AddresignationComponent = /** @class */ (function () {
    function AddresignationComponent(database, service, dialog, router) {
        var _this = this;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.display = false;
        this.parentArea = "abcd";
        this.errordisplayflag = false;
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_1__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_2__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
    }
    AddresignationComponent.prototype.showDialog = function () {
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    AddresignationComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    AddresignationComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    AddresignationComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    AddresignationComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    AddresignationComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    AddresignationComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    AddresignationComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    AddresignationComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    AddresignationComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    AddresignationComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.parentArea = event.value;
    };
    AddresignationComponent.prototype.getaddDeviceForm = function (event) {
        var _this = this;
        var obj = new addDeciceModel(event.value['devicename'], event.value['serialnumber'], event.value['ipaddress'], event.value['portnumber'], event.value['parentarea'], "GMT" + event.value['timezone'], null, null, null, null);
        console.log("add deviceform");
        //console.log(event);
        //console.log(event.value['areacode'])  
        console.log(obj);
        //let JsonData=JSON.stringify(obj)
        //console.log("JsonData");
        //console.log(JsonData);
        this.service.postAddDeviceDetails(obj).subscribe(function (response) { return _this.success1(response); }, function (error) { return _this.error1(error); });
    };
    AddresignationComponent.prototype.success1 = function (response) {
        console.log("success1");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Sucsses") {
            console.log("if sucsess");
            this.router.navigate(['device']);
        }
        else {
            this.errordisplayflag = true;
        }
    };
    AddresignationComponent.prototype.error1 = function (error) {
        console.log("error1");
        console.log(error);
        this.errorDta = "Server Not Responding,Please try Again";
        this.errordisplayflag = true;
    };
    AddresignationComponent.prototype.displayfalse = function () {
        console.log("display false");
        this.parentArea = null;
        this.display = false;
    };
    AddresignationComponent.ctorParameters = function () { return [
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"] }
    ]; };
    AddresignationComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
            selector: 'app-addresignation',
            template: __webpack_require__(/*! raw-loader!./addresignation.component.html */ "./node_modules/raw-loader/index.js!./src/app/personnel/addresignation/addresignation.component.html"),
            providers: [ChecklistDatabase],
            styles: [__webpack_require__(/*! ./addresignation.component.css */ "./src/app/personnel/addresignation/addresignation.component.css")]
        })
    ], AddresignationComponent);
    return AddresignationComponent;
}());



/***/ }),

/***/ "./src/app/personnel/biophoto/biophoto.component.css":
/*!***********************************************************!*\
  !*** ./src/app/personnel/biophoto/biophoto.component.css ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbm5lbC9iaW9waG90by9iaW9waG90by5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/personnel/biophoto/biophoto.component.ts":
/*!**********************************************************!*\
  !*** ./src/app/personnel/biophoto/biophoto.component.ts ***!
  \**********************************************************/
/*! exports provided: BiophotoComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BiophotoComponent", function() { return BiophotoComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var BiophotoComponent = /** @class */ (function () {
    function BiophotoComponent() {
    }
    BiophotoComponent.prototype.ngOnInit = function () {
    };
    BiophotoComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-biophoto',
            template: __webpack_require__(/*! raw-loader!./biophoto.component.html */ "./node_modules/raw-loader/index.js!./src/app/personnel/biophoto/biophoto.component.html"),
            styles: [__webpack_require__(/*! ./biophoto.component.css */ "./src/app/personnel/biophoto/biophoto.component.css")]
        })
    ], BiophotoComponent);
    return BiophotoComponent;
}());



/***/ }),

/***/ "./src/app/personnel/department/department.component.css":
/*!***************************************************************!*\
  !*** ./src/app/personnel/department/department.component.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbm5lbC9kZXBhcnRtZW50L2RlcGFydG1lbnQuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/personnel/department/department.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/personnel/department/department.component.ts ***!
  \**************************************************************/
/*! exports provided: addDepartmentModel, editDepartmentModel, DeleteDepartmentModel, TodoItemNode, TodoItemFlatNode, ChecklistDatabase, DepartmentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addDepartmentModel", function() { return addDepartmentModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "editDepartmentModel", function() { return editDepartmentModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeleteDepartmentModel", function() { return DeleteDepartmentModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DepartmentComponent", function() { return DepartmentComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/service/personnel/personnel.service */ "./src/app/service/personnel/personnel.service.ts");











;


var jsPDF = __webpack_require__(/*! jspdf */ "./node_modules/jspdf/dist/jspdf.min.js");
__webpack_require__(/*! jspdf-autotable */ "./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js");
var addDepartmentModel = /** @class */ (function () {
    function addDepartmentModel(department_name, approver, department_code, employee_count, parent_department) {
        this.department_name = department_name;
        this.approver = approver;
        this.department_code = department_code;
        this.employee_count = employee_count;
        this.parent_department = parent_department;
    }
    addDepartmentModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return addDepartmentModel;
}());

var editDepartmentModel = /** @class */ (function () {
    function editDepartmentModel(employee_count, parent_department, department_code_old, department_code, department_name, approver) {
        this.employee_count = employee_count;
        this.parent_department = parent_department;
        this.department_code_old = department_code_old;
        this.department_code = department_code;
        this.department_name = department_name;
        this.approver = approver;
    }
    editDepartmentModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return editDepartmentModel;
}());

var DeleteDepartmentModel = /** @class */ (function () {
    function DeleteDepartmentModel(department_code) {
        this.department_code = department_code;
    }
    DeleteDepartmentModel.ctorParameters = function () { return [
        { type: String }
    ]; };
    return DeleteDepartmentModel;
}());

var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service, PersonnelService) {
        this.service = service;
        this.PersonnelService = PersonnelService;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_9__["BehaviorSubject"]([]);
        this.getallParentDepartmentServer();
        console.log("before Initializing");
        console.log(TREE_DATA);
        console.log("After Initializing");
        console.log("First Constructor Finished" + TREE_DATA);
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallParentDepartmentServer = function () {
        var _this = this;
        console.log("getallParentDepartmentServer");
        this.PersonnelService.getAllParentDepartmentDetailsBegining().subscribe(function (response) { return _this.succsess(response); }, function (error) { return _this.errorHandlin(error); });
    };
    ChecklistDatabase.prototype.succsess = function (response) {
        console.log("Succes");
        console.log("TREE DATA-------------");
        console.log(TREE_DATA);
        console.log("response--------------");
        console.log(response);
        TREE_DATA = response;
        console.log("responses----------------Changed to TREE_DATA");
        console.log(TREE_DATA);
        this.initialize();
    };
    ChecklistDatabase.prototype.errorHandlin = function (error) {
        console.log("Eroor");
    };
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var DepartmentComponent = /** @class */ (function () {
    function DepartmentComponent(personnel_service, deviceService, messageService, confirmationService, database, service, dialog, router) {
        var _this = this;
        this.personnel_service = personnel_service;
        this.deviceService = deviceService;
        this.messageService = messageService;
        this.confirmationService = confirmationService;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.timeZoneForm = _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"];
        this.errordisplayflag = false;
        this.pagenum = 15;
        this.sum = 0;
        this.sumOriginal = 10;
        this.totalRecords = 0;
        this.count = 1;
        this.msgs = [];
        this.MySum = [];
        this.display = false;
        this.parentArea = "";
        this.parentDepartment = null;
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.editDepartment = null;
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
    }
    DepartmentComponent.prototype.showDialog = function () {
        this.database.getallParentDepartmentServer();
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    DepartmentComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    DepartmentComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    DepartmentComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    DepartmentComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    DepartmentComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    DepartmentComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    DepartmentComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    DepartmentComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    DepartmentComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    DepartmentComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.parentDepartment = event.value;
    };
    DepartmentComponent.prototype.Edit_Department_success = function (response) {
        console.log("Edit_Department_success");
        console.log(response.responce_data);
        // responce_data
        //  this.errorDta=response.responce_data;
        if (response.responce_data === "Success") {
            console.log("if sucsess  Edit_Department_success");
            this.initialmethod();
            this.router.navigate(['department']);
        }
        else {
            console.log("if else sucsess  Edit_Department_success");
            // this.errordisplayflag=true;
            this.showError1(response.responce_data);
        }
    };
    DepartmentComponent.prototype.Department_edit_error = function (error) {
        console.log("error1");
        console.log(error);
        //this.errorDta="Server Not Responding,Please try Again"
        //this.errordisplayflag=true;
        this.showError1(error.responce_data);
    };
    DepartmentComponent.prototype.displayfalse = function () {
        console.log("display false" + this.parentArea);
        this.parentDepartment = this.editDepartment;
        this.display = false;
    };
    //constructor(private router: Router,private deviceService:DeviceserviceService,private messageService: MessageService,private confirmationService: ConfirmationService) { }
    DepartmentComponent.prototype.ngOnInit = function () {
        this.initialmethod();
        // console.log("ng init")
        this.cols = [
            { field: 'department_name', header: 'Department Name' },
            { field: 'approver', header: 'Approver' },
            { field: 'department_code', header: 'Department Code' },
            { field: 'employee_count', header: 'Employee Count' },
            { field: 'parent_department', header: 'Parent Department' },
            { field: ' ', header: 'Action' }
        ];
    };
    DepartmentComponent.prototype.initialmethod = function () {
        var _this = this;
        this.personnel_service.getAllDepartmentDetailsBegining().subscribe(function (response) { return _this.handleSuccessGetAllDepartmentatBegininig(response); }, function (error) { return _this.handleErrorGetAllDepartmentAtBegining(error); });
    };
    DepartmentComponent.prototype.handleSuccessGetAllDepartmentatBegininig = function (response) {
        var e_1, _a;
        console.log(response);
        console.log("handleSuccess getAllDepartmentDetailsBegining");
        var jsonArray;
        var count = 0;
        try {
            for (var response_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](response), response_1_1 = response_1.next(); !response_1_1.done; response_1_1 = response_1.next()) {
                var entry = response_1_1.value;
                //console.log(entry);
                entry.primary_id = count++;
                console.log(entry);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (response_1_1 && !response_1_1.done && (_a = response_1.return)) _a.call(response_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        console.log(response);
        this.allDepartmnt = response;
    };
    DepartmentComponent.prototype.handleErrorGetAllDepartmentAtBegining = function (error) {
        console.log("handle  Error getAllDepartmentDetailsBegining");
        console.log(error);
        this.showError();
    };
    DepartmentComponent.prototype.Department_Delete_success = function (response) {
        console.log("success department delete ");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Success") {
            console.log("if sucsess");
            this.router.navigate(['department']);
            this.initialmethod();
        }
        else {
            // this.errordisplayflag=true;
            //this.initialmethod();
            this.showError1(response.responce_data);
        }
    };
    DepartmentComponent.prototype.Department_Delete_error = function (error) {
        console.log("Department_Delete_error");
        console.log(error);
        //  this.errorDta="Server Not Responding,Please try Again"
        // this.errordisplayflag=true;
        this.showError1(error.responce_data);
    };
    DepartmentComponent.prototype.onRowEditInit = function (department) {
        console.log("onRowEditInit");
        console.log(department);
        // this.clonedCars[car.vin] = {...car};
        this.parentDepartment = department['parent_department'];
        this.editDepartment = this.parentDepartment;
        this.department_code_old = department['department_code'];
    };
    DepartmentComponent.prototype.onRowEditSave = function (department) {
        var _this = this;
        console.log("onRowEditSave Edid Department");
        console.log(department);
        console.log("parent department " + this.parentDepartment);
        console.log("deparment code old " + this.department_code_old);
        if (department.department_name.length > 0 && department.department_code.length > 0) {
            var obj = new editDepartmentModel(department['employee_count'], this.parentDepartment, this.department_code_old, department['department_code'], department['department_name'], department['approver']);
            console.log(obj);
            this.personnel_service.editDepartment(obj).subscribe(function (response) { return _this.Edit_Department_success(response); }, function (error) { return _this.Department_edit_error(error); });
        }
        else {
            this.msgs = [];
            this.messageService.add({ severity: 'error', summary: 'Error', detail: 'Field is Required' });
        }
    };
    DepartmentComponent.prototype.onRowEditCancel = function (car, index) {
        console.log("onRowEditCancel");
    };
    DepartmentComponent.prototype.onRowRemove = function (department, index) {
        var _this = this;
        console.log("onRowRemove");
        //console.log(device.Serial_Number)
        var obj = new DeleteDepartmentModel(department['department_code']);
        //console.log(obj)
        console.log(obj);
        this.confirmationService.confirm({
            message: 'Are you sure that you want to proceed?',
            header: 'Confirmation',
            icon: 'pi pi-exclamation-triangle',
            accept: function () {
                console.log("YES");
                _this.personnel_service.Delete_Department(obj).subscribe(function (response) { return _this.Department_Delete_success(response); }, function (error) { return _this.Department_Delete_error(error); });
            },
            reject: function () {
                // this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];
                console.log("NOS");
            }
        });
    };
    DepartmentComponent.prototype.showSuccess = function () {
        this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
    };
    DepartmentComponent.prototype.showDialog1 = function () {
        this.display = true;
    };
    DepartmentComponent.prototype.assignValu = function () {
        console.log("assiagn value");
        this.display = false;
    };
    DepartmentComponent.prototype.showError1 = function (data) {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: data });
    };
    DepartmentComponent.prototype.showError = function () {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: "Server is Not Responding,Please Try Again later" });
    };
    DepartmentComponent.ctorParameters = function () { return [
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"] },
        { type: primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"] },
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] }
    ]; };
    DepartmentComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-department',
            template: __webpack_require__(/*! raw-loader!./department.component.html */ "./node_modules/raw-loader/index.js!./src/app/personnel/department/department.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"], ChecklistDatabase],
            styles: [__webpack_require__(/*! ./department.component.css */ "./src/app/personnel/department/department.component.css")]
        })
    ], DepartmentComponent);
    return DepartmentComponent;
}());



/***/ }),

/***/ "./src/app/personnel/deviceedit/deviceedit.component.css":
/*!***************************************************************!*\
  !*** ./src/app/personnel/deviceedit/deviceedit.component.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host ::ng-deep .mat-radio-container{\r\n    height: 10px;\r\n    width: 10px;\r\n  }\r\n  :host ::ng-deep .mat-radio-outer-circle{\r\n    height: 10px;\r\n    width: 10px;\r\n  }\r\n  :host ::ng-deep .mat-radio-inner-circle{\r\n    height: 10px;\r\n    width: 10px;\r\n  }\r\n  :host ::ng-deep .mat-radio-button .mat-radio-ripple{\r\n    height: 20px; /*double of your required circle radius*/\r\n    width: 20px;  /*double of your required circle radius*/\r\n    left: calc(50% - 10px); /*'10px'-same as your required circle radius*/\r\n    top: calc(50% - 10px); /*'10px'-same as your required circle radius*/\r\n  }\r\n  .mat-tree-node { min-height: 0px }\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGVyc29ubmVsL2RldmljZWVkaXQvZGV2aWNlZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7RUFDYjtFQUNBO0lBQ0UsWUFBWTtJQUNaLFdBQVc7RUFDYjtFQUNBO0lBQ0UsWUFBWTtJQUNaLFdBQVc7RUFDYjtFQUNBO0lBQ0UsWUFBWSxFQUFFLHdDQUF3QztJQUN0RCxXQUFXLEdBQUcsd0NBQXdDO0lBQ3RELHNCQUFzQixFQUFFLDZDQUE2QztJQUNyRSxxQkFBcUIsRUFBRSw2Q0FBNkM7RUFDdEU7RUFDQSxpQkFBaUIsZ0JBQWdCIiwiZmlsZSI6InNyYy9hcHAvcGVyc29ubmVsL2RldmljZWVkaXQvZGV2aWNlZWRpdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIC5tYXQtcmFkaW8tY29udGFpbmVye1xyXG4gICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgd2lkdGg6IDEwcHg7XHJcbiAgfVxyXG4gIDpob3N0IDo6bmctZGVlcCAubWF0LXJhZGlvLW91dGVyLWNpcmNsZXtcclxuICAgIGhlaWdodDogMTBweDtcclxuICAgIHdpZHRoOiAxMHB4O1xyXG4gIH1cclxuICA6aG9zdCA6Om5nLWRlZXAgLm1hdC1yYWRpby1pbm5lci1jaXJjbGV7XHJcbiAgICBoZWlnaHQ6IDEwcHg7XHJcbiAgICB3aWR0aDogMTBweDtcclxuICB9XHJcbiAgOmhvc3QgOjpuZy1kZWVwIC5tYXQtcmFkaW8tYnV0dG9uIC5tYXQtcmFkaW8tcmlwcGxle1xyXG4gICAgaGVpZ2h0OiAyMHB4OyAvKmRvdWJsZSBvZiB5b3VyIHJlcXVpcmVkIGNpcmNsZSByYWRpdXMqL1xyXG4gICAgd2lkdGg6IDIwcHg7ICAvKmRvdWJsZSBvZiB5b3VyIHJlcXVpcmVkIGNpcmNsZSByYWRpdXMqL1xyXG4gICAgbGVmdDogY2FsYyg1MCUgLSAxMHB4KTsgLyonMTBweCctc2FtZSBhcyB5b3VyIHJlcXVpcmVkIGNpcmNsZSByYWRpdXMqL1xyXG4gICAgdG9wOiBjYWxjKDUwJSAtIDEwcHgpOyAvKicxMHB4Jy1zYW1lIGFzIHlvdXIgcmVxdWlyZWQgY2lyY2xlIHJhZGl1cyovXHJcbiAgfVxyXG4gIC5tYXQtdHJlZS1ub2RlIHsgbWluLWhlaWdodDogMHB4IH0iXX0= */"

/***/ }),

/***/ "./src/app/personnel/deviceedit/deviceedit.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/personnel/deviceedit/deviceedit.component.ts ***!
  \**************************************************************/
/*! exports provided: addDeciceModel, TodoItemNode, TodoItemFlatNode, ChecklistDatabase, DeviceeditComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addDeciceModel", function() { return addDeciceModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceeditComponent", function() { return DeviceeditComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");









/**
 * Node for to-do item
 */
var addDeciceModel = /** @class */ (function () {
    function addDeciceModel(device_Name, Serial_Number, ip_address, port_no, area_code, time_zone, manage_door, real_time_data_upload, request_interval, device_enable) {
        this.device_Name = device_Name;
        this.Serial_Number = Serial_Number;
        this.ip_address = ip_address;
        this.port_no = port_no;
        this.area_code = area_code;
        this.time_zone = time_zone;
        this.manage_door = manage_door;
        this.real_time_data_upload = real_time_data_upload;
        this.request_interval = request_interval;
        this.device_enable = device_enable;
    }
    addDeciceModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return addDeciceModel;
}());

var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service) {
        this.service = service;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_5__["BehaviorSubject"]([]);
        this.getallAreasFromServer();
        console.log("before Initializing");
        console.log(TREE_DATA);
        console.log("After Initializing");
        console.log("First Constructor Finished" + TREE_DATA);
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallAreasFromServer = function () {
        var _this = this;
        console.log("getallAreasFromServer");
        this.service.getAllParentDetailsBegining().subscribe(function (response) { return _this.succsess(response); }, function (error) { return _this.errorHandlin(error); });
    };
    ChecklistDatabase.prototype.succsess = function (response) {
        console.log("Succes");
        console.log("TREE DATA-------------");
        console.log(TREE_DATA);
        console.log("response--------------");
        console.log(response);
        TREE_DATA = response;
        console.log("responses----------------Changed to TREE_DATA");
        console.log(TREE_DATA);
        this.initialize();
    };
    ChecklistDatabase.prototype.errorHandlin = function (error) {
        console.log("Eroor");
    };
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__["DeviceserviceService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var DeviceeditComponent = /** @class */ (function () {
    function DeviceeditComponent(database, service, dialog, router) {
        var _this = this;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.display = false;
        this.parentArea = "abcd";
        this.errordisplayflag = false;
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_1__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_2__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
    }
    DeviceeditComponent.prototype.showDialog = function () {
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    DeviceeditComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    DeviceeditComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    DeviceeditComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    DeviceeditComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    DeviceeditComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    DeviceeditComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    DeviceeditComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    DeviceeditComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    DeviceeditComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    DeviceeditComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.parentArea = event.value;
    };
    DeviceeditComponent.prototype.getaddDeviceForm = function (event) {
        var _this = this;
        var obj = new addDeciceModel(event.value['devicename'], event.value['serialnumber'], event.value['ipaddress'], event.value['portnumber'], event.value['parentarea'], "GMT" + event.value['timezone'], null, null, null, null);
        console.log("add deviceform");
        //console.log(event);
        //console.log(event.value['areacode'])  
        console.log(obj);
        //let JsonData=JSON.stringify(obj)
        //console.log("JsonData");
        //console.log(JsonData);
        this.service.postAddDeviceDetails(obj).subscribe(function (response) { return _this.success1(response); }, function (error) { return _this.error1(error); });
    };
    DeviceeditComponent.prototype.success1 = function (response) {
        console.log("success1");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Sucsses") {
            console.log("if sucsess");
            this.router.navigate(['device']);
        }
        else {
            this.errordisplayflag = true;
        }
    };
    DeviceeditComponent.prototype.error1 = function (error) {
        console.log("error1");
        console.log(error);
        this.errorDta = "Server Not Responding,Please try Again";
        this.errordisplayflag = true;
    };
    DeviceeditComponent.prototype.displayfalse = function () {
        console.log("display false");
        this.parentArea = null;
        this.display = false;
    };
    DeviceeditComponent.ctorParameters = function () { return [
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"] }
    ]; };
    DeviceeditComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
            selector: 'app-deviceedit',
            template: __webpack_require__(/*! raw-loader!./deviceedit.component.html */ "./node_modules/raw-loader/index.js!./src/app/personnel/deviceedit/deviceedit.component.html"),
            providers: [ChecklistDatabase],
            styles: [__webpack_require__(/*! ./deviceedit.component.css */ "./src/app/personnel/deviceedit/deviceedit.component.css")]
        })
    ], DeviceeditComponent);
    return DeviceeditComponent;
}());



/***/ }),

/***/ "./src/app/personnel/documentsetup/documentsetup.component.css":
/*!*********************************************************************!*\
  !*** ./src/app/personnel/documentsetup/documentsetup.component.css ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbm5lbC9kb2N1bWVudHNldHVwL2RvY3VtZW50c2V0dXAuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/personnel/documentsetup/documentsetup.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/personnel/documentsetup/documentsetup.component.ts ***!
  \********************************************************************/
/*! exports provided: DocumentsetupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocumentsetupComponent", function() { return DocumentsetupComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var DocumentsetupComponent = /** @class */ (function () {
    function DocumentsetupComponent() {
    }
    DocumentsetupComponent.prototype.ngOnInit = function () {
    };
    DocumentsetupComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-documentsetup',
            template: __webpack_require__(/*! raw-loader!./documentsetup.component.html */ "./node_modules/raw-loader/index.js!./src/app/personnel/documentsetup/documentsetup.component.html"),
            styles: [__webpack_require__(/*! ./documentsetup.component.css */ "./src/app/personnel/documentsetup/documentsetup.component.css")]
        })
    ], DocumentsetupComponent);
    return DocumentsetupComponent;
}());



/***/ }),

/***/ "./src/app/personnel/issuecard/issuecard.component.css":
/*!*************************************************************!*\
  !*** ./src/app/personnel/issuecard/issuecard.component.css ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbm5lbC9pc3N1ZWNhcmQvaXNzdWVjYXJkLmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/personnel/issuecard/issuecard.component.ts":
/*!************************************************************!*\
  !*** ./src/app/personnel/issuecard/issuecard.component.ts ***!
  \************************************************************/
/*! exports provided: IssuecardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IssuecardComponent", function() { return IssuecardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var IssuecardComponent = /** @class */ (function () {
    function IssuecardComponent() {
    }
    IssuecardComponent.prototype.ngOnInit = function () {
    };
    IssuecardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-issuecard',
            template: __webpack_require__(/*! raw-loader!./issuecard.component.html */ "./node_modules/raw-loader/index.js!./src/app/personnel/issuecard/issuecard.component.html"),
            styles: [__webpack_require__(/*! ./issuecard.component.css */ "./src/app/personnel/issuecard/issuecard.component.css")]
        })
    ], IssuecardComponent);
    return IssuecardComponent;
}());



/***/ }),

/***/ "./src/app/personnel/personnels/personnels.component.css":
/*!***************************************************************!*\
  !*** ./src/app/personnel/personnels/personnels.component.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbm5lbC9wZXJzb25uZWxzL3BlcnNvbm5lbHMuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/personnel/personnels/personnels.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/personnel/personnels/personnels.component.ts ***!
  \**************************************************************/
/*! exports provided: AddpersonnelModel, SerialNumberModel, TodoItemNode, TodoItemFlatNode, ChecklistDatabase, PersonnelsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddpersonnelModel", function() { return AddpersonnelModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SerialNumberModel", function() { return SerialNumberModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PersonnelsComponent", function() { return PersonnelsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/service/personnel/personnel.service */ "./src/app/service/personnel/personnel.service.ts");
/* harmony import */ var _PersonnelModel_personnelModels__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../PersonnelModel/personnelModels */ "./src/app/personnel/PersonnelModel/personnelModels.ts");











;



var jsPDF = __webpack_require__(/*! jspdf */ "./node_modules/jspdf/dist/jspdf.min.js");
__webpack_require__(/*! jspdf-autotable */ "./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js");
var AddpersonnelModel = /** @class */ (function () {
    function AddpersonnelModel(personnel_No, first_name, last_name, Card_No, department, position, Gender, email, Privilege, Area, APPstatus) {
        this.personnel_No = personnel_No;
        this.first_name = first_name;
        this.last_name = last_name;
        this.Card_No = Card_No;
        this.department = department;
        this.position = position;
        this.Gender = Gender;
        this.email = email;
        this.Privilege = Privilege;
        this.Area = Area;
        this.APPstatus = APPstatus;
    }
    AddpersonnelModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return AddpersonnelModel;
}());

var SerialNumberModel = /** @class */ (function () {
    function SerialNumberModel(Serial_Number) {
        this.Serial_Number = Serial_Number;
    }
    SerialNumberModel.ctorParameters = function () { return [
        { type: String }
    ]; };
    return SerialNumberModel;
}());

var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service) {
        this.service = service;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_9__["BehaviorSubject"]([]);
        this.getallAreasFromServer();
        console.log("before Initializing");
        console.log(TREE_DATA);
        console.log("After Initializing");
        console.log("First Constructor Finished" + TREE_DATA);
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallAreasFromServer = function () {
        var _this = this;
        console.log("getallAreasFromServer");
        this.service.getAlPersonnelDetailsBegining().subscribe(function (response) { return _this.succsess(response); }, function (error) { return _this.errorHandlin(error); });
    };
    ChecklistDatabase.prototype.succsess = function (response) {
        console.log("Succes");
        console.log("TREE DATA-------------");
        console.log(TREE_DATA);
        console.log("response--------------");
        console.log(response);
        TREE_DATA = response;
        console.log("responses----------------Changed to TREE_DATA");
        console.log(TREE_DATA);
        this.initialize();
    };
    ChecklistDatabase.prototype.errorHandlin = function (error) {
        console.log("Eroor");
    };
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var PersonnelsComponent = /** @class */ (function () {
    function PersonnelsComponent(deviceService, messageService, confirmationService, PersonnelService, database, service, dialog, router) {
        var _this = this;
        this.deviceService = deviceService;
        this.messageService = messageService;
        this.confirmationService = confirmationService;
        this.PersonnelService = PersonnelService;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.timeZoneForm = _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"];
        this.errordisplayflag = false;
        this.pagenum = 15;
        this.sum = 0;
        this.sumOriginal = 10;
        this.totalRecords = 0;
        this.count = 1;
        this.msgs = [];
        this.MySum = [];
        this.display = false;
        this.parentArea = "abcd";
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
    }
    PersonnelsComponent.prototype.showDialog = function () {
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    PersonnelsComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    PersonnelsComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    PersonnelsComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    PersonnelsComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    PersonnelsComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    PersonnelsComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    PersonnelsComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    PersonnelsComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    PersonnelsComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    PersonnelsComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.parentArea = event.value;
    };
    PersonnelsComponent.prototype.displayfalse = function () {
        console.log("display false" + this.parentArea);
        this.parentArea = null;
        this.display = false;
    };
    //constructor(private router: Router,private deviceService:DeviceserviceService,private messageService: MessageService,private confirmationService: ConfirmationService) { }
    PersonnelsComponent.prototype.ngOnInit = function () {
        this.initialmethod();
        // console.log("ng init")
        this.cols = [
            { field: 'personnel_No', header: 'Personnel No' },
            { field: 'first_name', header: 'First Name' },
            { field: 'last_name', header: 'Last Name' },
            { field: 'Card_No', header: 'Card No' },
            { field: 'department', header: 'Department' },
            { field: 'position', header: 'Position' },
            { field: 'Gender', header: 'Gender' },
            { field: 'email', header: 'Email' },
            { field: 'Privilege', header: 'Privilege' },
            { field: 'Area', header: 'Area' },
            { field: 'APPstatus', header: 'APPstatus' },
            { field: 'Action', header: 'Select' }
        ];
    };
    PersonnelsComponent.prototype.initialmethod = function () {
        var _this = this;
        this.PersonnelService.getAlPersonnelDetailsBegining().subscribe(function (response) { return _this.handleSuccess1(response); }, function (error) { return _this.handleError1(error); });
    };
    PersonnelsComponent.prototype.handleSuccess1 = function (response) {
        console.log("handleSuccess");
        console.log(response);
        this.personnel = response;
    };
    PersonnelsComponent.prototype.handleError1 = function (error) {
        console.log("handle  Error");
        console.log(error);
        this.showError();
    };
    PersonnelsComponent.prototype.success1D = function (response) {
        console.log("success1");
        console.log(response.responce_data);
        // responce_data
        // this.errorDta=response.responce_data;
        if (response.responce_data === "Success") {
            console.log("if sucsess delete data");
            this.initialmethod();
            this.router.navigate(['personnals']);
        }
        else {
            // this.errordisplayflag=true;
            //console.log("ERRRRRRRRRRRRRRRRROOOOOOOOOOOORRRRRRRRRRR")
            //  this.initialmethod()
            // this.router.navigate(['personnals']);
            this.showError1(response.responce_data);
        }
    };
    PersonnelsComponent.prototype.error1D = function (error) {
        console.log("error1");
        console.log(error);
        // this.errorDta="Server Not Responding,Please try Again"
        // this.errordisplayflag=true;
        this.showError1(error.responce_data);
    };
    PersonnelsComponent.prototype.onRowEditInit = function (personnel) {
        console.log("onRowEditInit" + personnel);
        // this.clonedCars[car.vin] = {...car};
        this.username = personnel.user_name;
        console.log("user name " + this.username);
        this.employ_SN = personnel.employ_SN;
        console.log(" Employee SN " + this.employ_SN);
    };
    PersonnelsComponent.prototype.onRowEditSave = function (personnel) {
        console.log("onRowEditSave" + personnel);
        this.PersonnelService.set_personnelEditData(personnel);
        // let obj:addDeciceModel=new addDeciceModel(device['device_Name'],device['Serial_Number'],device['ip_address'],device['port_no'],device['area_id'],device['time_zone'],null,null,null,null)
        //console.log(obj)
        /*this.deviceService.deviceEdit(obj).subscribe(
          response=>this.success1(response),
          error=>this.error1(error))*/
        this.router.navigate(['addpersonnel']);
    };
    PersonnelsComponent.prototype.onRowEditCancel = function (car, index) {
        console.log("onRowEditCancel");
    };
    PersonnelsComponent.prototype.onRowRemove = function (personnel) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Are you sure that you want to proceed?',
            header: 'Confirmation',
            icon: 'pi pi-exclamation-triangle',
            accept: function () {
                // this.msgs = [{severity:'info', summary:'Confirmed', detail:'You have accepted'}];
                console.log("YES");
                var obj = new _PersonnelModel_personnelModels__WEBPACK_IMPORTED_MODULE_13__["deletePersonnel"](_this.employ_SN);
                console.log(obj);
                _this.PersonnelService.DeleteEmployee(obj).subscribe(function (response) { return _this.success1D(response); }, function (error) { return _this.error1D(error); });
            },
            reject: function () {
                //  this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];
                console.log("NOS");
            }
        });
    };
    PersonnelsComponent.prototype.showSuccess = function () {
        this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
    };
    PersonnelsComponent.prototype.mytabledetails = function (table) {
        this.totalRecords = table._totalRecords;
        //console.log(table)
        var filterValue = table.filteredValue;
        var sum1 = 0;
        var year;
        var year1;
        //console.log("filter value")
        //console.log(filterValue)
        if (filterValue && filterValue.length != 0) {
            //console.log("filtered value  "+table.filteredValue[0]['year'])
            sum1 = 0;
            this.sum = 0;
            for (var i = 0; i < table.filteredValue.length; i++) {
                //console.log(table.filteredValue[i]['year'])
                year = table.filteredValue[i]['year'];
                year1 = parseInt(year);
                sum1 = sum1 + year1;
                this.sum = sum1;
            }
            //console.log("The sum is "+sum1)
        }
        else {
            //console.log("no filter value")
            this.sum = 0;
            sum1 = 0;
            for (var i = 0; i < table._totalRecords; i++) {
                //console.log(this.tableData[i]['year'])
                sum1 = sum1 + parseInt(table._value[i]['year']);
                //console.log("sum ="+this.sum)
                this.sum = sum1;
            }
            //console.log("Else some "+this.sum)
        }
    };
    PersonnelsComponent.prototype.showDialog1 = function () {
        this.display = true;
    };
    PersonnelsComponent.prototype.assignValu = function () {
        console.log("assiagn value");
        this.display = false;
    };
    PersonnelsComponent.prototype.showError1 = function (data) {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: data });
    };
    PersonnelsComponent.prototype.showError = function () {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: "Server is Not Responding,Please Try Again later" });
    };
    PersonnelsComponent.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"] },
        { type: primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] },
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] }
    ]; };
    PersonnelsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-personnels',
            template: __webpack_require__(/*! raw-loader!./personnels.component.html */ "./node_modules/raw-loader/index.js!./src/app/personnel/personnels/personnels.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"], ChecklistDatabase],
            styles: [__webpack_require__(/*! ./personnels.component.css */ "./src/app/personnel/personnels/personnels.component.css")]
        })
    ], PersonnelsComponent);
    return PersonnelsComponent;
}());



/***/ }),

/***/ "./src/app/personnel/position/position.component.css":
/*!***********************************************************!*\
  !*** ./src/app/personnel/position/position.component.css ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbm5lbC9wb3NpdGlvbi9wb3NpdGlvbi5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/personnel/position/position.component.ts":
/*!**********************************************************!*\
  !*** ./src/app/personnel/position/position.component.ts ***!
  \**********************************************************/
/*! exports provided: addPositionModel, editPositionModel, positionNumberModel, TodoItemNode, TodoItemFlatNode, ChecklistDatabase, PositionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addPositionModel", function() { return addPositionModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "editPositionModel", function() { return editPositionModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "positionNumberModel", function() { return positionNumberModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PositionComponent", function() { return PositionComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/service/personnel/personnel.service */ "./src/app/service/personnel/personnel.service.ts");











;


var jsPDF = __webpack_require__(/*! jspdf */ "./node_modules/jspdf/dist/jspdf.min.js");
__webpack_require__(/*! jspdf-autotable */ "./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js");
var addPositionModel = /** @class */ (function () {
    function addPositionModel(position_No, position_name, parent_position, employee_count) {
        this.position_No = position_No;
        this.position_name = position_name;
        this.parent_position = parent_position;
        this.employee_count = employee_count;
    }
    addPositionModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return addPositionModel;
}());

var editPositionModel = /** @class */ (function () {
    function editPositionModel(position_No_old, position_No, position_name, parent_position) {
        this.position_No_old = position_No_old;
        this.position_No = position_No;
        this.position_name = position_name;
        this.parent_position = parent_position;
    }
    editPositionModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return editPositionModel;
}());

var positionNumberModel = /** @class */ (function () {
    function positionNumberModel(position_No) {
        this.position_No = position_No;
    }
    positionNumberModel.ctorParameters = function () { return [
        { type: String }
    ]; };
    return positionNumberModel;
}());

var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service, personnel_service) {
        this.service = service;
        this.personnel_service = personnel_service;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_9__["BehaviorSubject"]([]);
        this.getallParentPositionFromServer();
        console.log("before Initializing");
        console.log(TREE_DATA);
        console.log("After Initializing");
        console.log("First Constructor Finished" + TREE_DATA);
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallParentPositionFromServer = function () {
        var _this = this;
        console.log("getallParentPositionFromServer");
        this.personnel_service.getAllParentPositonList().subscribe(function (response) { return _this.succsess(response); }, function (error) { return _this.errorHandlin(error); });
    };
    ChecklistDatabase.prototype.succsess = function (response) {
        console.log("Succes");
        console.log("TREE DATA-------------");
        console.log(TREE_DATA);
        console.log("response--------------");
        console.log(response);
        TREE_DATA = response;
        console.log("responses----------------Changed to TREE_DATA");
        console.log(TREE_DATA);
        this.initialize();
    };
    ChecklistDatabase.prototype.errorHandlin = function (error) {
        console.log("Eroor");
    };
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var PositionComponent = /** @class */ (function () {
    function PositionComponent(personnel_service, deviceService, messageService, confirmationService, database, service, dialog, router) {
        var _this = this;
        this.personnel_service = personnel_service;
        this.deviceService = deviceService;
        this.messageService = messageService;
        this.confirmationService = confirmationService;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.timeZoneForm = _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"];
        this.errordisplayflag = false;
        this.pagenum = 15;
        this.sum = 0;
        this.sumOriginal = 10;
        this.totalRecords = 0;
        this.count = 1;
        this.msgs = [];
        this.MySum = [];
        this.display = false;
        this.parentPosition = null;
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.editPosition = null;
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
    }
    PositionComponent.prototype.showDialog = function () {
        this.database.getallParentPositionFromServer();
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    PositionComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    PositionComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    PositionComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    PositionComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    PositionComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    PositionComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    PositionComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    PositionComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    PositionComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    PositionComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.parentPosition = event.value;
    };
    /* getaddDeviceForm(event:NgForm)
     {
    let obj:addDeciceModel=new addDeciceModel(event.value['devicename'],event.value['serialnumber'],event.value['ipaddress'],event.value['portnumber'],event.value['parentarea'],"GMT"+event.value['timezone'],null,null,null,null)
    console.log("add deviceform");
    //console.log(event);
    //console.log(event.value['areacode'])
    console.log(obj);
    //let JsonData=JSON.stringify(obj)
    //console.log("JsonData");
    //console.log(JsonData);
    this.service.postAddDeviceDetails(obj).subscribe(response=>this.success1(response),error=>this.error1(error));
    }*/
    PositionComponent.prototype.editPosition_success = function (response) {
        var _this = this;
        console.log("position   :  editPosition_success ");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Sucsses") {
            console.log("if sucsess");
            this.personnel_service.getAllPositionDetailsBegining().subscribe(function (response) { return _this.getAll_Position_Details_Begining_Success(response); }, function (error) { return _this.getAll_Position_Details_Begining_Error(error); });
            this.router.navigate(['position']);
        }
        else {
            //this.errordisplayflag=true;
            this.showError1(response.responce_data);
        }
    };
    PositionComponent.prototype.editPosition_error = function (error) {
        console.log("position   :  editPosition_Error ");
        console.log(error);
        // this.errorDta="Server Not Responding,Please try Again"
        //this.errordisplayflag=true;
        this.showError1(error.responce_data);
    };
    PositionComponent.prototype.displayfalse = function () {
        console.log("display false" + this.parentPosition);
        this.parentPosition = this.editPosition;
        this.display = false;
    };
    //constructor(private router: Router,private deviceService:DeviceserviceService,private messageService: MessageService,private confirmationService: ConfirmationService) { }
    PositionComponent.prototype.ngOnInit = function () {
        this.initialmethod();
        // console.log("ng init")
        this.cols = [
            { field: 'position_No', header: 'Position No' },
            { field: 'position_name', header: 'Position Name' },
            { field: 'parent_position', header: 'Parent Position' },
            { field: 'Employee Count', header: 'Employee Ccount' },
            { field: ' ', header: 'Action' }
        ];
    };
    PositionComponent.prototype.initialmethod = function () {
        var _this = this;
        this.personnel_service.getAllPositionDetailsBegining().subscribe(function (response) { return _this.getAll_Position_Details_Begining_Success(response); }, function (error) { return _this.getAll_Position_Details_Begining_Error(error); });
    };
    PositionComponent.prototype.getAll_Position_Details_Begining_Success = function (response) {
        var e_1, _a;
        console.log("handleSuccess getAllDepartmentDetailsBegining");
        console.log(response);
        var count = 0;
        try {
            for (var response_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](response), response_1_1 = response_1.next(); !response_1_1.done; response_1_1 = response_1.next()) {
                var entry = response_1_1.value;
                //console.log(entry);
                entry.primary_id = count++;
                console.log(entry);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (response_1_1 && !response_1_1.done && (_a = response_1.return)) _a.call(response_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        console.log(response);
        this.allPosition = response;
        console.log(this.allPosition);
    };
    PositionComponent.prototype.getAll_Position_Details_Begining_Error = function (error) {
        console.log("handle  Error getAllDepartmentDetailsBegining");
        console.log(error);
        this.showError();
    };
    PositionComponent.prototype.positionDelete_success = function (response) {
        console.log("positionDelete_success : success");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Success") {
            console.log("if sucsess");
            this.initialmethod();
            //this.router.navigate(['position']);
        }
        else {
            this.showError1(response.responce_data);
        }
    };
    PositionComponent.prototype.positionDelete_error = function (error) {
        console.log("positionDelete  Error");
        console.log(error.responce_data);
        // this.errorDta="Server Not Responding,Please try Again"
        //  this.errordisplayflag=true;
        this.showError1(error.responce_data);
    };
    PositionComponent.prototype.onRowEditInit = function (position) {
        console.log("onRowEditInit position");
        console.log(position);
        this.oldPositionNumber = (position['position_No']);
        console.log("Old Position Number is New " + this.oldPositionNumber);
        this.parentPosition = (position['parent_position']);
        this.editPosition = this.parentPosition;
        console.log("Parent Position : " + this.parentPosition);
    };
    PositionComponent.prototype.onRowEditSave = function (position) {
        var _this = this;
        console.log("onRowEditSave");
        console.log(this.parentPosition);
        console.log(position);
        var obj = new editPositionModel(this.oldPositionNumber, position['position_No'], position['position_name'], this.parentPosition);
        console.log("Edit position JSON DTA");
        console.log(obj);
        this.personnel_service.editPosition(obj).subscribe(function (response) { return _this.editPosition_success(response); }, function (error) { return _this.editPosition_error(error); });
    };
    PositionComponent.prototype.onRowEditCancel = function (position, index) {
        console.log("onRowEditCancel");
    };
    PositionComponent.prototype.onRowRemove = function (position, index) {
        var _this = this;
        console.log("Position : onRowRemove");
        //console.log(device.Serial_Number)
        var obj = new positionNumberModel(this.oldPositionNumber);
        console.log(obj);
        this.confirmationService.confirm({
            message: 'Are you sure that you want to proceed?',
            header: 'Confirmation',
            icon: 'pi pi-exclamation-triangle',
            accept: function () {
                // this.msgs = [{severity:'info', summary:'Confirmed', detail:'You have accepted'}];
                console.log("YES");
                _this.personnel_service.DeletePosition(obj).subscribe(function (response) { return _this.positionDelete_success(response); }, function (error) { return _this.positionDelete_error(error); });
            },
            reject: function () {
                //this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];
                console.log("NOS");
            }
        });
    };
    PositionComponent.prototype.showSuccess = function () {
        this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
    };
    PositionComponent.prototype.showDialog1 = function () {
        this.display = true;
    };
    PositionComponent.prototype.assignValu = function () {
        console.log("assiagn value");
        this.display = false;
    };
    PositionComponent.prototype.showError1 = function (data) {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message :  ', detail: data });
    };
    PositionComponent.prototype.showError = function () {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message :  ', detail: "Server is Not Responding,Please Try Again later" });
    };
    PositionComponent.ctorParameters = function () { return [
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"] },
        { type: primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"] },
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] }
    ]; };
    PositionComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-position',
            template: __webpack_require__(/*! raw-loader!./position.component.html */ "./node_modules/raw-loader/index.js!./src/app/personnel/position/position.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"], ChecklistDatabase],
            styles: [__webpack_require__(/*! ./position.component.css */ "./src/app/personnel/position/position.component.css")]
        })
    ], PositionComponent);
    return PositionComponent;
}());



/***/ }),

/***/ "./src/app/personnel/setdepartment/setdepartment.component.css":
/*!*********************************************************************!*\
  !*** ./src/app/personnel/setdepartment/setdepartment.component.css ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbm5lbC9zZXRkZXBhcnRtZW50L3NldGRlcGFydG1lbnQuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/personnel/setdepartment/setdepartment.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/personnel/setdepartment/setdepartment.component.ts ***!
  \********************************************************************/
/*! exports provided: SetdepartmentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SetdepartmentComponent", function() { return SetdepartmentComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var SetdepartmentComponent = /** @class */ (function () {
    function SetdepartmentComponent() {
    }
    SetdepartmentComponent.prototype.ngOnInit = function () {
    };
    SetdepartmentComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-setdepartment',
            template: __webpack_require__(/*! raw-loader!./setdepartment.component.html */ "./node_modules/raw-loader/index.js!./src/app/personnel/setdepartment/setdepartment.component.html"),
            styles: [__webpack_require__(/*! ./setdepartment.component.css */ "./src/app/personnel/setdepartment/setdepartment.component.css")]
        })
    ], SetdepartmentComponent);
    return SetdepartmentComponent;
}());



/***/ }),

/***/ "./src/app/personnel/synchronization/synchronization.component.css":
/*!*************************************************************************!*\
  !*** ./src/app/personnel/synchronization/synchronization.component.css ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbm5lbC9zeW5jaHJvbml6YXRpb24vc3luY2hyb25pemF0aW9uLmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/personnel/synchronization/synchronization.component.ts":
/*!************************************************************************!*\
  !*** ./src/app/personnel/synchronization/synchronization.component.ts ***!
  \************************************************************************/
/*! exports provided: GetPersonnelModel, AddpersonnelModel, SerialNumberModel, TodoItemNode, TodoItemFlatNode, ChecklistDatabase, SynchronizationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GetPersonnelModel", function() { return GetPersonnelModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddpersonnelModel", function() { return AddpersonnelModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SerialNumberModel", function() { return SerialNumberModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SynchronizationComponent", function() { return SynchronizationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/service/personnel/personnel.service */ "./src/app/service/personnel/personnel.service.ts");
/* harmony import */ var _PersonnelModel_personnelModels__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../PersonnelModel/personnelModels */ "./src/app/personnel/PersonnelModel/personnelModels.ts");











;



var jsPDF = __webpack_require__(/*! jspdf */ "./node_modules/jspdf/dist/jspdf.min.js");
__webpack_require__(/*! jspdf-autotable */ "./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js");
var GetPersonnelModel = /** @class */ (function () {
    function GetPersonnelModel(personnel_No, first_name, last_name, Card_No, department, position, Gender, email, Privilege, Area, APPstatus, SN, checked) {
        if (checked === void 0) { checked = true; }
        this.personnel_No = personnel_No;
        this.first_name = first_name;
        this.last_name = last_name;
        this.Card_No = Card_No;
        this.department = department;
        this.position = position;
        this.Gender = Gender;
        this.email = email;
        this.Privilege = Privilege;
        this.Area = Area;
        this.APPstatus = APPstatus;
        this.SN = SN;
        this.checked = checked;
    }
    GetPersonnelModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: Number },
        { type: Boolean }
    ]; };
    return GetPersonnelModel;
}());

var AddpersonnelModel = /** @class */ (function () {
    function AddpersonnelModel(personnel_No, first_name, last_name, Card_No, department, position, Gender, email, Privilege, Area, APPstatus) {
        this.personnel_No = personnel_No;
        this.first_name = first_name;
        this.last_name = last_name;
        this.Card_No = Card_No;
        this.department = department;
        this.position = position;
        this.Gender = Gender;
        this.email = email;
        this.Privilege = Privilege;
        this.Area = Area;
        this.APPstatus = APPstatus;
    }
    AddpersonnelModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return AddpersonnelModel;
}());

var SerialNumberModel = /** @class */ (function () {
    function SerialNumberModel(Serial_Number) {
        this.Serial_Number = Serial_Number;
    }
    SerialNumberModel.ctorParameters = function () { return [
        { type: String }
    ]; };
    return SerialNumberModel;
}());

var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service) {
        this.service = service;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_9__["BehaviorSubject"]([]);
        this.getallAreasFromServer();
        console.log("before Initializing");
        console.log(TREE_DATA);
        console.log("After Initializing");
        console.log("First Constructor Finished" + TREE_DATA);
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallAreasFromServer = function () {
        var _this = this;
        console.log("getallAreasFromServer");
        this.service.getAlPersonnelDetailsBegining().subscribe(function (response) { return _this.succsess(response); }, function (error) { return _this.errorHandlin(error); });
    };
    ChecklistDatabase.prototype.succsess = function (response) {
        console.log("Succes");
        console.log("TREE DATA-------------");
        console.log(TREE_DATA);
        console.log("response--------------");
        console.log(response);
        TREE_DATA = response;
        console.log("responses----------------Changed to TREE_DATA");
        console.log(TREE_DATA);
        this.initialize();
    };
    ChecklistDatabase.prototype.errorHandlin = function (error) {
        console.log("Eroor");
    };
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var SynchronizationComponent = /** @class */ (function () {
    function SynchronizationComponent(deviceService, messageService, confirmationService, PersonnelService, database, service, dialog, router) {
        var _this = this;
        this.deviceService = deviceService;
        this.messageService = messageService;
        this.confirmationService = confirmationService;
        this.PersonnelService = PersonnelService;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.timeZoneForm = _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"];
        this.errordisplayflag = false;
        this.pagenum = 15;
        this.sum = 0;
        this.sumOriginal = 10;
        this.totalRecords = 0;
        this.count = 1;
        this.msgs = [];
        this.MySum = [];
        this.display = false;
        this.parentArea = "abcd";
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.all_User = new Map();
        this.synchDataMap = new Map();
        this.synchDataValue = 0;
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
    }
    SynchronizationComponent.prototype.showDialog = function () {
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    SynchronizationComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    SynchronizationComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    SynchronizationComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    SynchronizationComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    SynchronizationComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    SynchronizationComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    SynchronizationComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    SynchronizationComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    SynchronizationComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    SynchronizationComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.parentArea = event.value;
    };
    SynchronizationComponent.prototype.displayfalse = function () {
        console.log("display false" + this.parentArea);
        this.parentArea = null;
        this.display = false;
    };
    //constructor(private router: Router,private deviceService:DeviceserviceService,private messageService: MessageService,private confirmationService: ConfirmationService) { }
    SynchronizationComponent.prototype.ngOnInit = function () {
        this.initialmethod();
        // console.log("ng init")
        this.cols = [
            { field: 'personnel_No', header: 'Personnel No', checkFlag: 0 },
            { field: 'first_name', header: 'First Name', checkFlag: 0 },
            { field: 'last_name', header: 'Last Name', checkFlag: 0 },
            { field: 'department', header: 'Department', checkFlag: 0 },
            { field: 'position', header: 'Position', checkFlag: 0 },
            { field: 'Gender', header: 'Gender', checkFlag: 0 },
            { field: 'Area', header: 'Area', checkFlag: 0 },
            { field: 'Action', header: '', checkFlag: 1 }
        ];
    };
    SynchronizationComponent.prototype.initialmethod = function () {
        var _this = this;
        this.PersonnelService.getAlPersonnelDetailsBegining().subscribe(function (response) { return _this.handleSuccess1(response); }, function (error) { return _this.handleError1(error); });
    };
    SynchronizationComponent.prototype.handleSuccess1 = function (response) {
        var e_1, _a;
        console.log("handleSuccess");
        console.log(response);
        try {
            for (var response_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](response), response_1_1 = response_1.next(); !response_1_1.done; response_1_1 = response_1.next()) {
                var entry = response_1_1.value;
                console.log(entry);
                entry.checked = false;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (response_1_1 && !response_1_1.done && (_a = response_1.return)) _a.call(response_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        /*this.personnel=response;
        
              this.personnel.forEach(alluser=>{
                this.all_User.set(alluser.SN,alluser)
              })
              console.log(this.all_User)*/
        this.personnel = response;
        console.log("After entry");
        console.log(this.personnel);
    };
    SynchronizationComponent.prototype.handleError1 = function (error) {
        console.log("handle  Error");
        console.log(error);
        this.showError();
    };
    SynchronizationComponent.prototype.success1D = function (response) {
        console.log("success1");
        console.log(response.responce_data);
        // responce_data
        // this.errorDta=response.responce_data;
        if (response.responce_data === "Success") {
            console.log("if sucsess delete data");
            this.initialmethod();
            this.router.navigate(['personnals']);
        }
        else {
            // this.errordisplayflag=true;
            //console.log("ERRRRRRRRRRRRRRRRROOOOOOOOOOOORRRRRRRRRRR")
            //  this.initialmethod()
            // this.router.navigate(['personnals']);
            this.showError1(response.responce_data);
        }
    };
    SynchronizationComponent.prototype.error1D = function (error) {
        console.log("error1");
        console.log(error);
        // this.errorDta="Server Not Responding,Please try Again"
        // this.errordisplayflag=true;
        this.showError1(error.responce_data);
    };
    SynchronizationComponent.prototype.onRowEditInit = function (flag, personnel) {
        console.log(flag);
        console.log("onRowEditInit" + personnel);
        // this.clonedCars[car.vin] = {...car};
        this.username = personnel.user_name;
        console.log("user name " + this.username);
        this.employ_SN = personnel.employ_SN;
        console.log(" Employee SN " + this.employ_SN);
    };
    SynchronizationComponent.prototype.onRowEditSave = function (flag, personnel) {
        console.log(flag);
        console.log("onRowEditSave" + personnel);
        this.PersonnelService.set_personnelEditData(personnel);
        console.log("onRowEditInit" + personnel);
        // this.clonedCars[car.vin] = {...car};
        this.username = personnel.user_name;
        console.log("user name " + this.username);
        this.employ_SN = personnel.employ_SN;
        console.log(" Employee SN " + this.employ_SN);
        if (flag)
            this.synchDataMap.set(this.employ_SN, this.synchDataValue++);
        else
            this.synchDataMap.delete(this.employ_SN);
        // let obj:addDeciceModel=new addDeciceModel(device['device_Name'],device['Serial_Number'],device['ip_address'],device['port_no'],device['area_id'],device['time_zone'],null,null,null,null)
        //console.log(obj)
        /*this.deviceService.deviceEdit(obj).subscribe(
          response=>this.success1(response),
          error=>this.error1(error))*/
        // this.router.navigate(['addpersonnel']);
        console.log(this.synchDataMap);
    };
    SynchronizationComponent.prototype.onRowEditCancel = function (car, index) {
        console.log("onRowEditCancel");
    };
    SynchronizationComponent.prototype.onRowRemove = function (personnel) {
        var _this = this;
        this.confirmationService.confirm({
            message: 'Are you sure that you want to proceed?',
            header: 'Confirmation',
            icon: 'pi pi-exclamation-triangle',
            accept: function () {
                // this.msgs = [{severity:'info', summary:'Confirmed', detail:'You have accepted'}];
                console.log("YES");
                var obj = new _PersonnelModel_personnelModels__WEBPACK_IMPORTED_MODULE_13__["deletePersonnel"](_this.employ_SN);
                console.log(obj);
                _this.PersonnelService.DeleteEmployee(obj).subscribe(function (response) { return _this.success1D(response); }, function (error) { return _this.error1D(error); });
            },
            reject: function () {
                //  this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];
                console.log("NOS");
            }
        });
    };
    SynchronizationComponent.prototype.showSuccess = function () {
        this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
    };
    SynchronizationComponent.prototype.mytabledetails = function (table) {
        this.totalRecords = table._totalRecords;
        //console.log(table)
        var filterValue = table.filteredValue;
        var sum1 = 0;
        var year;
        var year1;
        //console.log("filter value")
        //console.log(filterValue)
        if (filterValue && filterValue.length != 0) {
            //console.log("filtered value  "+table.filteredValue[0]['year'])
            sum1 = 0;
            this.sum = 0;
            for (var i = 0; i < table.filteredValue.length; i++) {
                //console.log(table.filteredValue[i]['year'])
                year = table.filteredValue[i]['year'];
                year1 = parseInt(year);
                sum1 = sum1 + year1;
                this.sum = sum1;
            }
            //console.log("The sum is "+sum1)
        }
        else {
            //console.log("no filter value")
            this.sum = 0;
            sum1 = 0;
            for (var i = 0; i < table._totalRecords; i++) {
                //console.log(this.tableData[i]['year'])
                sum1 = sum1 + parseInt(table._value[i]['year']);
                //console.log("sum ="+this.sum)
                this.sum = sum1;
            }
            //console.log("Else some "+this.sum)
        }
    };
    SynchronizationComponent.prototype.showDialog1 = function () {
        this.display = true;
    };
    SynchronizationComponent.prototype.assignValu = function () {
        console.log("assiagn value");
        this.display = false;
    };
    SynchronizationComponent.prototype.showError1 = function (data) {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: data });
    };
    SynchronizationComponent.prototype.showError = function () {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: "Server is Not Responding,Please Try Again later" });
    };
    SynchronizationComponent.prototype.showSuccsess = function (msg) {
        this.msgs = [];
        this.msgs.push({ severity: 'success', summary: 'Success Message', detail: msg });
    };
    SynchronizationComponent.prototype.synchData = function () {
        var _this = this;
        var data = [];
        var array = Array.from(this.synchDataMap.keys());
        console.log(array);
        var obj = {
            CMD: 1,
            status: true,
            Data: array
        };
        console.log(JSON.stringify(obj));
        this.PersonnelService.synchData(JSON.stringify(obj)).subscribe(function (res) {
            _this.showSuccsess("Synchronization is Succsefull");
        }, function (error) { _this.showError(); });
    };
    SynchronizationComponent.prototype.checkAll = function () {
        console.log("check all");
    };
    SynchronizationComponent.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"] },
        { type: primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"] },
        { type: src_app_service_personnel_personnel_service__WEBPACK_IMPORTED_MODULE_12__["PersonnelService"] },
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] }
    ]; };
    SynchronizationComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-synchronization',
            template: __webpack_require__(/*! raw-loader!./synchronization.component.html */ "./node_modules/raw-loader/index.js!./src/app/personnel/synchronization/synchronization.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"], ChecklistDatabase],
            styles: [__webpack_require__(/*! ./synchronization.component.css */ "./src/app/personnel/synchronization/synchronization.component.css")]
        })
    ], SynchronizationComponent);
    return SynchronizationComponent;
}());



/***/ }),

/***/ "./src/app/recipes/recipe-details/recipe-details.component.css":
/*!*********************************************************************!*\
  !*** ./src/app/recipes/recipe-details/recipe-details.component.css ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlLWRldGFpbHMvcmVjaXBlLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/recipes/recipe-details/recipe-details.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/recipes/recipe-details/recipe-details.component.ts ***!
  \********************************************************************/
/*! exports provided: RecipeDetailsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RecipeDetailsComponent", function() { return RecipeDetailsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var RecipeDetailsComponent = /** @class */ (function () {
    function RecipeDetailsComponent() {
    }
    RecipeDetailsComponent.prototype.ngOnInit = function () {
    };
    RecipeDetailsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-recipe-details',
            template: __webpack_require__(/*! raw-loader!./recipe-details.component.html */ "./node_modules/raw-loader/index.js!./src/app/recipes/recipe-details/recipe-details.component.html"),
            styles: [__webpack_require__(/*! ./recipe-details.component.css */ "./src/app/recipes/recipe-details/recipe-details.component.css")]
        })
    ], RecipeDetailsComponent);
    return RecipeDetailsComponent;
}());



/***/ }),

/***/ "./src/app/recipes/recipe-list/recipe-item/recipe-item.component.css":
/*!***************************************************************************!*\
  !*** ./src/app/recipes/recipe-list/recipe-item/recipe-item.component.css ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlLWxpc3QvcmVjaXBlLWl0ZW0vcmVjaXBlLWl0ZW0uY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts ***!
  \**************************************************************************/
/*! exports provided: RecipeItemComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RecipeItemComponent", function() { return RecipeItemComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var RecipeItemComponent = /** @class */ (function () {
    function RecipeItemComponent() {
    }
    RecipeItemComponent.prototype.ngOnInit = function () {
    };
    RecipeItemComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-recipe-item',
            template: __webpack_require__(/*! raw-loader!./recipe-item.component.html */ "./node_modules/raw-loader/index.js!./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html"),
            styles: [__webpack_require__(/*! ./recipe-item.component.css */ "./src/app/recipes/recipe-list/recipe-item/recipe-item.component.css")]
        })
    ], RecipeItemComponent);
    return RecipeItemComponent;
}());



/***/ }),

/***/ "./src/app/recipes/recipe-list/recipe-list.component.css":
/*!***************************************************************!*\
  !*** ./src/app/recipes/recipe-list/recipe-list.component.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlLWxpc3QvcmVjaXBlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/recipes/recipe-list/recipe-list.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/recipes/recipe-list/recipe-list.component.ts ***!
  \**************************************************************/
/*! exports provided: RecipeListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RecipeListComponent", function() { return RecipeListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _recipes_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../recipes.model */ "./src/app/recipes/recipes.model.ts");



var RecipeListComponent = /** @class */ (function () {
    function RecipeListComponent() {
        this.recipiesArray = [
            new _recipes_model__WEBPACK_IMPORTED_MODULE_2__["RecipiesModel"]('Biriyani', 'Dham Biriyani', 'https://www.thedeliciouscrescent.com/wp-content/uploads/2016/06/Easy-Hyderabadi-Chicken-Biryani-4.jpg'),
            new _recipes_model__WEBPACK_IMPORTED_MODULE_2__["RecipiesModel"]('Biriyani', 'Dham Biriyani', 'https://www.thedeliciouscrescent.com/wp-content/uploads/2016/06/Easy-Hyderabadi-Chicken-Biryani-4.jpg'),
            new _recipes_model__WEBPACK_IMPORTED_MODULE_2__["RecipiesModel"]('Biriyani', 'Dham Biriyani', 'https://www.thedeliciouscrescent.com/wp-content/uploads/2016/06/Easy-Hyderabadi-Chicken-Biryani-4.jpg'),
        ];
    }
    RecipeListComponent.prototype.ngOnInit = function () {
    };
    RecipeListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-recipe-list',
            template: __webpack_require__(/*! raw-loader!./recipe-list.component.html */ "./node_modules/raw-loader/index.js!./src/app/recipes/recipe-list/recipe-list.component.html"),
            styles: [__webpack_require__(/*! ./recipe-list.component.css */ "./src/app/recipes/recipe-list/recipe-list.component.css")]
        })
    ], RecipeListComponent);
    return RecipeListComponent;
}());



/***/ }),

/***/ "./src/app/recipes/recipes.component.css":
/*!***********************************************!*\
  !*** ./src/app/recipes/recipes.component.css ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlcy5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/recipes/recipes.component.ts":
/*!**********************************************!*\
  !*** ./src/app/recipes/recipes.component.ts ***!
  \**********************************************/
/*! exports provided: RecipesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RecipesComponent", function() { return RecipesComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var RecipesComponent = /** @class */ (function () {
    function RecipesComponent() {
    }
    RecipesComponent.prototype.ngOnInit = function () {
    };
    RecipesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-recipes',
            template: __webpack_require__(/*! raw-loader!./recipes.component.html */ "./node_modules/raw-loader/index.js!./src/app/recipes/recipes.component.html"),
            styles: [__webpack_require__(/*! ./recipes.component.css */ "./src/app/recipes/recipes.component.css")]
        })
    ], RecipesComponent);
    return RecipesComponent;
}());



/***/ }),

/***/ "./src/app/recipes/recipes.model.ts":
/*!******************************************!*\
  !*** ./src/app/recipes/recipes.model.ts ***!
  \******************************************/
/*! exports provided: RecipiesModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RecipiesModel", function() { return RecipiesModel; });
var RecipiesModel = /** @class */ (function () {
    function RecipiesModel(name, des, path) {
        this.name = name;
        this.description = des;
        this.imagePathe = path;
    }
    RecipiesModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return RecipiesModel;
}());



/***/ }),

/***/ "./src/app/server/server.component.css":
/*!*********************************************!*\
  !*** ./src/app/server/server.component.css ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlcnZlci9zZXJ2ZXIuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/server/server.component.ts":
/*!********************************************!*\
  !*** ./src/app/server/server.component.ts ***!
  \********************************************/
/*! exports provided: ServerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServerComponent", function() { return ServerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var ServerComponent = /** @class */ (function () {
    function ServerComponent() {
        var _this = this;
        this.array = [
            {
                guid: '900ea552-ef68-42cc-b6a6-b8c4dff10fb7',
                age: 32,
                name: 'Powers Schneider',
            },
            {
                guid: '880381d3-8dca-4aed-b207-b3b4e575a15f',
                age: 25,
                name: 'Adrian Lawrence',
            },
            {
                guid: '87b47684-c465-4c51-8c88-3f1a1aa2671b',
                age: 32,
                name: 'Boyer Stanley',
            },
        ];
        this.allowNewServer = false;
        this.srverId = 10;
        this.serverStatus = '';
        this.serverCreationStatus = "No server was created";
        this.server = '';
        this.paraDisplay = false;
        setTimeout(function () {
            _this.allowNewServer = true;
        }, 20000);
        this.valu = Math.random();
        console.log("Random " + this.valu);
        if (this.valu > 0.5)
            this.serverStatus = "offline";
        else
            this.serverStatus = "online";
    }
    ServerComponent.prototype.onCreateServer = function () {
        this.serverCreationStatus = "Server was cerated";
        this.paraDisplay = true;
    };
    ServerComponent.prototype.ngOnInit = function () {
    };
    ServerComponent.prototype.getServerStatus = function () {
        return this.serverStatus;
    };
    ServerComponent.prototype.onUpdateServer = function (event) {
        this.server = event.target.value;
    };
    ServerComponent.prototype.getColour = function () {
        if (this.serverStatus === "online")
            return "red";
        else
            return "blue";
    };
    ServerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-server',
            template: __webpack_require__(/*! raw-loader!./server.component.html */ "./node_modules/raw-loader/index.js!./src/app/server/server.component.html"),
            styles: [__webpack_require__(/*! ./server.component.css */ "./src/app/server/server.component.css")]
        })
    ], ServerComponent);
    return ServerComponent;
}());



/***/ }),

/***/ "./src/app/service/InitialConfig/configuration.service.ts":
/*!****************************************************************!*\
  !*** ./src/app/service/InitialConfig/configuration.service.ts ***!
  \****************************************************************/
/*! exports provided: ConfigurationService, config1Model */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConfigurationService", function() { return ConfigurationService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "config1Model", function() { return config1Model; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");



var ConfigurationService = /** @class */ (function () {
    function ConfigurationService(http) {
        this.http = http;
        this.url = "";
        console.log("config construcor");
        // console.log(environment.apiUrl);
    }
    ConfigurationService.prototype.succsess = function (res) {
        this.url = res.server_ip_address;
        console.log("config construcor succsess");
    };
    ConfigurationService.prototype.error = function (err) {
        console.log("Error in geting url from json file");
    };
    ConfigurationService.prototype.geturl = function () {
        return this.url;
    };
    ConfigurationService.prototype.getIPandPort = function () {
        return this.configuration = this.http.get("./assets/test/config.json");
    };
    ConfigurationService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }
    ]; };
    ConfigurationService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        })
    ], ConfigurationService);
    return ConfigurationService;
}());

var config1Model = /** @class */ (function () {
    function config1Model(server_ip_address) {
        this.server_ip_address = server_ip_address;
    }
    config1Model.ctorParameters = function () { return [
        { type: String }
    ]; };
    return config1Model;
}());



/***/ }),

/***/ "./src/app/service/attendance/attendance-service.service.ts":
/*!******************************************************************!*\
  !*** ./src/app/service/attendance/attendance-service.service.ts ***!
  \******************************************************************/
/*! exports provided: AttendanceServiceService, RulesModel, AddNewRuleModel, GlobalRuleModel, GlobalRuleModelGetList, ResponseModel, Delete_Rule_Model */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttendanceServiceService", function() { return AttendanceServiceService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RulesModel", function() { return RulesModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddNewRuleModel", function() { return AddNewRuleModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GlobalRuleModel", function() { return GlobalRuleModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GlobalRuleModelGetList", function() { return GlobalRuleModelGetList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResponseModel", function() { return ResponseModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Delete_Rule_Model", function() { return Delete_Rule_Model; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _InitialConfig_configuration_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../InitialConfig/configuration.service */ "./src/app/service/InitialConfig/configuration.service.ts");




var AttendanceServiceService = /** @class */ (function () {
    function AttendanceServiceService(http, config) {
        this.http = http;
        this.config = config;
        this.rule_Name = "";
        this.breakTimetable_Name = "";
        this.breakTimeTableNames = [];
        // let basic:basicSetup=new basicSetup();
        this.ip_and_port = localStorage.getItem("url");
        // this.ip_and_port=environment.apiUrl
        console.log("attend service constructor :" + this.ip_and_port);
    }
    AttendanceServiceService.prototype.setShift = function (data) {
        this.data_For_Shift_Edit = data;
    };
    AttendanceServiceService.prototype.getShift = function () {
        return this.data_For_Shift_Edit;
    };
    AttendanceServiceService.prototype.setTimeTable = function (rowData) {
        this.timeTable = rowData;
        console.log("set time table");
    };
    AttendanceServiceService.prototype.getTimeTable = function () {
        console.log("attendance service : getTimeTable " + this.timeTable);
        return this.timeTable;
    };
    AttendanceServiceService.prototype.getTransationList = function () {
        console.log("getTransationList : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/transation', null);
    };
    AttendanceServiceService.prototype.set_breakTimeTableNames = function (JsonData) {
        this.breakTimeTableNames = JsonData;
        console.log("breakTimeTableNames " + this.breakTimeTableNames);
    };
    AttendanceServiceService.prototype.get_breakTimeTableNames = function () {
        return this.breakTimeTableNames;
    };
    AttendanceServiceService.prototype.set_rule_Name = function (data) {
        this.rule_Name = data;
        console.log("Rule name Setted  :" + this.rule_Name);
    };
    AttendanceServiceService.prototype.get_rule_Name = function () {
        return this.rule_Name;
    };
    AttendanceServiceService.prototype.getAllRulesatBegining = function () {
        console.log("getAllRulesatBegining : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/rule_list', null);
    };
    AttendanceServiceService.prototype.getGlobalRule = function () {
        console.log("getGlobalRule : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/global_rule_list', null);
        // return this.http.post<GlobalRuleModel[]>("192.168.43.231:8000/angreq/attendance/global_rule_list",null);
    };
    AttendanceServiceService.prototype.addRule_and_GlobalRule = function (JsonData) {
        console.log("addRule_and_GlobalRule : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/rule_edit', JsonData);
        // return this.http.post<GlobalRuleModel[]>("192.168.43.231:8000/angreq/attendance/global_rule_list",null);
    };
    AttendanceServiceService.prototype.addRule = function (JsonData) {
        console.log("addRule_and_GlobalRule : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/rule_add', JsonData);
        // return this.http.post<GlobalRuleModel[]>("192.168.43.231:8000/angreq/attendance/global_rule_list",null);
    };
    AttendanceServiceService.prototype.get_GlobalRule_List = function () {
        console.log("get GlobalRule_List : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/global_rule_list', null);
        // return this.http.post<GlobalRuleModel[]>("192.168.43.231:8000/angreq/attendance/global_rule_list",null);
    };
    AttendanceServiceService.prototype.get_Rule_and_GlobalRule_List = function () {
        console.log("get_Rule_and_GlobalRule_List : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/rule_list', null);
        // return this.http.post<GlobalRuleModel[]>("192.168.43.231:8000/angreq/attendance/global_rule_list",null);
    };
    AttendanceServiceService.prototype.Delete_Rule = function (JsonData) {
        console.log("Delete_Rule : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/rule_delete', JsonData);
        // return this.http.post<GlobalRuleModel[]>("192.168.43.231:8000/angreq/attendance/global_rule_list",null);
    };
    AttendanceServiceService.prototype.Get_Time_Table_List = function () {
        console.log("Get_Time_Table_List : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/timetable_list', null);
        // return this.http.post<GlobalRuleModel[]>("192.168.43.231:8000/angreq/attendance/global_rule_list",null);
    };
    AttendanceServiceService.prototype.Delete_TimeTable = function (JsonData) {
        console.log("Delete_Rule : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/timetable_delete', JsonData);
        // return this.http.post<GlobalRuleModel[]>("192.168.43.231:8000/angreq/attendance/global_rule_list",null);
    };
    AttendanceServiceService.prototype.add_TimeTable = function (JsonData) {
        console.log("add_TimeTable : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/timetable_add', JsonData);
        // return this.http.post<GlobalRuleModel[]>("192.168.43.231:8000/angreq/attendance/global_rule_list",null);
    };
    AttendanceServiceService.prototype.edit_TimeTable = function (JsonData) {
        console.log("edit_TimeTable : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/timetable_edit', JsonData);
    };
    //Break Time Table
    AttendanceServiceService.prototype.set_breakTimetable_Name = function (data) {
        this.breakTimetable_Name = data;
        console.log("set_breakTimetable_Name  :" + this.breakTimetable_Name);
    };
    AttendanceServiceService.prototype.get_breakTimetable_Name = function () {
        return this.breakTimetable_Name;
    };
    AttendanceServiceService.prototype.Get_Break_Time_Table_List = function () {
        console.log("Get_Break_Time_Table_List : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/break_time_table_list', null);
    };
    AttendanceServiceService.prototype.add_Break_Time_Table = function (JsonData) {
        console.log("add_Break_Time_Table : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/break_time_table_add', JsonData);
    };
    AttendanceServiceService.prototype.Delete_Break_Time_Table = function (JsonData) {
        console.log("Delete_Break_Time_Table : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/break_time_table_delete', JsonData);
    };
    AttendanceServiceService.prototype.Edit_Break_Time_Table = function (JsonData) {
        console.log("Edit_Break_Time_Table : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/break_time_table_edit', JsonData);
    };
    //Shift
    /* Get_Shift_List()
     {
      console.log("Get_Shift_List : attendance Service ");
      return this.http.post<getShiftModel[]>(this.ip_and_port+'/angreq/attendance/shift_list',null);
   
     }*/
    AttendanceServiceService.prototype.Get_Shift_List = function () {
        console.log("Get_Shift_List : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/test', null);
    };
    AttendanceServiceService.prototype.Delete_Shift = function (JsonData) {
        console.log("Delete_Shift : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/shift_delete', JsonData);
    };
    AttendanceServiceService.prototype.add_Shift = function (JsonData) {
        console.log("add_Shift : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/shift_add', JsonData);
    };
    AttendanceServiceService.prototype.add_New_Shedule = function (JsonData) {
        console.log("add_New_Shedule : attendance Service ");
        return this.http.post(this.ip_and_port + '/angreq/attendance/schedule_add', JsonData);
    };
    AttendanceServiceService.prototype.getTransaction = function () {
        console.log("Transaction get report Service Post Methos");
        return this.http.post(this.ip_and_port + '/angreq/attendance/report_list', null);
    };
    AttendanceServiceService.prototype.generatereport = function () {
        console.log("generate Report");
        return this.http.post(this.ip_and_port + '/angreq/attendance/report', null);
    };
    AttendanceServiceService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] },
        { type: _InitialConfig_configuration_service__WEBPACK_IMPORTED_MODULE_3__["ConfigurationService"] }
    ]; };
    AttendanceServiceService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        })
    ], AttendanceServiceService);
    return AttendanceServiceService;
}());

var RulesModel = /** @class */ (function () {
    function RulesModel(name, department) {
        this.name = name;
        this.department = department;
    }
    RulesModel.ctorParameters = function () { return [
        { type: String },
        { type: String }
    ]; };
    return RulesModel;
}());

var AddNewRuleModel = /** @class */ (function () {
    function AddNewRuleModel(check_In_Rule, check_Out_Rule, Overtime_Rule, name, duplicate_Punch_Period, weekend, when_Late_Exceeds, when_Early_Leave_Exceeds, when_there_is_no_Check_In_count_as, when_there_is_no_Check_In_Minute, when_there_is_no_Check_Out_count_as, when_there_is_no_Check_Out_Minute, check_In, Check_Out, Break_In, OT_In, OT_Out, Break_Out, global_Rule, department) {
        this.check_In_Rule = check_In_Rule;
        this.check_Out_Rule = check_Out_Rule;
        this.Overtime_Rule = Overtime_Rule;
        this.name = name;
        this.duplicate_Punch_Period = duplicate_Punch_Period;
        this.weekend = weekend;
        this.when_Late_Exceeds = when_Late_Exceeds;
        this.when_Early_Leave_Exceeds = when_Early_Leave_Exceeds;
        this.when_there_is_no_Check_In_count_as = when_there_is_no_Check_In_count_as;
        this.when_there_is_no_Check_In_Minute = when_there_is_no_Check_In_Minute;
        this.when_there_is_no_Check_Out_count_as = when_there_is_no_Check_Out_count_as;
        this.when_there_is_no_Check_Out_Minute = when_there_is_no_Check_Out_Minute;
        this.check_In = check_In;
        this.Check_Out = Check_Out;
        this.Break_In = Break_In;
        this.OT_In = OT_In;
        this.OT_Out = OT_Out;
        this.Break_Out = Break_Out;
        this.global_Rule = global_Rule;
        this.department = department;
    }
    AddNewRuleModel.ctorParameters = function () { return [
        { type: Number },
        { type: Number },
        { type: Number },
        { type: String },
        { type: Number },
        { type: String },
        { type: Number },
        { type: Number },
        { type: String },
        { type: Number },
        { type: String },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Boolean },
        { type: String }
    ]; };
    return AddNewRuleModel;
}());

var GlobalRuleModel = /** @class */ (function () {
    function GlobalRuleModel(check_In_Rule, check_Out_Rule, Overtime_Rule, name, name_old, duplicate_Punch_Period, weekend, when_Late_Exceeds, when_Early_Leave_Exceeds, when_there_is_no_Check_In_count_as, when_there_is_no_Check_In_Minute, when_there_is_no_Check_Out_count_as, when_there_is_no_Check_Out_Minute, check_In, Check_Out, Break_In, OT_In, OT_Out, Break_Out, global_Rule, department) {
        this.check_In_Rule = check_In_Rule;
        this.check_Out_Rule = check_Out_Rule;
        this.Overtime_Rule = Overtime_Rule;
        this.name = name;
        this.name_old = name_old;
        this.duplicate_Punch_Period = duplicate_Punch_Period;
        this.weekend = weekend;
        this.when_Late_Exceeds = when_Late_Exceeds;
        this.when_Early_Leave_Exceeds = when_Early_Leave_Exceeds;
        this.when_there_is_no_Check_In_count_as = when_there_is_no_Check_In_count_as;
        this.when_there_is_no_Check_In_Minute = when_there_is_no_Check_In_Minute;
        this.when_there_is_no_Check_Out_count_as = when_there_is_no_Check_Out_count_as;
        this.when_there_is_no_Check_Out_Minute = when_there_is_no_Check_Out_Minute;
        this.check_In = check_In;
        this.Check_Out = Check_Out;
        this.Break_In = Break_In;
        this.OT_In = OT_In;
        this.OT_Out = OT_Out;
        this.Break_Out = Break_Out;
        this.global_Rule = global_Rule;
        this.department = department;
    }
    GlobalRuleModel.ctorParameters = function () { return [
        { type: Number },
        { type: Number },
        { type: Number },
        { type: String },
        { type: String },
        { type: Number },
        { type: String },
        { type: Number },
        { type: Number },
        { type: String },
        { type: Number },
        { type: String },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Boolean },
        { type: String }
    ]; };
    return GlobalRuleModel;
}());

var GlobalRuleModelGetList = /** @class */ (function () {
    function GlobalRuleModelGetList(check_In_Rule, check_Out_Rule, Overtime_Rule, name, duplicate_Punch_Period, weekend, when_Late_Exceeds, when_Early_Leave_Exceeds, when_there_is_no_Check_In_count_as, when_there_is_no_Check_In_Minute, when_there_is_no_Check_Out_count_as, when_there_is_no_Check_Out_Minute, check_In, Check_Out, Break_In, OT_In, OT_Out, Break_Out, global_Rule, department) {
        this.check_In_Rule = check_In_Rule;
        this.check_Out_Rule = check_Out_Rule;
        this.Overtime_Rule = Overtime_Rule;
        this.name = name;
        this.duplicate_Punch_Period = duplicate_Punch_Period;
        this.weekend = weekend;
        this.when_Late_Exceeds = when_Late_Exceeds;
        this.when_Early_Leave_Exceeds = when_Early_Leave_Exceeds;
        this.when_there_is_no_Check_In_count_as = when_there_is_no_Check_In_count_as;
        this.when_there_is_no_Check_In_Minute = when_there_is_no_Check_In_Minute;
        this.when_there_is_no_Check_Out_count_as = when_there_is_no_Check_Out_count_as;
        this.when_there_is_no_Check_Out_Minute = when_there_is_no_Check_Out_Minute;
        this.check_In = check_In;
        this.Check_Out = Check_Out;
        this.Break_In = Break_In;
        this.OT_In = OT_In;
        this.OT_Out = OT_Out;
        this.Break_Out = Break_Out;
        this.global_Rule = global_Rule;
        this.department = department;
    }
    GlobalRuleModelGetList.ctorParameters = function () { return [
        { type: Number },
        { type: Number },
        { type: Number },
        { type: String },
        { type: Number },
        { type: String },
        { type: Number },
        { type: Number },
        { type: String },
        { type: Number },
        { type: String },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Boolean },
        { type: String }
    ]; };
    return GlobalRuleModelGetList;
}());

var ResponseModel = /** @class */ (function () {
    function ResponseModel(responce_data) {
        this.responce_data = responce_data;
    }
    ResponseModel.ctorParameters = function () { return [
        { type: String }
    ]; };
    return ResponseModel;
}());

var Delete_Rule_Model = /** @class */ (function () {
    function Delete_Rule_Model(name) {
        this.name = name;
    }
    Delete_Rule_Model.ctorParameters = function () { return [
        { type: String }
    ]; };
    return Delete_Rule_Model;
}());



/***/ }),

/***/ "./src/app/service/device/deviceservice.service.ts":
/*!*********************************************************!*\
  !*** ./src/app/service/device/deviceservice.service.ts ***!
  \*********************************************************/
/*! exports provided: Car, DeviceserviceService, DeviceModel, DeviceArea, CommonResponseResponse, RealTime, RealTimeComment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Car", function() { return Car; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceserviceService", function() { return DeviceserviceService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceModel", function() { return DeviceModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceArea", function() { return DeviceArea; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommonResponseResponse", function() { return CommonResponseResponse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RealTime", function() { return RealTime; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RealTimeComment", function() { return RealTimeComment; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");



var Car = /** @class */ (function () {
    function Car(Vin, Year, Brand, Color) {
        this.Vin = Vin;
        this.Year = Year;
        this.Brand = Brand;
        this.Color = Color;
    }
    Car.ctorParameters = function () { return [
        { type: String },
        { type: Number },
        { type: String },
        { type: String }
    ]; };
    return Car;
}());

var DeviceserviceService = /** @class */ (function () {
    function DeviceserviceService(http) {
        this.http = http;
        this.ip_and_port = localStorage.getItem("url");
        //this.ip_and_port=environment.apiUrl
        console.log("device constructor : " + this.ip_and_port);
    }
    DeviceserviceService.prototype.getDeviceEdit = function () {
        return this.editdevice;
    };
    DeviceserviceService.prototype.setDeviceEdit = function (arrayJson) {
        this.editdevice = arrayJson;
    };
    DeviceserviceService.prototype.getCarsSmall = function () {
        // return this.http.get<Car>('https://raw.githubusercontent.com/ag-grid/ag-grid-docs/master/src/olympicWinnersSmall.json')
        return this.http.get('assets/test/test1.json');
        /*  .toPromise()
                          .then(res => <Car[]> res)
                          .then(data => { return data; });      */
    };
    DeviceserviceService.prototype.getCarsSmall2 = function () {
        // return this.http.get<Car>('https://raw.githubusercontent.com/ag-grid/ag-grid-docs/master/src/olympicWinnersSmall.json')
        return this.http.get('assets/test/test2.json');
        /*  .toPromise()
                          .then(res => <Car[]> res)
                          .then(data => { return data; });      */
    };
    DeviceserviceService.prototype.getDeviceDetailsAtBeginning = function () {
        console.log("DEVICE SERVICE : getDeviceDetailsAtBeginning ");
        return this.http.post(this.ip_and_port + '/angreq/device/device_list', null);
    };
    DeviceserviceService.prototype.getAllAreaDetailsBegining = function () {
        console.log("getAllAreaDetailsBegining");
        return this.http.post(this.ip_and_port + '/angreq/device/area_list', null);
    };
    DeviceserviceService.prototype.realTime = function (JsonData) {
        console.log("realtime");
        return this.http.post(this.ip_and_port + '/angreq/device/RT_monitering', JsonData);
    };
    DeviceserviceService.prototype.getAllParentDetailsBegining = function () {
        console.log("getAllParentDetailsBegining");
        return this.http.get(this.ip_and_port + '/angreq/device/area_list_parant');
    };
    DeviceserviceService.prototype.postAddareaDetails = function (JsonData) {
        console.log("postAddareaDetails");
        return this.http.post(this.ip_and_port + '/angreq/device/area_add', JsonData);
    };
    DeviceserviceService.prototype.postAddDeviceDetails = function (JsonData) {
        console.log("postAddDeviceDetails");
        return this.http.post(this.ip_and_port + '/angreq/device/device_add', JsonData);
    };
    DeviceserviceService.prototype.DeleteDevice = function (JsonData) {
        console.log("postAddDeviceDetails");
        return this.http.post(this.ip_and_port + '/angreq/device/device_delete', JsonData);
    };
    DeviceserviceService.prototype.deviceEdit = function (JsonData) {
        console.log("Device Edit");
        return this.http.post(this.ip_and_port + '/angreq/device/device_edit', JsonData);
    };
    DeviceserviceService.prototype.areaEdit = function (JsonData) {
        console.log("Device Service: Area Edit");
        return this.http.post(this.ip_and_port + '/angreq/device/area_edit', JsonData);
    };
    DeviceserviceService.prototype.DeleteArea = function (JsonData) {
        console.log("Device Service : DeleteArea");
        return this.http.post(this.ip_and_port + '/angreq/device/area_delete', JsonData);
    };
    DeviceserviceService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }
    ]; };
    DeviceserviceService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        })
    ], DeviceserviceService);
    return DeviceserviceService;
}());

var DeviceModel = /** @class */ (function () {
    function DeviceModel(device_Name, Serial_Number, ip_address, area_id, status, last_activity, device_type, firmware_Version, user_count, fp_count, face_count, fv_Count, palm_Count) {
        this.device_Name = device_Name;
        this.Serial_Number = Serial_Number;
        this.ip_address = ip_address;
        this.area_id = area_id;
        this.status = status;
        this.last_activity = last_activity;
        this.device_type = device_type;
        this.firmware_Version = firmware_Version;
        this.user_count = user_count;
        this.fp_count = fp_count;
        this.face_count = face_count;
        this.fv_Count = fv_Count;
        this.palm_Count = palm_Count;
    }
    DeviceModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: Number },
        { type: Number },
        { type: String },
        { type: Number },
        { type: String },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number }
    ]; };
    return DeviceModel;
}());

var DeviceArea = /** @class */ (function () {
    function DeviceArea(area_code, aera_name, parent_area, remark) {
        this.area_code = area_code;
        this.aera_name = aera_name;
        this.parent_area = parent_area;
        this.remark = remark;
    }
    DeviceArea.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return DeviceArea;
}());

var CommonResponseResponse = /** @class */ (function () {
    function CommonResponseResponse(responce_data) {
        this.responce_data = responce_data;
    }
    CommonResponseResponse.ctorParameters = function () { return [
        { type: String }
    ]; };
    return CommonResponseResponse;
}());

var RealTime = /** @class */ (function () {
    function RealTime(last_id, personal_No, punch_time, punch_status, verification_mode, work_code, device_name, device_SN, area_name) {
        this.last_id = last_id;
        this.personal_No = personal_No;
        this.punch_time = punch_time;
        this.punch_status = punch_status;
        this.verification_mode = verification_mode;
        this.work_code = work_code;
        this.device_name = device_name;
        this.device_SN = device_SN;
        this.area_name = area_name;
    }
    RealTime.ctorParameters = function () { return [
        { type: Number },
        { type: String },
        { type: String },
        { type: String },
        { type: Number },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return RealTime;
}());

var RealTimeComment = /** @class */ (function () {
    function RealTimeComment(cmd) {
        this.cmd = cmd;
    }
    RealTimeComment.ctorParameters = function () { return [
        { type: String }
    ]; };
    return RealTimeComment;
}());



/***/ }),

/***/ "./src/app/service/login/loginservice.service.ts":
/*!*******************************************************!*\
  !*** ./src/app/service/login/loginservice.service.ts ***!
  \*******************************************************/
/*! exports provided: LoginserviceService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginserviceService", function() { return LoginserviceService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");



//var electron=require('electron')
var LoginserviceService = /** @class */ (function () {
    function LoginserviceService(http) {
        this.http = http;
        this.ip_and_port = localStorage.getItem("url");
        // console.log("ip and Port")
        //console.log(this.ip_and_port)
    }
    LoginserviceService.prototype.loginUser = function (JsonData) {
        this.ip_and_port = localStorage.getItem("url");
        console.log("ip and Port ");
        console.log(this.ip_and_port);
        // let rootVar = window["url"];
        //  console.log("break point 1"+rootVar);
        return this.http.post(this.ip_and_port + '/angreq/accounts/login', JsonData);
    };
    LoginserviceService.prototype.loggedIn = function () {
        //  console.log("is logged in")
        //  console.log(!!localStorage.getItem("token"))
        return !!localStorage.getItem("token");
    };
    LoginserviceService.prototype.getToken = function () {
        return localStorage.getItem("token");
    };
    LoginserviceService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }
    ]; };
    LoginserviceService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        })
    ], LoginserviceService);
    return LoginserviceService;
}());



/***/ }),

/***/ "./src/app/service/personnel/personnel.service.ts":
/*!********************************************************!*\
  !*** ./src/app/service/personnel/personnel.service.ts ***!
  \********************************************************/
/*! exports provided: PersonnelService, addDepartmentModel, addPositionModel, AddAttendance, suuceesDaa */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PersonnelService", function() { return PersonnelService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addDepartmentModel", function() { return addDepartmentModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addPositionModel", function() { return addPositionModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddAttendance", function() { return AddAttendance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "suuceesDaa", function() { return suuceesDaa; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");



var PersonnelService = /** @class */ (function () {
    function PersonnelService(http) {
        this.http = http;
        // this.ip_and_port=environment.apiUrl
        this.ip_and_port = localStorage.getItem("url");
        console.log("Personnel Service " + this.ip_and_port);
    }
    PersonnelService.prototype.set_personnelEditData = function (jsonData) {
        this.personnelEditData = jsonData;
        // console.log("set_personnelEditData "+this.personnelEditData.user_name)
    };
    PersonnelService.prototype.get_personnelEditData = function () {
        return this.personnelEditData;
    };
    PersonnelService.prototype.getAllDepartmentDetailsBegining = function () {
        console.log("getAllAreaDetailsBegining");
        return this.http.post(this.ip_and_port + '/angreq/personnel/department_list', null);
    };
    PersonnelService.prototype.getAllPositionDetailsBegining = function () {
        console.log(" getAllPositionDetailsBegining()");
        return this.http.post(this.ip_and_port + '/angreq/personnel/position_list', null);
    };
    PersonnelService.prototype.getAllParentPositonList = function () {
        console.log("getAllParentDetailsBegining");
        return this.http.get(this.ip_and_port + '/angreq/personnel/position_list_parent');
    };
    PersonnelService.prototype.getAllParentDepartmentDetailsBegining = function () {
        console.log("getAllParentDepartmentDetailsBegining");
        return this.http.get(this.ip_and_port + '/angreq/personnel/department_list_parent');
    };
    PersonnelService.prototype.getAllParentPositionDetailsBegining = function () {
        console.log("getAllParentDepartmentDetailsBegining");
        return this.http.get(this.ip_and_port + '/angreq/personnel/position_list_parent');
    };
    PersonnelService.prototype.getAlPersonnelDetailsBegining = function () {
        console.log("getAlPersonnelDetailsBegining");
        return this.http.post(this.ip_and_port + '/angreq/personnel/employee_list', null);
    };
    PersonnelService.prototype.getAllAttendanceDetailsBegining = function () {
        console.log("getAllAttendanceDetailsBegining");
        return this.http.post(this.ip_and_port + '/angreq/attendance/rule_list', null);
    };
    PersonnelService.prototype.addNewDepartment = function (JsonData) {
        console.log("personnel Service : addNewDepartment");
        return this.http.post(this.ip_and_port + '/angreq/personnel/department_add', JsonData);
    };
    PersonnelService.prototype.editDepartment = function (JsonData) {
        console.log("personnel Service : editDepartment");
        return this.http.post(this.ip_and_port + '/angreq/personnel/department_edit', JsonData);
    };
    PersonnelService.prototype.Delete_Department = function (JsonData) {
        console.log("personnel Service :Delete Department");
        return this.http.post(this.ip_and_port + '/angreq/personnel/department_delete', JsonData);
    };
    PersonnelService.prototype.addNewPosition = function (JsonData) {
        console.log("personnel Service : addNewPosition");
        return this.http.post(this.ip_and_port + '/angreq/personnel/position_add', JsonData);
    };
    PersonnelService.prototype.editPosition = function (JsonData) {
        console.log("personnel Service : editPosition");
        return this.http.post(this.ip_and_port + '/angreq/personnel/position_edit', JsonData);
    };
    PersonnelService.prototype.DeletePosition = function (JsonData) {
        console.log("personnel Service :Delete Position");
        return this.http.post(this.ip_and_port + '/angreq/personnel/position_delete', JsonData);
    };
    PersonnelService.prototype.DeleteEmployee = function (JsonData) {
        console.log("personnel Service :Delete Employee");
        return this.http.post(this.ip_and_port + '/angreq/personnel/employee_delete', JsonData);
    };
    PersonnelService.prototype.addNewPersonnel = function (JsonData) {
        console.log("personnel Service :addNewPersonnel");
        return this.http.post(this.ip_and_port + '/angreq/personnel/employee_add', JsonData);
    };
    PersonnelService.prototype.editPersonnel = function (JsonData) {
        console.log("personnel Service :editPersonnel");
        return this.http.post(this.ip_and_port + '/angreq/personnel/employee_edit', JsonData);
    };
    PersonnelService.prototype.postImage = function (fd) {
        console.log("personnel Service :postImage");
        return this.http.post(this.ip_and_port + '/angreq/personnel/img_post', fd);
    };
    PersonnelService.prototype.getImage = function (JsonData) {
        return this.http.post(this.ip_and_port + '/angreq/personnel/img_get', JsonData);
    };
    PersonnelService.prototype.synchData = function (JsonData) {
        return this.http.post(this.ip_and_port + '/angreq/personnel/employee_sync', JsonData);
    };
    PersonnelService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }
    ]; };
    PersonnelService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        })
    ], PersonnelService);
    return PersonnelService;
}());

var addDepartmentModel = /** @class */ (function () {
    function addDepartmentModel(department_name, approver, department_code, employee_count, parent_department) {
        this.department_name = department_name;
        this.approver = approver;
        this.department_code = department_code;
        this.employee_count = employee_count;
        this.parent_department = parent_department;
    }
    addDepartmentModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return addDepartmentModel;
}());

var addPositionModel = /** @class */ (function () {
    function addPositionModel(personnel_No, first_name, last_name, Card_No, department, position, Gender, email, Privilege, Area, APPstatus) {
        this.personnel_No = personnel_No;
        this.first_name = first_name;
        this.last_name = last_name;
        this.Card_No = Card_No;
        this.department = department;
        this.position = position;
        this.Gender = Gender;
        this.email = email;
        this.Privilege = Privilege;
        this.Area = Area;
        this.APPstatus = APPstatus;
    }
    addPositionModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return addPositionModel;
}());

var AddAttendance = /** @class */ (function () {
    function AddAttendance(name, department) {
        this.name = name;
        this.department = department;
    }
    AddAttendance.ctorParameters = function () { return [
        { type: String },
        { type: String }
    ]; };
    return AddAttendance;
}());

var suuceesDaa = /** @class */ (function () {
    function suuceesDaa(responce_data) {
        this.responce_data = responce_data;
    }
    suuceesDaa.ctorParameters = function () { return [
        { type: String }
    ]; };
    return suuceesDaa;
}());



/***/ }),

/***/ "./src/app/service/system.service.ts":
/*!*******************************************!*\
  !*** ./src/app/service/system.service.ts ***!
  \*******************************************/
/*! exports provided: SystemService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SystemService", function() { return SystemService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");



var SystemService = /** @class */ (function () {
    function SystemService(http) {
        this.http = http;
        this.ip_and_port = localStorage.getItem("url");
        //this.ip_and_port=environment.apiUrl
    }
    SystemService.prototype.oracleDBSettingPost = function (JsonData) {
        console.log("System Service : oracleDBSettingPost");
        return this.http.post(this.ip_and_port + '/angreq/accounts/orcl_db', JsonData);
    };
    SystemService.prototype.getoracleDBSettings = function () {
        console.log("System Service : oracleDBSettingPost");
        return this.http.post(this.ip_and_port + '/angreq/accounts/orcl_db_get', null);
    };
    SystemService.prototype.newUserRegistration = function (JsonData) {
        console.log("System Service : newUserRegistration");
        return this.http.post(this.ip_and_port + '/angreq/accounts/register', JsonData);
    };
    SystemService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }
    ]; };
    SystemService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        })
    ], SystemService);
    return SystemService;
}());



/***/ }),

/***/ "./src/app/shopping-list/shopping-edit/shopping-edit.component.css":
/*!*************************************************************************!*\
  !*** ./src/app/shopping-list/shopping-edit/shopping-edit.component.css ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host ::ng-deep button {\r\n    margin-right: .25em;\r\n}\r\n\r\n:host ::ng-deep .ui-message,\r\n:host ::ng-deep .ui-inputtext {\r\n    margin-right: .25em;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hvcHBpbmctbGlzdC9zaG9wcGluZy1lZGl0L3Nob3BwaW5nLWVkaXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTs7SUFFSSxtQkFBbUI7QUFDdkIiLCJmaWxlIjoic3JjL2FwcC9zaG9wcGluZy1saXN0L3Nob3BwaW5nLWVkaXQvc2hvcHBpbmctZWRpdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IC4yNWVtO1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLnVpLW1lc3NhZ2UsXHJcbjpob3N0IDo6bmctZGVlcCAudWktaW5wdXR0ZXh0IHtcclxuICAgIG1hcmdpbi1yaWdodDogLjI1ZW07XHJcbn0iXX0= */"

/***/ }),

/***/ "./src/app/shopping-list/shopping-edit/shopping-edit.component.ts":
/*!************************************************************************!*\
  !*** ./src/app/shopping-list/shopping-edit/shopping-edit.component.ts ***!
  \************************************************************************/
/*! exports provided: ShoppingEditComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ShoppingEditComponent", function() { return ShoppingEditComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_car_service_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/car-service.service */ "./src/app/car-service.service.ts");
/* harmony import */ var src_app_service_InitialConfig_configuration_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/service/InitialConfig/configuration.service */ "./src/app/service/InitialConfig/configuration.service.ts");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_4__);





var ShoppingEditComponent = /** @class */ (function () {
    function ShoppingEditComponent(carService, config) {
        this.carService = carService;
        this.config = config;
        this.msgs = [];
        this.first = 0;
    }
    ShoppingEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.carService.getCarsSmall().subscribe(function (cars) { return _this.cars = cars; });
        this.cols = [
            { field: 'vin', header: 'Vin' },
            { field: 'year', header: 'Year' },
            { field: 'brand', header: 'Brand' },
            { field: 'color', header: 'Color' }
        ];
        this.showSuccess();
    };
    ShoppingEditComponent.prototype.showSuccess = function () {
        this.msgs = [];
        this.msgs.push({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
    };
    ShoppingEditComponent.prototype.showError = function () {
        this.msgs = [];
        this.msgs.push({ severity: 'error', summary: 'Error Message', detail: 'Validation failed' });
    };
    ShoppingEditComponent.prototype.clear = function () {
        this.msgs = [];
    };
    ShoppingEditComponent.ctorParameters = function () { return [
        { type: src_app_car_service_service__WEBPACK_IMPORTED_MODULE_2__["CarServiceService"] },
        { type: src_app_service_InitialConfig_configuration_service__WEBPACK_IMPORTED_MODULE_3__["ConfigurationService"] }
    ]; };
    ShoppingEditComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-shopping-edit',
            template: __webpack_require__(/*! raw-loader!./shopping-edit.component.html */ "./node_modules/raw-loader/index.js!./src/app/shopping-list/shopping-edit/shopping-edit.component.html"),
            providers: [primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_4__["MessageService"]],
            styles: [__webpack_require__(/*! ./shopping-edit.component.css */ "./src/app/shopping-list/shopping-edit/shopping-edit.component.css")]
        })
    ], ShoppingEditComponent);
    return ShoppingEditComponent;
}());



/***/ }),

/***/ "./src/app/shopping-list/shopping-list.component.css":
/*!***********************************************************!*\
  !*** ./src/app/shopping-list/shopping-list.component.css ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Nob3BwaW5nLWxpc3Qvc2hvcHBpbmctbGlzdC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/shopping-list/shopping-list.component.ts":
/*!**********************************************************!*\
  !*** ./src/app/shopping-list/shopping-list.component.ts ***!
  \**********************************************************/
/*! exports provided: ShoppingListComponent, Ingredient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ShoppingListComponent", function() { return ShoppingListComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ingredient", function() { return Ingredient; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var ShoppingListComponent = /** @class */ (function () {
    function ShoppingListComponent() {
        this.ingredients = [
            new Ingredient('Apple', 50),
            new Ingredient('Banana', 100),
        ];
    }
    ShoppingListComponent.prototype.ngOnInit = function () {
    };
    ShoppingListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-shopping-list',
            template: __webpack_require__(/*! raw-loader!./shopping-list.component.html */ "./node_modules/raw-loader/index.js!./src/app/shopping-list/shopping-list.component.html"),
            styles: [__webpack_require__(/*! ./shopping-list.component.css */ "./src/app/shopping-list/shopping-list.component.css")]
        })
    ], ShoppingListComponent);
    return ShoppingListComponent;
}());

var Ingredient = /** @class */ (function () {
    function Ingredient(name, amount) {
        this.name = name;
        this.amount = amount;
    }
    Ingredient.ctorParameters = function () { return [
        { type: String },
        { type: Number }
    ]; };
    return Ingredient;
}());



/***/ }),

/***/ "./src/app/submenu/addevice/addevice.component.css":
/*!*********************************************************!*\
  !*** ./src/app/submenu/addevice/addevice.component.css ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host ::ng-deep .mat-radio-container{\r\n    height: 10px;\r\n    width: 10px;\r\n  }\r\n  :host ::ng-deep .mat-radio-outer-circle{\r\n    height: 10px;\r\n    width: 10px;\r\n  }\r\n  :host ::ng-deep .mat-radio-inner-circle{\r\n    height: 10px;\r\n    width: 10px;\r\n  }\r\n  :host ::ng-deep .mat-radio-button .mat-radio-ripple{\r\n    height: 20px; /*double of your required circle radius*/\r\n    width: 20px;  /*double of your required circle radius*/\r\n    left: calc(50% - 10px); /*'10px'-same as your required circle radius*/\r\n    top: calc(50% - 10px); /*'10px'-same as your required circle radius*/\r\n  }\r\n  .mat-tree-node { min-height: 0px }\r\n \r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3VibWVudS9hZGRldmljZS9hZGRldmljZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7RUFDYjtFQUNBO0lBQ0UsWUFBWTtJQUNaLFdBQVc7RUFDYjtFQUNBO0lBQ0UsWUFBWTtJQUNaLFdBQVc7RUFDYjtFQUNBO0lBQ0UsWUFBWSxFQUFFLHdDQUF3QztJQUN0RCxXQUFXLEdBQUcsd0NBQXdDO0lBQ3RELHNCQUFzQixFQUFFLDZDQUE2QztJQUNyRSxxQkFBcUIsRUFBRSw2Q0FBNkM7RUFDdEU7RUFDQSxpQkFBaUIsZ0JBQWdCIiwiZmlsZSI6InNyYy9hcHAvc3VibWVudS9hZGRldmljZS9hZGRldmljZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIC5tYXQtcmFkaW8tY29udGFpbmVye1xyXG4gICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgd2lkdGg6IDEwcHg7XHJcbiAgfVxyXG4gIDpob3N0IDo6bmctZGVlcCAubWF0LXJhZGlvLW91dGVyLWNpcmNsZXtcclxuICAgIGhlaWdodDogMTBweDtcclxuICAgIHdpZHRoOiAxMHB4O1xyXG4gIH1cclxuICA6aG9zdCA6Om5nLWRlZXAgLm1hdC1yYWRpby1pbm5lci1jaXJjbGV7XHJcbiAgICBoZWlnaHQ6IDEwcHg7XHJcbiAgICB3aWR0aDogMTBweDtcclxuICB9XHJcbiAgOmhvc3QgOjpuZy1kZWVwIC5tYXQtcmFkaW8tYnV0dG9uIC5tYXQtcmFkaW8tcmlwcGxle1xyXG4gICAgaGVpZ2h0OiAyMHB4OyAvKmRvdWJsZSBvZiB5b3VyIHJlcXVpcmVkIGNpcmNsZSByYWRpdXMqL1xyXG4gICAgd2lkdGg6IDIwcHg7ICAvKmRvdWJsZSBvZiB5b3VyIHJlcXVpcmVkIGNpcmNsZSByYWRpdXMqL1xyXG4gICAgbGVmdDogY2FsYyg1MCUgLSAxMHB4KTsgLyonMTBweCctc2FtZSBhcyB5b3VyIHJlcXVpcmVkIGNpcmNsZSByYWRpdXMqL1xyXG4gICAgdG9wOiBjYWxjKDUwJSAtIDEwcHgpOyAvKicxMHB4Jy1zYW1lIGFzIHlvdXIgcmVxdWlyZWQgY2lyY2xlIHJhZGl1cyovXHJcbiAgfVxyXG4gIC5tYXQtdHJlZS1ub2RlIHsgbWluLWhlaWdodDogMHB4IH1cclxuICJdfQ== */"

/***/ }),

/***/ "./src/app/submenu/addevice/addevice.component.ts":
/*!********************************************************!*\
  !*** ./src/app/submenu/addevice/addevice.component.ts ***!
  \********************************************************/
/*! exports provided: addDeciceModel, TodoItemNode, TodoItemFlatNode, ChecklistDatabase, AddeviceComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addDeciceModel", function() { return addDeciceModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddeviceComponent", function() { return AddeviceComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_9__);










/**
 * Node for to-do item
 */
/*"area_code": "1",
"time_zone": "Etc/GMT+4",
////"firmware_Version": "Ver 1.0.0-20150331",
"port_no": null,
/////"fv_Count": null,
"ip_address": "192.168.1.50",
"device_Name": "auto_add",
"Serial_Number": "abcd1234",
"device_enable" : true,
"real_time_data_upload":true,
"request_interval" : 10,
"device_enable" : true*/
var addDeciceModel = /** @class */ (function () {
    function addDeciceModel(area_code, time_zone, port_no, ip_address, device_Name, Serial_Number, device_enable, real_time_data_upload, request_interval, manage_door, device_model) {
        this.area_code = area_code;
        this.time_zone = time_zone;
        this.port_no = port_no;
        this.ip_address = ip_address;
        this.device_Name = device_Name;
        this.Serial_Number = Serial_Number;
        this.device_enable = device_enable;
        this.real_time_data_upload = real_time_data_upload;
        this.request_interval = request_interval;
        this.manage_door = manage_door;
        this.device_model = device_model;
    }
    addDeciceModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: Boolean },
        { type: Boolean },
        { type: String },
        { type: String },
        { type: Number }
    ]; };
    return addDeciceModel;
}());

var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service) {
        this.service = service;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_5__["BehaviorSubject"]([]);
        this.getallAreasFromServer();
        console.log("before Initializing");
        console.log(TREE_DATA);
        console.log("After Initializing");
        console.log("First Constructor Finished" + TREE_DATA);
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallAreasFromServer = function () {
        var _this = this;
        console.log("getallAreasFromServer");
        this.service.getAllParentDetailsBegining().subscribe(function (response) { return _this.succsess(response); }, function (error) { return _this.errorHandlin(error); });
    };
    ChecklistDatabase.prototype.succsess = function (response) {
        console.log("Succes");
        console.log("TREE DATA-------------");
        console.log(TREE_DATA);
        console.log("response--------------");
        console.log(response);
        TREE_DATA = response;
        console.log("responses----------------Changed to TREE_DATA");
        console.log(TREE_DATA);
        this.initialize();
    };
    ChecklistDatabase.prototype.errorHandlin = function (error) {
        console.log("Eroor");
    };
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__["DeviceserviceService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var AddeviceComponent = /** @class */ (function () {
    function AddeviceComponent(database, service, dialog, router) {
        var _this = this;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.deviceTypeArray = [
            { id: 0, name: "LAN" },
            { id: 1, name: "WDMS" },
            { id: 2, name: "No Device Selected" },
        ];
        this.deviceTypeArray_init = 1;
        this.deviceTypeArray_data = "" + this.deviceTypeArray[this.deviceTypeArray_init].id;
        this.deviceTypeNumber = 2;
        this.disblevalue = 1;
        this.msgs = [];
        this.device_Name_e = null;
        this.Serial_Number_e = null;
        this.ip_address_e = null;
        this.port_no_e = null;
        this.realtime_e = true;
        this.device_enable_e = true;
        this.request_intreval_e = "5";
        this.time_zone_e = null;
        this.area_id_e = null;
        this.editFlag = false;
        this.title = "Add New Device";
        this.display = false;
        this.errordisplayflag = false;
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_1__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_2__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
        console.log("addevice : construcor()");
        this.editAddDevice();
    }
    AddeviceComponent.prototype.ngOnInit = function () {
        //console.log("oninit")
        //this.showError("thisisfortesting")
    };
    AddeviceComponent.prototype.editAddDevice = function () {
        var data = this.service.getDeviceEdit();
        this.service.setDeviceEdit(null);
        console.log("addevice : editAddDevice");
        console.log(data);
        if (data) {
            this.editFlag = true;
            console.log("edit Mode Activate");
            this.title = "Edit Device";
            this.device_Name_e = data['device_Name'];
            this.Serial_Number_e = data['Serial_Number'];
            this.ip_address_e = data['ip_address'];
            this.port_no_e = data['port_no'];
            this.realtime_e = data['realtime'];
            this.device_enable_e = data['device_enable'];
            this.request_intreval_e = data['request_intreval'];
            this.time_zone_e = data['time_zone'];
            this.area_id_e = data['area_id'];
            this.deviceTypeNumber = data['device_model'];
            this.deviceTypeArray_init = this.deviceTypeNumber;
        }
        else {
            this.editFlag = false;
            console.log("edit Mode NOT");
            this.title = "Add New Device";
            this.device_Name_e = null;
            this.Serial_Number_e = null;
            this.ip_address_e = null;
            this.port_no_e = null;
            this.realtime_e = true;
            this.device_enable_e = true;
            this.request_intreval_e = "5";
            this.time_zone_e = null;
            this.area_id_e = null;
            this.deviceTypeArray_init = 2;
        }
    };
    AddeviceComponent.prototype.showDialog = function () {
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    AddeviceComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    AddeviceComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    AddeviceComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    AddeviceComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    AddeviceComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    AddeviceComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    AddeviceComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    AddeviceComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    AddeviceComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    AddeviceComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.area_id_e = event.value;
    };
    AddeviceComponent.prototype.getaddDeviceForm = function (event) {
        var _this = this;
        console.log(event);
        var obj = new addDeciceModel(event.value['parentarea'], event.value['timezone'], event.value['portnumber'], event.value['ipaddress'], event.value['devicename'], event.value['serialnumber'], this.device_enable_e, this.realtime_e, this.request_intreval_e, null, this.deviceTypeNumber);
        console.log(obj);
        if (this.deviceTypeNumber == 2) {
            this.showError1("You Should Select One Device Type");
        }
        if (this.deviceTypeNumber == 0) {
            var sln = event.value['serialnumber'];
            var ip = event.value['ipaddress'];
            try {
                var spiltted = ip.split('.');
                if (spiltted.length != 4) {
                    this.showError1("Enetr a Valid IP Address");
                }
                else {
                    if (this.editFlag) {
                        console.log("Editing Old Device");
                        this.service.deviceEdit(obj).subscribe(function (response) { return _this.success1(response); }, function (error) { return _this.error1(error); });
                    }
                    else {
                        console.log("Adding New Device");
                        this.service.postAddDeviceDetails(obj).subscribe(function (response) { return _this.success1(response); }, function (error) { return _this.error1(error); });
                    }
                }
            }
            catch (error) {
                console.log("catch");
                this.showError1("Enetr a Valid IP Address");
            }
        }
        if (this.deviceTypeNumber == 1) {
            if (this.editFlag) {
                console.log("Editing Old Device");
                this.service.deviceEdit(obj).subscribe(function (response) { return _this.success1(response); }, function (error) { return _this.error1(error); });
            }
            else {
                console.log("Adding New Device");
                this.service.postAddDeviceDetails(obj).subscribe(function (response) { return _this.success1(response); }, function (error) { return _this.error1(error); });
            }
        }
        console.log("add deviceform");
        //console.log(event);
        //console.log(event.value['areacode'])
        //let JsonData=JSON.stringify(obj)
        //console.log("JsonData");
        //console.log(JsonData);
        /*if(this.editFlag&&flag==true)
        {
          console.log("Editing Old Device");
          this.service.deviceEdit(obj).subscribe(response=>this.success1(response),error=>this.error1(error));
        
        }
        else if(flag==true)
        {
          console.log("Adding New Device");
          this.service.postAddDeviceDetails(obj).subscribe(response=>this.success1(response),error=>this.error1(error));
        }*/
    };
    AddeviceComponent.prototype.success1 = function (response) {
        console.log("success1");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (response.responce_data === "Success") {
            console.log("if sucsess");
            this.router.navigate(['device']);
        }
        else {
            //this.errordisplayflag=true;
            this.showError1(response.responce_data);
        }
    };
    AddeviceComponent.prototype.error1 = function (error) {
        console.log("error1");
        console.log(error);
        // this.errorDta="Server Not Responding,Please try Again"
        // this.errordisplayflag=true;
        this.showError1("Server Not Responding,Please try Again");
    };
    AddeviceComponent.prototype.displayfalse = function () {
        console.log("display false");
        this.area_id_e = null;
        this.display = false;
    };
    AddeviceComponent.prototype.showError = function () {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: 'Server is Not Responding,Please Try Again Latter' });
    };
    AddeviceComponent.prototype.showError1 = function (data) {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: data });
    };
    AddeviceComponent.prototype.deviceTypeArrayMethod = function (data) {
        this.deviceTypeNumber = data;
        console.log(this.deviceTypeNumber);
        if (this.deviceTypeNumber == 0)
            this.disblevalue = 0;
        else
            this.disblevalue = 1;
    };
    AddeviceComponent.ctorParameters = function () { return [
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"] }
    ]; };
    AddeviceComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
            selector: 'app-addevice',
            template: __webpack_require__(/*! raw-loader!./addevice.component.html */ "./node_modules/raw-loader/index.js!./src/app/submenu/addevice/addevice.component.html"),
            providers: [ChecklistDatabase, primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_9__["MessageService"]],
            styles: [__webpack_require__(/*! ./addevice.component.css */ "./src/app/submenu/addevice/addevice.component.css")]
        })
    ], AddeviceComponent);
    return AddeviceComponent;
}());



/***/ }),

/***/ "./src/app/submenu/addeviceareaubmenu/addeviceareaubmenu.component.css":
/*!*****************************************************************************!*\
  !*** ./src/app/submenu/addeviceareaubmenu/addeviceareaubmenu.component.css ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host ::ng-deep .mat-radio-container{\r\n    height: 10px;\r\n    width: 10px;\r\n  }\r\n  :host ::ng-deep .mat-radio-outer-circle{\r\n    height: 10px;\r\n    width: 10px;\r\n  }\r\n  :host ::ng-deep .mat-radio-inner-circle{\r\n    height: 10px;\r\n    width: 10px;\r\n  }\r\n  :host ::ng-deep .mat-radio-button .mat-radio-ripple{\r\n    height: 20px; /*double of your required circle radius*/\r\n    width: 20px;  /*double of your required circle radius*/\r\n    left: calc(50% - 10px); /*'10px'-same as your required circle radius*/\r\n    top: calc(50% - 10px); /*'10px'-same as your required circle radius*/\r\n  }\r\n  .mat-tree-node { min-height: 0px }\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3VibWVudS9hZGRldmljZWFyZWF1Ym1lbnUvYWRkZXZpY2VhcmVhdWJtZW51LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osV0FBVztFQUNiO0VBQ0E7SUFDRSxZQUFZO0lBQ1osV0FBVztFQUNiO0VBQ0E7SUFDRSxZQUFZO0lBQ1osV0FBVztFQUNiO0VBQ0E7SUFDRSxZQUFZLEVBQUUsd0NBQXdDO0lBQ3RELFdBQVcsR0FBRyx3Q0FBd0M7SUFDdEQsc0JBQXNCLEVBQUUsNkNBQTZDO0lBQ3JFLHFCQUFxQixFQUFFLDZDQUE2QztFQUN0RTtFQUNBLGlCQUFpQixnQkFBZ0IiLCJmaWxlIjoic3JjL2FwcC9zdWJtZW51L2FkZGV2aWNlYXJlYXVibWVudS9hZGRldmljZWFyZWF1Ym1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IDo6bmctZGVlcCAubWF0LXJhZGlvLWNvbnRhaW5lcntcclxuICAgIGhlaWdodDogMTBweDtcclxuICAgIHdpZHRoOiAxMHB4O1xyXG4gIH1cclxuICA6aG9zdCA6Om5nLWRlZXAgLm1hdC1yYWRpby1vdXRlci1jaXJjbGV7XHJcbiAgICBoZWlnaHQ6IDEwcHg7XHJcbiAgICB3aWR0aDogMTBweDtcclxuICB9XHJcbiAgOmhvc3QgOjpuZy1kZWVwIC5tYXQtcmFkaW8taW5uZXItY2lyY2xle1xyXG4gICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgd2lkdGg6IDEwcHg7XHJcbiAgfVxyXG4gIDpob3N0IDo6bmctZGVlcCAubWF0LXJhZGlvLWJ1dHRvbiAubWF0LXJhZGlvLXJpcHBsZXtcclxuICAgIGhlaWdodDogMjBweDsgLypkb3VibGUgb2YgeW91ciByZXF1aXJlZCBjaXJjbGUgcmFkaXVzKi9cclxuICAgIHdpZHRoOiAyMHB4OyAgLypkb3VibGUgb2YgeW91ciByZXF1aXJlZCBjaXJjbGUgcmFkaXVzKi9cclxuICAgIGxlZnQ6IGNhbGMoNTAlIC0gMTBweCk7IC8qJzEwcHgnLXNhbWUgYXMgeW91ciByZXF1aXJlZCBjaXJjbGUgcmFkaXVzKi9cclxuICAgIHRvcDogY2FsYyg1MCUgLSAxMHB4KTsgLyonMTBweCctc2FtZSBhcyB5b3VyIHJlcXVpcmVkIGNpcmNsZSByYWRpdXMqL1xyXG4gIH1cclxuICAubWF0LXRyZWUtbm9kZSB7IG1pbi1oZWlnaHQ6IDBweCB9Il19 */"

/***/ }),

/***/ "./src/app/submenu/addeviceareaubmenu/addeviceareaubmenu.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/submenu/addeviceareaubmenu/addeviceareaubmenu.component.ts ***!
  \****************************************************************************/
/*! exports provided: addAreaModel, TodoItemNode, TodoItemFlatNode, ChecklistDatabase, AddeviceareaubmenuComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addAreaModel", function() { return addAreaModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddeviceareaubmenuComponent", function() { return AddeviceareaubmenuComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_9__);










/**
 * Node for to-do item
 */
var addAreaModel = /** @class */ (function () {
    function addAreaModel(area_code, area_name, parent_area, remark) {
        this.area_code = area_code;
        this.area_name = area_name;
        this.parent_area = parent_area;
        this.remark = remark;
    }
    addAreaModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return addAreaModel;
}());

var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service) {
        this.service = service;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_5__["BehaviorSubject"]([]);
        this.getallAreasFromServer();
        console.log("before Initializing");
        console.log(TREE_DATA);
        console.log("After Initializing");
        console.log("First Constructor Finished" + TREE_DATA);
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallAreasFromServer = function () {
        var _this = this;
        console.log("getallAreasFromServer");
        this.service.getAllParentDetailsBegining().subscribe(function (response) { return _this.succsess(response); }, function (error) { return _this.errorHandlin(error); });
    };
    ChecklistDatabase.prototype.succsess = function (response) {
        console.log("Succes");
        console.log("TREE DATA-------------");
        console.log(TREE_DATA);
        console.log("response--------------");
        console.log(response);
        TREE_DATA = response;
        console.log("responses----------------Changed to TREE_DATA");
        console.log(TREE_DATA);
        this.initialize();
    };
    ChecklistDatabase.prototype.errorHandlin = function (error) {
        console.log("Eroor");
    };
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__["DeviceserviceService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var AddeviceareaubmenuComponent = /** @class */ (function () {
    function AddeviceareaubmenuComponent(database, service, dialog, router) {
        var _this = this;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.display = false;
        this.msgs = [];
        this.parentArea = null;
        this.errordisplayflag = false;
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_1__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_2__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_4__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
    }
    /** Whether all the descendants of the node are selected. */
    AddeviceareaubmenuComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    AddeviceareaubmenuComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    AddeviceareaubmenuComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    AddeviceareaubmenuComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    AddeviceareaubmenuComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    AddeviceareaubmenuComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    AddeviceareaubmenuComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    AddeviceareaubmenuComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    AddeviceareaubmenuComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    AddeviceareaubmenuComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.parentArea = event.value;
    };
    AddeviceareaubmenuComponent.prototype.getaddAreaForm = function (event) {
        var _this = this;
        console.log("add New Area");
        console.log(event);
        var obj = new addAreaModel(event.value['areacode'], event.value['areaname'], this.parentArea, event.value['remark']);
        //console.log(JSON.stringify(obj));
        //console.log(event.value['areacode'])
        console.log(obj);
        this.service.postAddareaDetails(obj).subscribe(function (response) { return _this.success1(response); }, function (error) { return _this.error1(error); });
    };
    AddeviceareaubmenuComponent.prototype.success1 = function (response) {
        console.log("success1");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Success") {
            console.log("if sucsess");
            this.router.navigate(['area']);
        }
        else {
            this.showError1(response.responce_data);
        }
    };
    AddeviceareaubmenuComponent.prototype.error1 = function (error) {
        console.log("error1");
        console.log(error);
        // this.errorDta="Server Not Responding,Please try Again"
        // this.errordisplayflag=true;
        this.showError();
    };
    AddeviceareaubmenuComponent.prototype.showError = function () {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: 'Server Not Responding,Please try Again' });
    };
    AddeviceareaubmenuComponent.prototype.showError1 = function (msg) {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: msg });
    };
    AddeviceareaubmenuComponent.prototype.showDialog = function () {
        this.database.getallAreasFromServer();
        this.display = true;
    };
    AddeviceareaubmenuComponent.prototype.displayfalse = function () {
        this.parentArea = null;
        this.display = false;
    };
    AddeviceareaubmenuComponent.ctorParameters = function () { return [
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_7__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"] }
    ]; };
    AddeviceareaubmenuComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
            selector: 'app-addeviceareaubmenu',
            template: __webpack_require__(/*! raw-loader!./addeviceareaubmenu.component.html */ "./node_modules/raw-loader/index.js!./src/app/submenu/addeviceareaubmenu/addeviceareaubmenu.component.html"),
            providers: [ChecklistDatabase, primeng_components_common_api__WEBPACK_IMPORTED_MODULE_9__["MessageService"]],
            styles: [__webpack_require__(/*! ./addeviceareaubmenu.component.css */ "./src/app/submenu/addeviceareaubmenu/addeviceareaubmenu.component.css")]
        })
    ], AddeviceareaubmenuComponent);
    return AddeviceareaubmenuComponent;
}());



/***/ }),

/***/ "./src/app/submenu/attendancesubmenu/attendancesubmenu.component.css":
/*!***************************************************************************!*\
  !*** ./src/app/submenu/attendancesubmenu/attendancesubmenu.component.css ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1Ym1lbnUvYXR0ZW5kYW5jZXN1Ym1lbnUvYXR0ZW5kYW5jZXN1Ym1lbnUuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/submenu/attendancesubmenu/attendancesubmenu.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/submenu/attendancesubmenu/attendancesubmenu.component.ts ***!
  \**************************************************************************/
/*! exports provided: AttendancesubmenuComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttendancesubmenuComponent", function() { return AttendancesubmenuComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var AttendancesubmenuComponent = /** @class */ (function () {
    function AttendancesubmenuComponent() {
    }
    AttendancesubmenuComponent.prototype.ngOnInit = function () {
    };
    AttendancesubmenuComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-attendancesubmenu',
            template: __webpack_require__(/*! raw-loader!./attendancesubmenu.component.html */ "./node_modules/raw-loader/index.js!./src/app/submenu/attendancesubmenu/attendancesubmenu.component.html"),
            styles: [__webpack_require__(/*! ./attendancesubmenu.component.css */ "./src/app/submenu/attendancesubmenu/attendancesubmenu.component.css")]
        })
    ], AttendancesubmenuComponent);
    return AttendancesubmenuComponent;
}());



/***/ }),

/***/ "./src/app/submenu/deviceareasubmenu/deviceareasubmenu.component.css":
/*!***************************************************************************!*\
  !*** ./src/app/submenu/deviceareasubmenu/deviceareasubmenu.component.css ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1Ym1lbnUvZGV2aWNlYXJlYXN1Ym1lbnUvZGV2aWNlYXJlYXN1Ym1lbnUuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/submenu/deviceareasubmenu/deviceareasubmenu.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/submenu/deviceareasubmenu/deviceareasubmenu.component.ts ***!
  \**************************************************************************/
/*! exports provided: addAreaModel, editAreaModel, AreaCodeModel, TodoItemNode, TodoItemFlatNode, ChecklistDatabase, DeviceareasubmenuComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addAreaModel", function() { return addAreaModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "editAreaModel", function() { return editAreaModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AreaCodeModel", function() { return AreaCodeModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemNode", function() { return TodoItemNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TodoItemFlatNode", function() { return TodoItemFlatNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChecklistDatabase", function() { return ChecklistDatabase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeviceareasubmenuComponent", function() { return DeviceareasubmenuComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/collections */ "./node_modules/@angular/cdk/esm5/collections.es5.js");
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/tree */ "./node_modules/@angular/cdk/esm5/tree.es5.js");
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/tree */ "./node_modules/@angular/material/esm5/tree.es5.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");











;


var jsPDF = __webpack_require__(/*! jspdf */ "./node_modules/jspdf/dist/jspdf.min.js");
__webpack_require__(/*! jspdf-autotable */ "./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js");
var addAreaModel = /** @class */ (function () {
    function addAreaModel(area_code, area_name, parent_area, remark) {
        this.area_code = area_code;
        this.area_name = area_name;
        this.parent_area = parent_area;
        this.remark = remark;
    }
    addAreaModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return addAreaModel;
}());

var editAreaModel = /** @class */ (function () {
    function editAreaModel(area_code_old, area_code, area_name, parent_area, remark) {
        this.area_code_old = area_code_old;
        this.area_code = area_code;
        this.area_name = area_name;
        this.parent_area = parent_area;
        this.remark = remark;
    }
    editAreaModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return editAreaModel;
}());

var AreaCodeModel = /** @class */ (function () {
    function AreaCodeModel(area_code) {
        this.area_code = area_code;
    }
    AreaCodeModel.ctorParameters = function () { return [
        { type: String }
    ]; };
    return AreaCodeModel;
}());

var TodoItemNode = /** @class */ (function () {
    function TodoItemNode() {
    }
    return TodoItemNode;
}());

/** Flat to-do item node with expandable and level information */
var TodoItemFlatNode = /** @class */ (function () {
    function TodoItemFlatNode() {
    }
    return TodoItemFlatNode;
}());

/**
 * The Json object for to-do list data.
 */
var TREE_DATA = {};
/**
 * Checklist database, it can build a tree structured Json object.
 * Each node in Json object represents a to-do item or a category.
 * If a node is a category, it has children items and new items can be added under the category.
 */
var ChecklistDatabase = /** @class */ (function () {
    function ChecklistDatabase(service) {
        this.service = service;
        this.dataChange = new rxjs__WEBPACK_IMPORTED_MODULE_9__["BehaviorSubject"]([]);
        this.getallAreasFromServer();
        console.log("before Initializing");
        console.log(TREE_DATA);
        console.log("After Initializing");
        console.log("First Constructor Finished" + TREE_DATA);
    }
    Object.defineProperty(ChecklistDatabase.prototype, "data", {
        get: function () {
            return this.dataChange.value;
        },
        enumerable: true,
        configurable: true
    });
    ChecklistDatabase.prototype.getallAreasFromServer = function () {
        var _this = this;
        console.log("getallAreasFromServer");
        this.service.getAllParentDetailsBegining().subscribe(function (response) { return _this.succsess(response); }, function (error) { return _this.errorHandlin(error); });
    };
    ChecklistDatabase.prototype.succsess = function (response) {
        console.log("Succes");
        console.log("TREE DATA-------------");
        console.log(TREE_DATA);
        console.log("response--------------");
        console.log(response);
        TREE_DATA = response;
        console.log("responses----------------Changed to TREE_DATA");
        console.log(TREE_DATA);
        this.initialize();
    };
    ChecklistDatabase.prototype.errorHandlin = function (error) {
        console.log("Eroor");
    };
    ChecklistDatabase.prototype.initialize = function () {
        var data = this.buildFileTree(TREE_DATA, 0);
        this.dataChange.next(data);
    };
    /**
     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.
     * The return value is the list of `TodoItemNode`.
     */
    ChecklistDatabase.prototype.buildFileTree = function (obj, level) {
        var _this = this;
        // console.log("in buildFileTree ")
        return Object.keys(obj).reduce(function (accumulator, key) {
            var value = obj[key];
            var node = new TodoItemNode();
            node.item = key;
            if (value != null) {
                if (typeof value === 'object') {
                    node.children = _this.buildFileTree(value, level + 1);
                }
                else {
                    node.item = value;
                }
            }
            return accumulator.concat(node);
        }, []);
    };
    /** Add an item to to-do list */
    ChecklistDatabase.prototype.insertItem = function (parent, name) {
        if (parent.children) {
            parent.children.push({ item: name });
            this.dataChange.next(this.data);
        }
    };
    ChecklistDatabase.prototype.updateItem = function (node, name) {
        node.item = name;
        this.dataChange.next(this.data);
    };
    ChecklistDatabase.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] }
    ]; };
    ChecklistDatabase = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], ChecklistDatabase);
    return ChecklistDatabase;
}());

/**
 * @title Tree with checkboxes
 */
var DeviceareasubmenuComponent = /** @class */ (function () {
    function DeviceareasubmenuComponent(http, deviceService, messageService, confirmationService, database, service, dialog, router) {
        var _this = this;
        this.http = http;
        this.deviceService = deviceService;
        this.messageService = messageService;
        this.confirmationService = confirmationService;
        this.database = database;
        this.service = service;
        this.dialog = dialog;
        this.router = router;
        this.timeZoneForm = _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"];
        this.errordisplayflag = false;
        this.pagenum = 15;
        this.sum = 0;
        this.sumOriginal = 10;
        this.totalRecords = 0;
        this.count = 1;
        this.msgs = [];
        this.MySum = [];
        this.display = false;
        this.parentArea = null;
        /** Map from flat node to nested node. This helps us finding the nested node to be modified */
        this.flatNodeMap = new Map();
        /** Map from nested node to flattened node. This helps us to keep the same object for selection */
        this.nestedNodeMap = new Map();
        /** A selected parent node to be inserted */
        this.selectedParent = null;
        /** The new item's name */
        this.newItemName = '';
        /** The selection for checklist */
        this.checklistSelection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_6__["SelectionModel"](true /* multiple */);
        this.getLevel = function (node) { return node.level; };
        this.isExpandable = function (node) { return node.expandable; };
        this.getChildren = function (node) { return node.children; };
        this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };
        this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };
        /**
         * Transformer to convert nested node to flat node. Record the nodes in maps for later use.
         */
        this.transformer = function (node, level) {
            var existingNode = _this.nestedNodeMap.get(node);
            var flatNode = existingNode && existingNode.item === node.item
                ? existingNode
                : new TodoItemFlatNode();
            flatNode.item = node.item;
            flatNode.level = level;
            flatNode.expandable = !!node.children;
            _this.flatNodeMap.set(flatNode, node);
            _this.nestedNodeMap.set(node, flatNode);
            return flatNode;
        };
        this.editParentArea = null;
        this.treeFlattener = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlattener"](this.transformer, this.getLevel, this.isExpandable, this.getChildren);
        this.treeControl = new _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_7__["FlatTreeControl"](this.getLevel, this.isExpandable);
        this.dataSource = new _angular_material_tree__WEBPACK_IMPORTED_MODULE_8__["MatTreeFlatDataSource"](this.treeControl, this.treeFlattener);
        database.dataChange.subscribe(function (data) {
            _this.dataSource.data = data;
        });
        //working code ok
        // Observable.interval(1000).subscribe(x=>console.log(x))
        /* interval(1000).subscribe(()=>this.deviceService.getAllAreaDetailsBegining().subscribe(
           response=>this.handleSuccess(response),
           error=>this.handleError(error)
          ));*/
        /*console.log("constructor");
              console.log("DeviceAra Submenu  :   constructor : IP ADDRESS ")
            this.ipaddress=this.http.get("https://ipinfo.io")
            console.log(this.ipaddress)*/
    }
    DeviceareasubmenuComponent.prototype.showDialog = function () {
        this.display = true;
    };
    /** Whether all the descendants of the node are selected. */
    DeviceareasubmenuComponent.prototype.descendantsAllSelected = function (node) {
        var _this = this;
        console.log("descendantsAllSelected");
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        return descAllSelected;
    };
    /** Whether part of the descendants are selected */
    DeviceareasubmenuComponent.prototype.descendantsPartiallySelected = function (node) {
        var _this = this;
        console.log("descendantsPartiallySelected");
        var descendants = this.treeControl.getDescendants(node);
        var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });
        return result && !this.descendantsAllSelected(node);
    };
    /** Toggle the to-do item selection. Select/deselect all the descendants node */
    DeviceareasubmenuComponent.prototype.todoItemSelectionToggle = function (node) {
        var _this = this;
        var _a, _b;
        this.checklistSelection.toggle(node);
        var descendants = this.treeControl.getDescendants(node);
        this.checklistSelection.isSelected(node)
            ? (_a = this.checklistSelection).select.apply(_a, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants)) : (_b = this.checklistSelection).deselect.apply(_b, tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"](descendants));
        // Force update for the parent
        descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        this.checkAllParentsSelection(node);
    };
    /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */
    DeviceareasubmenuComponent.prototype.todoLeafItemSelectionToggle = function (node) {
        this.checklistSelection.toggle(node);
        this.checkAllParentsSelection(node);
        console.log(this.checklistSelection.toggle(node));
    };
    /* Checks all the parents when a leaf node is selected/unselected */
    DeviceareasubmenuComponent.prototype.checkAllParentsSelection = function (node) {
        var parent = this.getParentNode(node);
        while (parent) {
            this.checkRootNodeSelection(parent);
            parent = this.getParentNode(parent);
        }
    };
    /** Check root node checked state and change it accordingly */
    DeviceareasubmenuComponent.prototype.checkRootNodeSelection = function (node) {
        var _this = this;
        var nodeSelected = this.checklistSelection.isSelected(node);
        var descendants = this.treeControl.getDescendants(node);
        var descAllSelected = descendants.every(function (child) {
            return _this.checklistSelection.isSelected(child);
        });
        if (nodeSelected && !descAllSelected) {
            this.checklistSelection.deselect(node);
        }
        else if (!nodeSelected && descAllSelected) {
            this.checklistSelection.select(node);
        }
    };
    /* Get the parent node of a node */
    DeviceareasubmenuComponent.prototype.getParentNode = function (node) {
        console.log(node.item);
        var currentLevel = this.getLevel(node);
        if (currentLevel < 1) {
            return null;
        }
        var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;
        for (var i = startIndex; i >= 0; i--) {
            var currentNode = this.treeControl.dataNodes[i];
            if (this.getLevel(currentNode) < currentLevel) {
                console.log("NODE" + currentNode.item);
                return currentNode;
            }
        }
        return null;
    };
    /** Select the category so we can insert the new item. */
    DeviceareasubmenuComponent.prototype.addNewItem = function (node) {
        var parentNode = this.flatNodeMap.get(node);
        this.database.insertItem(parentNode, '');
        this.treeControl.expand(node);
    };
    /** Save the node to database */
    DeviceareasubmenuComponent.prototype.saveNode = function (node, itemValue) {
        var nestedNode = this.flatNodeMap.get(node);
        this.database.updateItem(nestedNode, itemValue);
    };
    DeviceareasubmenuComponent.prototype.getValueFromRadioButton = function (event) {
        console.log("getValueFromRadioButton");
        console.log(event.value);
        console.log(event);
        this.parentArea = event.value;
    };
    DeviceareasubmenuComponent.prototype.displayfalse = function () {
        console.log("display false" + this.parentArea);
        this.parentArea = this.editParentArea;
        this.display = false;
    };
    //constructor(private router: Router,private deviceService:DeviceserviceService,private messageService: MessageService,private confirmationService: ConfirmationService) { }
    DeviceareasubmenuComponent.prototype.ngOnInit = function () {
        this.initialmethod();
        //
        console.log("ng init");
        this.cols = [
            { field: 'area_code', header: 'Area Code' },
            { field: 'area_name', header: 'Area Names' },
            { field: 'parent_area', header: 'Parent Area' },
            { field: 'remark', header: 'Remark' },
            { field: ' ', header: 'Action' }
        ];
        this.area_form = false;
        this.area_table = true;
    };
    DeviceareasubmenuComponent.prototype.initialmethod = function () {
        var _this = this;
        console.log("ngOnInit");
        this.deviceService.getAllAreaDetailsBegining().subscribe(function (response) { return _this.handleSuccess3(response); }, function (error) { return _this.handleError3(error); });
        //  this.showError1("tesing")
    };
    DeviceareasubmenuComponent.prototype.handleSuccess1 = function (response) {
        console.log("handleSuccess");
        this.allDevice = response;
        console.log(this.allDevice);
    };
    DeviceareasubmenuComponent.prototype.handleError1 = function (error) {
        console.log("handle  Error");
        console.log(error);
    };
    DeviceareasubmenuComponent.prototype.Area_Delete_success = function (response) {
        var _this = this;
        console.log("Area_Delete_success ");
        console.log(response.responce_data);
        // responce_data
        this.errorDta = response.responce_data;
        if (this.errorDta === "Success") {
            console.log("if sucsess");
            this.router.navigate(['area']);
            this.deviceService.getAllAreaDetailsBegining().subscribe(function (response) { return _this.handleSuccess3(response); }, function (error) { return _this.handleError3(error); });
        }
        else {
            this.deviceService.getAllAreaDetailsBegining().subscribe(function (response) { return _this.handleSuccess3(response); }, function (error) { return _this.handleError3(error); });
            this.showError1(response.responce_data);
        }
    };
    DeviceareasubmenuComponent.prototype.Area_Delete_error = function (error) {
        console.log("Area_Delete_error");
        console.log(error);
        //  this.errorDta="Server Not Responding,Please try Again"
        //  this.errordisplayflag=true;
        //this.showError1(error.responce_data)
        this.showError();
    };
    DeviceareasubmenuComponent.prototype.onRowEditInit = function (area) {
        console.log("onRowEditInit EDIT ARE" + area['area_code']);
        this.area_code_old = area['area_code'];
        this.parentArea = area['parent_area'];
        this.editParentArea = this.parentArea;
    };
    DeviceareasubmenuComponent.prototype.onRowEditSave = function (area) {
        var _this = this;
        console.log("onRowEditSave IN EDIT NEW AREA");
        //  console.log(this.parentArea)
        // console.log(area)
        //console.log(device['device_enable'])
        var obj = new editAreaModel(this.area_code_old, area['area_code'], area['area_name'], this.parentArea, area['remark']);
        console.log(obj);
        this.deviceService.areaEdit(obj).subscribe(function (response) { return _this.edit_Area_success(response); }, function (error) { return _this.edit_Area_error(error); });
        this.parentArea = null;
    };
    DeviceareasubmenuComponent.prototype.edit_Area_success = function (success) {
        console.log("deviceareaSubmenu : edit_Area_success");
        console.log(success);
        if (success.responce_data == "Success") {
            this.router.navigate(['area']);
            this.initialmethod();
        }
        else {
            this.showError1(success.responce_data);
        }
    };
    DeviceareasubmenuComponent.prototype.edit_Area_error = function (error) {
        console.log("deviceareaSubmenu : edit_Area_error");
        console.log(error);
        this.showError1(error.responce_data);
    };
    DeviceareasubmenuComponent.prototype.onRowEditCancel = function (car, index) {
        console.log("onRowEditCancel");
        this.parentArea = null;
    };
    DeviceareasubmenuComponent.prototype.onRowRemove = function (area, index) {
        var _this = this;
        console.log("Device area Submenu  : Remove ");
        var obj = new AreaCodeModel(area['area_code']);
        console.log(obj);
        this.confirmationService.confirm({
            message: 'Are you sure that you want to proceed?',
            header: 'Confirmation',
            icon: 'pi pi-exclamation-triangle',
            accept: function () {
                console.log("YES");
                _this.deviceService.DeleteArea(obj).subscribe(function (response) { return _this.Area_Delete_success(response); }, function (error) { return _this.Area_Delete_error(error); });
            },
            reject: function () {
                // this.msgs = [{severity:'info', summary:'Rejected', detail:'You have rejected'}];
                console.log("NOS");
            }
        });
    };
    DeviceareasubmenuComponent.prototype.showSuccess = function () {
        this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
    };
    DeviceareasubmenuComponent.prototype.showDialog1 = function () {
        this.database.getallAreasFromServer();
        this.display = true;
    };
    DeviceareasubmenuComponent.prototype.assignValu = function () {
        console.log("assiagn value");
        this.display = false;
    };
    DeviceareasubmenuComponent.prototype.handleSuccess3 = function (response) {
        var e_1, _a;
        console.log("handleSuccess");
        console.log("want to add primary key");
        var count = 0;
        try {
            for (var response_1 = tslib__WEBPACK_IMPORTED_MODULE_0__["__values"](response), response_1_1 = response_1.next(); !response_1_1.done; response_1_1 = response_1.next()) {
                var entry = response_1_1.value;
                console.log(entry);
                entry.data_id = count++;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (response_1_1 && !response_1_1.done && (_a = response_1.return)) _a.call(response_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        console.log(response);
        this.allArea = response;
    };
    DeviceareasubmenuComponent.prototype.handleError3 = function (error) {
        console.log("handle  Error");
        console.log(error);
        this.showError();
    };
    DeviceareasubmenuComponent.prototype.addarea = function () {
        this.area_form = true;
        this.area_table = false;
    };
    DeviceareasubmenuComponent.prototype.showError = function () {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: 'Server Is Not Responding,Please Try Again Later' });
    };
    DeviceareasubmenuComponent.prototype.showError1 = function (data) {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Error Message', detail: data });
    };
    DeviceareasubmenuComponent.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClient"] },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"] },
        { type: primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"] },
        { type: ChecklistDatabase },
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_11__["DeviceserviceService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] }
    ]; };
    DeviceareasubmenuComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-deviceareasubmenu',
            template: __webpack_require__(/*! raw-loader!./deviceareasubmenu.component.html */ "./node_modules/raw-loader/index.js!./src/app/submenu/deviceareasubmenu/deviceareasubmenu.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"], ChecklistDatabase],
            styles: [__webpack_require__(/*! ./deviceareasubmenu.component.css */ "./src/app/submenu/deviceareasubmenu/deviceareasubmenu.component.css")]
        })
    ], DeviceareasubmenuComponent);
    return DeviceareasubmenuComponent;
}());



/***/ }),

/***/ "./src/app/submenu/devicerealtimesubmenu/devicerealtimesubmenu.component.css":
/*!***********************************************************************************!*\
  !*** ./src/app/submenu/devicerealtimesubmenu/devicerealtimesubmenu.component.css ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1Ym1lbnUvZGV2aWNlcmVhbHRpbWVzdWJtZW51L2RldmljZXJlYWx0aW1lc3VibWVudS5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/submenu/devicerealtimesubmenu/devicerealtimesubmenu.component.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/submenu/devicerealtimesubmenu/devicerealtimesubmenu.component.ts ***!
  \**********************************************************************************/
/*! exports provided: DevicerealtimesubmenuComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DevicerealtimesubmenuComponent", function() { return DevicerealtimesubmenuComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_4__);





var DevicerealtimesubmenuComponent = /** @class */ (function () {
    function DevicerealtimesubmenuComponent(service) {
        var _this = this;
        this.service = service;
        this.msgs = [];
        this.errordisplayflag = false;
        this.errorDta = "this notan eroor frommy side";
        var obj = new src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_2__["RealTimeComment"]("start");
        this.service.realTime(obj).subscribe(function (response) { return _this.handleSuccess(response); }, function (error) { return _this.handleError(error); });
        console.log("constructor worked");
    }
    DevicerealtimesubmenuComponent.prototype.ngOnDestroy = function () {
        var _this = this;
        // alert(`I'm leaving the app!`);
        var obj = new src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_2__["RealTimeComment"]("end");
        this.service.realTime(obj).subscribe(function (response) { return _this.handleSuccess(response); }, function (error) { return _this.handleError(error); });
        if (this.interval) {
            clearInterval(this.interval);
            console.log("ngOnDestroy");
        }
    };
    DevicerealtimesubmenuComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.cols = [
            { field: 'device_name', header: 'Device Name' },
            { field: 'device_SN', header: 'Serial Number' },
            { field: 'punch_status', header: 'Punch_status' },
            { field: 'punch_time', header: 'Area punch_time' },
            { field: 'last_id', header: 'last_id' },
            { field: 'personal_No', header: 'Last personal_No' },
            { field: 'area_name', header: 'area_name' },
            { field: 'verification_mode', header: 'verification_mode' },
            { field: 'work_code', header: 'work_code' }
        ];
        // interval(1000).subscribe(x=>console.log(x))
        var obj = new src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_2__["RealTimeComment"]("start");
        this.interval = Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["interval"])(10000).subscribe(function () { return _this.service.realTime(obj).subscribe(function (response) { return _this.handleSuccess(response); }, function (error) { return _this.handleError(error); }); });
        console.log("ng on init worked");
    };
    DevicerealtimesubmenuComponent.prototype.handleSuccess = function (response) {
        console.log("handleSuccess real time");
        console.log(response);
        if (response == "No data") {
            this.showError1("Please Waite Some More Time,");
            this.datas = response;
        }
        else
            this.datas = response;
    };
    DevicerealtimesubmenuComponent.prototype.handleError = function (error) {
        console.log("handle  Error");
        console.log(error);
        this.datas = error;
        this.showError();
    };
    DevicerealtimesubmenuComponent.prototype.showError1 = function (data) {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Info Message : ', detail: data });
    };
    DevicerealtimesubmenuComponent.prototype.showError = function () {
        this.msgs = [];
        this.msgs.push({ severity: 'error', summary: 'Error Message : ', detail: "Server is Not responding,Please Try again Later" });
    };
    DevicerealtimesubmenuComponent.ctorParameters = function () { return [
        { type: src_app_service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_2__["DeviceserviceService"] }
    ]; };
    DevicerealtimesubmenuComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-devicerealtimesubmenu',
            template: __webpack_require__(/*! raw-loader!./devicerealtimesubmenu.component.html */ "./node_modules/raw-loader/index.js!./src/app/submenu/devicerealtimesubmenu/devicerealtimesubmenu.component.html"),
            providers: [primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_4__["MessageService"]],
            styles: [__webpack_require__(/*! ./devicerealtimesubmenu.component.css */ "./src/app/submenu/devicerealtimesubmenu/devicerealtimesubmenu.component.css")]
        })
    ], DevicerealtimesubmenuComponent);
    return DevicerealtimesubmenuComponent;
}());



/***/ }),

/***/ "./src/app/submenu/devicesubmenu/devicesubmenu.component.css":
/*!*******************************************************************!*\
  !*** ./src/app/submenu/devicesubmenu/devicesubmenu.component.css ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1Ym1lbnUvZGV2aWNlc3VibWVudS9kZXZpY2VzdWJtZW51LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/submenu/devicesubmenu/devicesubmenu.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/submenu/devicesubmenu/devicesubmenu.component.ts ***!
  \******************************************************************/
/*! exports provided: DevicesubmenuComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DevicesubmenuComponent", function() { return DevicesubmenuComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var DevicesubmenuComponent = /** @class */ (function () {
    function DevicesubmenuComponent() {
    }
    DevicesubmenuComponent.prototype.ngOnInit = function () {
    };
    DevicesubmenuComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-devicesubmenu',
            template: __webpack_require__(/*! raw-loader!./devicesubmenu.component.html */ "./node_modules/raw-loader/index.js!./src/app/submenu/devicesubmenu/devicesubmenu.component.html"),
            styles: [__webpack_require__(/*! ./devicesubmenu.component.css */ "./src/app/submenu/devicesubmenu/devicesubmenu.component.css")]
        })
    ], DevicesubmenuComponent);
    return DevicesubmenuComponent;
}());



/***/ }),

/***/ "./src/app/submenu/personnelsubmenu/personnelsubmenu.component.css":
/*!*************************************************************************!*\
  !*** ./src/app/submenu/personnelsubmenu/personnelsubmenu.component.css ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1Ym1lbnUvcGVyc29ubmVsc3VibWVudS9wZXJzb25uZWxzdWJtZW51LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/submenu/personnelsubmenu/personnelsubmenu.component.ts":
/*!************************************************************************!*\
  !*** ./src/app/submenu/personnelsubmenu/personnelsubmenu.component.ts ***!
  \************************************************************************/
/*! exports provided: PersonnelsubmenuComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PersonnelsubmenuComponent", function() { return PersonnelsubmenuComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var PersonnelsubmenuComponent = /** @class */ (function () {
    function PersonnelsubmenuComponent() {
    }
    PersonnelsubmenuComponent.prototype.ngOnInit = function () {
    };
    PersonnelsubmenuComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-personnelsubmenu',
            template: __webpack_require__(/*! raw-loader!./personnelsubmenu.component.html */ "./node_modules/raw-loader/index.js!./src/app/submenu/personnelsubmenu/personnelsubmenu.component.html"),
            styles: [__webpack_require__(/*! ./personnelsubmenu.component.css */ "./src/app/submenu/personnelsubmenu/personnelsubmenu.component.css")]
        })
    ], PersonnelsubmenuComponent);
    return PersonnelsubmenuComponent;
}());



/***/ }),

/***/ "./src/app/submenu/systemsubmenu/systemsubmenu.component.css":
/*!*******************************************************************!*\
  !*** ./src/app/submenu/systemsubmenu/systemsubmenu.component.css ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1Ym1lbnUvc3lzdGVtc3VibWVudS9zeXN0ZW1zdWJtZW51LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/submenu/systemsubmenu/systemsubmenu.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/submenu/systemsubmenu/systemsubmenu.component.ts ***!
  \******************************************************************/
/*! exports provided: SystemsubmenuComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SystemsubmenuComponent", function() { return SystemsubmenuComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var SystemsubmenuComponent = /** @class */ (function () {
    function SystemsubmenuComponent() {
    }
    SystemsubmenuComponent.prototype.ngOnInit = function () {
    };
    SystemsubmenuComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-systemsubmenu',
            template: __webpack_require__(/*! raw-loader!./systemsubmenu.component.html */ "./node_modules/raw-loader/index.js!./src/app/submenu/systemsubmenu/systemsubmenu.component.html"),
            styles: [__webpack_require__(/*! ./systemsubmenu.component.css */ "./src/app/submenu/systemsubmenu/systemsubmenu.component.css")]
        })
    ], SystemsubmenuComponent);
    return SystemsubmenuComponent;
}());



/***/ }),

/***/ "./src/app/superadmin/superadmin.component.css":
/*!*****************************************************!*\
  !*** ./src/app/superadmin/superadmin.component.css ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1cGVyYWRtaW4vc3VwZXJhZG1pbi5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/superadmin/superadmin.component.ts":
/*!****************************************************!*\
  !*** ./src/app/superadmin/superadmin.component.ts ***!
  \****************************************************/
/*! exports provided: SuperadminComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SuperadminComponent", function() { return SuperadminComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _service_login_loginservice_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../service/login/loginservice.service */ "./src/app/service/login/loginservice.service.ts");



var SuperadminComponent = /** @class */ (function () {
    function SuperadminComponent(loginService) {
        this.loginService = loginService;
        this.data = {
            labels: ['A', 'B', 'C'],
            datasets: [
                {
                    data: [300, 50, 100],
                    backgroundColor: [
                        "#FF6384",
                        "#36A2EB",
                        "#FFCE56"
                    ],
                    hoverBackgroundColor: [
                        "#FF6384",
                        "#36A2EB",
                        "#FFCE56"
                    ]
                }
            ]
        };
    }
    SuperadminComponent.prototype.getWelcomemessage = function () {
    };
    SuperadminComponent.prototype.ngOnInit = function () {
    };
    SuperadminComponent.prototype.successfulResponse = function (response) {
        //public :string,public :boolean,public :boolean,public :boolean)
        //  console.log(response.username);
        //  console.log(response.is_active);
        //  console.log(response.is_superuser);
        //  console.log(response.is_staff);
        // console.log("succ");
        console.log(response);
        //console.log(response.id);
        //console.log(response.name);
        //console.log(response.password);
        //console.log(this.alluser=response);
    };
    SuperadminComponent.prototype.errorResponse = function (error) {
        //console.log("testerror");
        console.log(error);
        // console.log(error.statusText);
    };
    SuperadminComponent.prototype.deleteuser = function (id) {
        console.log(id);
    };
    SuperadminComponent.prototype.getPostmessage = function () {
    };
    SuperadminComponent.ctorParameters = function () { return [
        { type: _service_login_loginservice_service__WEBPACK_IMPORTED_MODULE_2__["LoginserviceService"] }
    ]; };
    SuperadminComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-superadmin',
            template: __webpack_require__(/*! raw-loader!./superadmin.component.html */ "./node_modules/raw-loader/index.js!./src/app/superadmin/superadmin.component.html"),
            styles: [__webpack_require__(/*! ./superadmin.component.css */ "./src/app/superadmin/superadmin.component.css")]
        })
    ], SuperadminComponent);
    return SuperadminComponent;
}());



/***/ }),

/***/ "./src/app/system/add-new-normal-user/NewNormalUserModel.ts":
/*!******************************************************************!*\
  !*** ./src/app/system/add-new-normal-user/NewNormalUserModel.ts ***!
  \******************************************************************/
/*! exports provided: newNormalUserModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newNormalUserModel", function() { return newNormalUserModel; });
var newNormalUserModel = /** @class */ (function () {
    function newNormalUserModel(username, password, email, first_name, last_name, is_superuser, is_staff, is_active) {
        this.username = username;
        this.password = password;
        this.email = email;
        this.first_name = first_name;
        this.last_name = last_name;
        this.is_superuser = is_superuser;
        this.is_staff = is_staff;
        this.is_active = is_active;
    }
    newNormalUserModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: Boolean },
        { type: Boolean },
        { type: Boolean }
    ]; };
    return newNormalUserModel;
}());



/***/ }),

/***/ "./src/app/system/add-new-normal-user/add-new-normal-user.component.css":
/*!******************************************************************************!*\
  !*** ./src/app/system/add-new-normal-user/add-new-normal-user.component.css ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS9hZGQtbmV3LW5vcm1hbC11c2VyL2FkZC1uZXctbm9ybWFsLXVzZXIuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/system/add-new-normal-user/add-new-normal-user.component.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/system/add-new-normal-user/add-new-normal-user.component.ts ***!
  \*****************************************************************************/
/*! exports provided: AddNewNormalUserComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddNewNormalUserComponent", function() { return AddNewNormalUserComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var src_app_service_system_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/service/system.service */ "./src/app/service/system.service.ts");
/* harmony import */ var _NewNormalUserModel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./NewNormalUserModel */ "./src/app/system/add-new-normal-user/NewNormalUserModel.ts");






var AddNewNormalUserComponent = /** @class */ (function () {
    function AddNewNormalUserComponent(systemservices) {
        this.systemservices = systemservices;
        this.msgs = [];
        this.is_superuser = true;
        this.is_staff = false;
        this.is_active = false;
        this.userType_array = [
            { id: 0, name: "Super Admin" },
            { id: 1, name: "Staff" },
        ];
        this.userType_init = 0;
        this.userType_data = this.userType_array[this.userType_init].name;
        this.userStatus_array = [
            { id: 0, name: "Inactive" },
            { id: 1, name: "Active" },
        ];
        this.userStatus_init = 0;
        this.userStatus_data = this.userStatus_array[this.userStatus_init].name;
    }
    AddNewNormalUserComponent.prototype.ngOnInit = function () {
    };
    AddNewNormalUserComponent.prototype.getaddNewUserForm = function (form) {
        var _this = this;
        var obj = new _NewNormalUserModel__WEBPACK_IMPORTED_MODULE_5__["newNormalUserModel"](this.username, this.password, this.email, this.first_name, this.last_name, this.is_superuser, this.is_staff, this.is_active);
        console.log(obj);
        this.systemservices.newUserRegistration(obj).subscribe(function (response) { return _this.Successs(response); }, function (error) { return _this.Error(error); });
    };
    AddNewNormalUserComponent.prototype.userTypeMethod = function (data) {
        console.log(data);
        this.userType_init = data;
        if (this.userType_init == 0) {
            this.is_superuser = true;
            this.is_staff = false;
        }
        if (this.userType_init == 1) {
            this.is_staff = true;
            this.is_superuser = false;
        }
    };
    AddNewNormalUserComponent.prototype.userStatusMethod = function (data) {
        console.log(data);
        if (data == 0)
            this.is_active = false;
        if (data == 1)
            this.is_active = true;
    };
    AddNewNormalUserComponent.prototype.Successs = function (response) {
        console.log(response);
        console.log(response.responce_data);
        if (response.responce_data == "Success") {
            this.showError1("New User Successfully Added");
        }
        else {
            this.showError1(response.responce_data);
        }
    };
    AddNewNormalUserComponent.prototype.Error = function (error) {
        console.log(error);
        console.log(error.responce_data);
        this.showError();
    };
    AddNewNormalUserComponent.prototype.showError1 = function (data) {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Message', detail: data });
    };
    AddNewNormalUserComponent.prototype.showError = function () {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Message', detail: "Server is Not Responding,Please Try Again later" });
    };
    AddNewNormalUserComponent.ctorParameters = function () { return [
        { type: src_app_service_system_service__WEBPACK_IMPORTED_MODULE_4__["SystemService"] }
    ]; };
    AddNewNormalUserComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-new-normal-user',
            template: __webpack_require__(/*! raw-loader!./add-new-normal-user.component.html */ "./node_modules/raw-loader/index.js!./src/app/system/add-new-normal-user/add-new-normal-user.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_2__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_3__["MessageService"]],
            styles: [__webpack_require__(/*! ./add-new-normal-user.component.css */ "./src/app/system/add-new-normal-user/add-new-normal-user.component.css")]
        })
    ], AddNewNormalUserComponent);
    return AddNewNormalUserComponent;
}());



/***/ }),

/***/ "./src/app/system/oracle-data-setup/oracle-data-setup.component.css":
/*!**************************************************************************!*\
  !*** ./src/app/system/oracle-data-setup/oracle-data-setup.component.css ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS9vcmFjbGUtZGF0YS1zZXR1cC9vcmFjbGUtZGF0YS1zZXR1cC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/system/oracle-data-setup/oracle-data-setup.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/system/oracle-data-setup/oracle-data-setup.component.ts ***!
  \*************************************************************************/
/*! exports provided: OracleDataSetupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OracleDataSetupComponent", function() { return OracleDataSetupComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _oracleDbModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./oracleDbModel */ "./src/app/system/oracle-data-setup/oracleDbModel.ts");
/* harmony import */ var src_app_service_system_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/service/system.service */ "./src/app/service/system.service.ts");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_5__);






var OracleDataSetupComponent = /** @class */ (function () {
    function OracleDataSetupComponent(systemservices) {
        this.systemservices = systemservices;
        this.db_name = null;
        this.db_password = null;
        this.ip_add = null;
        this.port = null;
        this.db_serves = null;
        this.table_name = null;
        this.upload_mode = null;
        this.time_interval = null;
        this.msgs = [];
        this.uploadMode_array = [
            { id: 0, name: "Auto" },
            { id: 1, name: "Time" },
            { id: 2, name: "Manual" }
        ];
        this.uploadMode_init = 0;
        this.uploadMode_data = this.uploadMode_array[this.uploadMode_init].name;
        this.isEnabled = true;
    }
    OracleDataSetupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.systemservices.getoracleDBSettings().subscribe(function (response) { return _this.SuccesssOracleDBGet(response); }, function (error) { return _this.ErrorOracleDBGet(error); });
    };
    OracleDataSetupComponent.prototype.getDbSettings = function (form) {
        var _this = this;
        console.log(form);
        var obj = new _oracleDbModel__WEBPACK_IMPORTED_MODULE_2__["OracleDdModel"](this.db_name, this.db_password, this.ip_add, this.port, this.db_serves, this.table_name, this.uploadMode_data, this.time_interval);
        console.log(obj);
        this.systemservices.oracleDBSettingPost(obj).subscribe(function (response) { return _this.SuccesssOracleDB(response); }, function (error) { return _this.ErrorOracleDB(error); });
    };
    OracleDataSetupComponent.prototype.uploadmodeMethod = function (data) {
        console.log(data);
        if (data == 1)
            this.isEnabled = false;
        else
            this.isEnabled = true;
        this.uploadMode_data = this.uploadMode_array[data].name;
    };
    OracleDataSetupComponent.prototype.SuccesssOracleDB = function (response) {
        console.log(response);
        console.log(response.responce_data);
        if (response.responce_data = "Success") {
            this.showError1("New DB Setting Successfully Added");
            this.msgs.push({ severity: 'success', summary: 'Success Message', detail: 'Record is Saved' });
        }
        else {
            this.showError1(response.responce_data);
        }
    };
    OracleDataSetupComponent.prototype.ErrorOracleDB = function (error) {
        console.log(error);
        console.log(error.responce_data);
        this.showError();
    };
    OracleDataSetupComponent.prototype.SuccesssOracleDBGet = function (response) {
        console.log("edit mode suucess");
        console.log(response);
        this.db_name = response[0].db_name;
        this.db_password = response[0].db_password;
        this.ip_add = response[0].ip_add;
        this.port = response[0].port;
        this.db_serves = response[0].db_serves;
        this.table_name = response[0].table_name;
        this.uploadMode_data = response[0].upload_mode;
        if (this.uploadMode_data == 'Auto')
            this.uploadMode_init = 0;
        if (this.uploadMode_data == 'Time')
            this.uploadMode_init = 1;
        if (this.uploadMode_data == 'Manual')
            this.uploadMode_init = 2;
        this.time_interval = response[0].time_interval;
    };
    OracleDataSetupComponent.prototype.ErrorOracleDBGet = function (error) {
        console.log(error);
        console.log(error.responce_data);
        this.showError();
    };
    OracleDataSetupComponent.prototype.showError1 = function (data) {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Message', detail: data });
    };
    OracleDataSetupComponent.prototype.showError = function () {
        this.msgs = [];
        this.msgs.push({ severity: 'info', summary: 'Message', detail: "Server is Not Responding,Please Try Again later" });
    };
    OracleDataSetupComponent.ctorParameters = function () { return [
        { type: src_app_service_system_service__WEBPACK_IMPORTED_MODULE_3__["SystemService"] }
    ]; };
    OracleDataSetupComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-oracle-data-setup',
            template: __webpack_require__(/*! raw-loader!./oracle-data-setup.component.html */ "./node_modules/raw-loader/index.js!./src/app/system/oracle-data-setup/oracle-data-setup.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_4__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_5__["MessageService"]],
            styles: [__webpack_require__(/*! ./oracle-data-setup.component.css */ "./src/app/system/oracle-data-setup/oracle-data-setup.component.css")]
        })
    ], OracleDataSetupComponent);
    return OracleDataSetupComponent;
}());



/***/ }),

/***/ "./src/app/system/oracle-data-setup/oracleDbModel.ts":
/*!***********************************************************!*\
  !*** ./src/app/system/oracle-data-setup/oracleDbModel.ts ***!
  \***********************************************************/
/*! exports provided: OracleDdModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OracleDdModel", function() { return OracleDdModel; });
var OracleDdModel = /** @class */ (function () {
    function OracleDdModel(db_name, db_password, ip_add, port, db_serves, table_name, upload_mode, time_interval) {
        this.db_name = db_name;
        this.db_password = db_password;
        this.ip_add = ip_add;
        this.port = port;
        this.db_serves = db_serves;
        this.table_name = table_name;
        this.upload_mode = upload_mode;
        this.time_interval = time_interval;
    }
    OracleDdModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return OracleDdModel;
}());



/***/ }),

/***/ "./src/app/system/system.component.css":
/*!*********************************************!*\
  !*** ./src/app/system/system.component.css ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS9zeXN0ZW0uY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/system/system.component.ts":
/*!********************************************!*\
  !*** ./src/app/system/system.component.ts ***!
  \********************************************/
/*! exports provided: SystemComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SystemComponent", function() { return SystemComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var SystemComponent = /** @class */ (function () {
    function SystemComponent() {
    }
    SystemComponent.prototype.ngOnInit = function () {
    };
    SystemComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-system',
            template: __webpack_require__(/*! raw-loader!./system.component.html */ "./node_modules/raw-loader/index.js!./src/app/system/system.component.html"),
            styles: [__webpack_require__(/*! ./system.component.css */ "./src/app/system/system.component.css")]
        })
    ], SystemComponent);
    return SystemComponent;
}());



/***/ }),

/***/ "./src/app/testing/testing.component.css":
/*!***********************************************!*\
  !*** ./src/app/testing/testing.component.css ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host ::ng-deep button {\r\n    margin-right: .25em;\r\n}\r\n\r\n:host ::ng-deep .ui-message,\r\n:host ::ng-deep .ui-inputtext {\r\n    margin-right: .25em;\r\n}\r\n\r\n:host ::ng-deep button {\r\n    margin-right: .25em;\r\n}\r\n\r\n:host ::ng-deep .custom-toast .ui-toast-message {\r\n    color: #ffffff;\r\n    background: #FC466B;\r\n    background: linear-gradient(to right, #3F5EFB, #FC466B);\r\n}\r\n\r\n:host ::ng-deep .custom-toast .ui-toast-close-icon {\r\n    color: #ffffff;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVzdGluZy90ZXN0aW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7O0lBRUksbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksY0FBYztJQUNkLG1CQUFtQjtJQUVuQix1REFBdUQ7QUFDM0Q7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvdGVzdGluZy90ZXN0aW5nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCA6Om5nLWRlZXAgYnV0dG9uIHtcclxuICAgIG1hcmdpbi1yaWdodDogLjI1ZW07XHJcbn1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAudWktbWVzc2FnZSxcclxuOmhvc3QgOjpuZy1kZWVwIC51aS1pbnB1dHRleHQge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAuMjVlbTtcclxufVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IC4yNWVtO1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLmN1c3RvbS10b2FzdCAudWktdG9hc3QtbWVzc2FnZSB7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIGJhY2tncm91bmQ6ICNGQzQ2NkI7XHJcbiAgICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzNGNUVGQiwgI0ZDNDY2Qik7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICMzRjVFRkIsICNGQzQ2NkIpO1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLmN1c3RvbS10b2FzdCAudWktdG9hc3QtY2xvc2UtaWNvbiB7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/testing/testing.component.ts":
/*!**********************************************!*\
  !*** ./src/app/testing/testing.component.ts ***!
  \**********************************************/
/*! exports provided: Car, TestingComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Car", function() { return Car; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TestingComponent", function() { return TestingComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../service/device/deviceservice.service */ "./src/app/service/device/deviceservice.service.ts");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! primeng/components/common/api */ "./node_modules/primeng/components/common/api.js");
/* harmony import */ var primeng_components_common_api__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_api__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! primeng/components/common/messageservice */ "./node_modules/primeng/components/common/messageservice.js");
/* harmony import */ var primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_5__);





//declare let jsPDF:any;

var jsPDF = __webpack_require__(/*! jspdf */ "./node_modules/jspdf/dist/jspdf.min.js");
__webpack_require__(/*! jspdf-autotable */ "./node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.js");
var Car = /** @class */ (function () {
    function Car(vin, year, brand, color) {
        this.vin = vin;
        this.year = year;
        this.brand = brand;
        this.color = color;
    }
    Car.ctorParameters = function () { return [
        { type: Number },
        { type: Number },
        { type: String },
        { type: String }
    ]; };
    return Car;
}());

var TestingComponent = /** @class */ (function () {
    function TestingComponent(carService, messageService, confirmationService) {
        this.carService = carService;
        this.messageService = messageService;
        this.confirmationService = confirmationService;
        this.pagenum = 15;
        this.sum = 0;
        this.sumOriginal = 10;
        this.totalRecords = 0;
        this.count = 1;
        this.clonedCars = {};
        this.msgs = [];
        this.MySum = [];
    }
    TestingComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.sum = 0;
        console.log("ngOnInit");
        // this.messageService.add({severity:'success', summary:'Service Message', detail:'Via MessageService'});
        this.carService.getCarsSmall().subscribe(function (data) { return _this.successes(data); }, function (error) { return _this.erroerhandle(error); });
        // this.carService.getCarsSmall().then(cars => this.cars2 = cars);
        this.brands = [
            { label: 'Audi', value: 'Audi' },
            { label: 'BMW', value: 'BMW' },
            { label: 'Fiat', value: 'Fiat' },
            { label: 'Ford', value: 'Ford' },
            { label: 'Honda', value: 'Honda' },
            { label: 'Jaguar', value: 'Jaguar' },
            { label: 'Mercedes', value: 'Mercedes' },
            { label: 'Renault', value: 'Renault' },
            { label: 'VW', value: 'VW' },
            { label: 'Volvo', value: 'Volvo' }
        ];
        this.cols = [
            { field: 'vin', header: 'Vin' },
            { field: 'year', header: 'Year' },
            { field: 'brand', header: 'Brand' },
            { field: 'color', header: 'Color' },
            { field: 'action', header: 'Action' }
        ];
        this.cols1 = [
            { field: 'vin', header: 'Vin' },
            { field: 'year', header: 'Year' },
            { field: 'brand', header: 'Brand' },
            { field: 'color', header: 'Color' }
        ];
    };
    TestingComponent.prototype.erroerhandle = function (error) {
        console.log("error");
    };
    TestingComponent.prototype.successes = function (data) {
        // console.log("successes");
        // this.msgs = [];
        // this.msgs.push({severity:'success', summary:'Success Message', detail:'Order submitted'});
        // this.messageService.add({severity:'success', summary:'Service Message', detail:'Via MessageService'});
        //  console.log(data);
        this.cars = data;
    };
    TestingComponent.prototype.onRowEditInit = function (car) {
        console.log("onRowEditInit");
        this.clonedCars[car.vin] = tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"]({}, car);
    };
    TestingComponent.prototype.onRowEditSave = function (car) {
        var _this = this;
        console.log(car.year);
        console.log("In Edit cancel");
        this.carService.getCarsSmall2().subscribe(function (data) { return _this.successes(data); }, function (error) { return _this.erroerhandle(error); });
        if (car.year > 2000) {
            this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
        }
        else {
            this.messageService.add({ severity: 'error', summary: 'Error Message', detail: 'Validation failed' });
        }
    };
    TestingComponent.prototype.onRowEditCancel = function (car, index) {
    };
    TestingComponent.prototype.onRowRemove = function (car, index) {
        var _this = this;
        console.log("rowData");
        console.log(car);
        console.log("ri");
        console.log(index);
        this.confirmationService.confirm({
            message: 'Are you sure that you want to proceed?',
            header: 'Confirmation',
            icon: 'pi pi-exclamation-triangle',
            accept: function () {
                _this.msgs = [{ severity: 'info', summary: 'Confirmed', detail: 'You have accepted' }];
                console.log("YES");
            },
            reject: function () {
                _this.msgs = [{ severity: 'info', summary: 'Rejected', detail: 'You have rejected' }];
                console.log("NOS");
            }
        });
    };
    TestingComponent.prototype.showSuccess = function () {
        this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Order submitted' });
    };
    TestingComponent.prototype.mytabledetails = function (table) {
        this.totalRecords = table._totalRecords;
        console.log(table);
        var filterValue = table.filteredValue;
        var sum1 = 0;
        var year;
        var year1;
        console.log("filter value");
        console.log(filterValue);
        if (filterValue && filterValue.length != 0) {
            console.log("filtered value  " + table.filteredValue[0]['year']);
            sum1 = 0;
            this.sum = 0;
            for (var i = 0; i < table.filteredValue.length; i++) {
                console.log(table.filteredValue[i]['year']);
                year = table.filteredValue[i]['year'];
                year1 = parseInt(year);
                sum1 = sum1 + year1;
                this.sum = sum1;
            }
            console.log("The sum is " + sum1);
        }
        else {
            console.log("no filter value");
            this.sum = 0;
            sum1 = 0;
            for (var i = 0; i < table._totalRecords; i++) {
                //console.log(this.tableData[i]['year'])
                sum1 = sum1 + parseInt(table._value[i]['year']);
                //console.log("sum ="+this.sum)
                this.sum = sum1;
            }
            console.log("Else some " + this.sum);
        }
    };
    TestingComponent.prototype.mypdfconvert = function (mytable) {
        console.log(mytable);
        var arrayOfArray = jquery__WEBPACK_IMPORTED_MODULE_5__('table tr').map(function () {
            return [
                jquery__WEBPACK_IMPORTED_MODULE_5__('td', this).map(function () {
                    return jquery__WEBPACK_IMPORTED_MODULE_5__(this).text();
                }).get()
            ];
        });
        console.log("arrayOfArray");
        console.log(arrayOfArray);
        var columnLength = arrayOfArray.length;
        var rowLength = arrayOfArray[0].length;
        if (rowLength === 0) {
            rowLength = arrayOfArray[2].length;
            console.log("row lengtgh " + rowLength);
            console.log("column lengtgh " + columnLength);
        }
        var doc = new jsPDF();
        var col = ["Vin", "Year", "Brand", "Color"];
        var col1 = ["Company1", "Contact", "Country"];
        var rows = [];
        var count = 1;
        for (var j = 0; j < columnLength; j++) {
            var temp = [];
            for (var i = 0; i < rowLength - 1; i++) {
                if ((arrayOfArray[j].length) == 0) {
                    console.log("lenth is ZEROo");
                }
                else {
                    console.log("not ZERo");
                    var data = arrayOfArray[j][i];
                    temp.push(arrayOfArray[j][i]);
                }
            }
            if ((arrayOfArray[j].length) != 0) {
                rows.push(temp);
            }
        }
        console.log(rows);
        doc.autoTable(col, rows);
        doc.save('Test.pdf');
    };
    TestingComponent.ctorParameters = function () { return [
        { type: _service_device_deviceservice_service__WEBPACK_IMPORTED_MODULE_2__["DeviceserviceService"] },
        { type: primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_4__["MessageService"] },
        { type: primeng_components_common_api__WEBPACK_IMPORTED_MODULE_3__["ConfirmationService"] }
    ]; };
    TestingComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-testing',
            template: __webpack_require__(/*! raw-loader!./testing.component.html */ "./node_modules/raw-loader/index.js!./src/app/testing/testing.component.html"),
            providers: [primeng_components_common_api__WEBPACK_IMPORTED_MODULE_3__["ConfirmationService"], primeng_components_common_messageservice__WEBPACK_IMPORTED_MODULE_4__["MessageService"]],
            styles: [__webpack_require__(/*! ./testing.component.css */ "./src/app/testing/testing.component.css")]
        })
    ], TestingComponent);
    return TestingComponent;
}());



/***/ }),

/***/ "./src/app/token-interceptor.service.ts":
/*!**********************************************!*\
  !*** ./src/app/token-interceptor.service.ts ***!
  \**********************************************/
/*! exports provided: TokenInterceptorService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TokenInterceptorService", function() { return TokenInterceptorService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _service_login_loginservice_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./service/login/loginservice.service */ "./src/app/service/login/loginservice.service.ts");



var TokenInterceptorService = /** @class */ (function () {
    function TokenInterceptorService(injector, logisService) {
        this.injector = injector;
        this.logisService = logisService;
    }
    TokenInterceptorService.prototype.intercept = function (req, next) {
        var token = localStorage.getItem("token");
        if (token) {
            // console.log("inter ceptor"+token)
            var token2 = "token ";
            //  console.log(token2+token)
            token2 = token2 + token;
            var authReq = req.clone({
                setHeaders: { Authorization: token2 }
            });
            return next.handle(authReq);
        }
        else {
            // console.log("no token")
            //return next.handle(req);
            return next.handle(req);
        }
    };
    TokenInterceptorService.ctorParameters = function () { return [
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] },
        { type: _service_login_loginservice_service__WEBPACK_IMPORTED_MODULE_2__["LoginserviceService"] }
    ]; };
    TokenInterceptorService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        })
    ], TokenInterceptorService);
    return TokenInterceptorService;
}());



/***/ }),

/***/ "./src/app/user/user.component.css":
/*!*****************************************!*\
  !*** ./src/app/user/user.component.css ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/user/user.component.ts":
/*!****************************************!*\
  !*** ./src/app/user/user.component.ts ***!
  \****************************************/
/*! exports provided: UserComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserComponent", function() { return UserComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var UserComponent = /** @class */ (function () {
    function UserComponent() {
    }
    UserComponent.prototype.ngOnInit = function () {
    };
    UserComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-user',
            template: __webpack_require__(/*! raw-loader!./user.component.html */ "./node_modules/raw-loader/index.js!./src/app/user/user.component.html"),
            styles: [__webpack_require__(/*! ./user.component.css */ "./src/app/user/user.component.css")]
        })
    ], UserComponent);
    return UserComponent;
}());



/***/ }),

/***/ "./src/environments/environment.ts":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.
var environment = {
    production: false,
};
/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/dist/zone-error';  // Included with Angular CLI.


/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hammerjs */ "./node_modules/hammerjs/hammer.js");
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(hammerjs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "./node_modules/@angular/platform-browser-dynamic/fesm5/platform-browser-dynamic.js");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/app.module */ "./src/app/app.module.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./environments/environment */ "./src/environments/environment.ts");





if (_environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["enableProdMode"])();
}
Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_2__["platformBrowserDynamic"])().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_3__["AppModule"])
    .catch(function (err) { return console.error(err); });


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\Users\CITE-N\Desktop\Angular\ZK\7-20-2020\my-first-App\src\main.ts */"./src/main.ts");


/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main-es5.js.map